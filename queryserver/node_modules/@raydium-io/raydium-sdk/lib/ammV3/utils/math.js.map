{"version":3,"sources":["../../../src/ammV3/utils/math.ts","../../../src/entity/amount.ts","../../../src/common/convert-json.ts","../../../src/common/pubkey.ts","../../../src/common/logger.ts","../../../src/version.ts","../../../src/common/inspect.ts","../../../src/common/lodash.ts","../../../src/common/web3.ts","../../../src/entity/bignumber.ts","../../../src/entity/constant.ts","../../../src/token/sol.ts","../../../src/token/mainnet.ts","../../../src/token/devnet.ts","../../../src/token/testnet.ts","../../../src/token/util.ts","../../../src/entity/currency.ts","../../../src/entity/fraction.ts","../../../src/entity/to-format.ts","../../../src/entity/percent.ts","../../../src/entity/price.ts","../../../src/ammV3/utils/constants.ts","../../../src/marshmallow/index.ts","../../../src/marshmallow/buffer-layout.ts","../../../src/ammV3/utils/tick.ts","../../../src/ammV3/utils/pda.ts","../../../src/ammV3/utils/util.ts","../../../src/ammV3/layout.ts","../../../src/ammV3/utils/tickQuery.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\nimport Decimal from \"decimal.js\";\n\nimport { ONE, ZERO } from \"../../entity\";\n\nimport {\n  BIT_PRECISION, Fee, FEE_RATE_DENOMINATOR, LOG_B_2_X32, LOG_B_P_ERR_MARGIN_LOWER_X64, LOG_B_P_ERR_MARGIN_UPPER_X64,\n  MAX_SQRT_PRICE_X64, MAX_TICK, MaxU64, MaxUint128, MIN_SQRT_PRICE_X64, MIN_TICK, NEGATIVE_ONE, Q128, Q64,\n  U64Resolution,\n} from \"./constants\";\nimport { TickArray } from \"./tick\";\nimport { TickQuery } from \"./tickQuery\";\n\nexport class MathUtil {\n  public static mulDivRoundingUp(a: BN, b: BN, denominator: BN): BN {\n    const numerator = a.mul(b);\n    let result = numerator.div(denominator);\n    if (!numerator.mod(denominator).eq(ZERO)) {\n      result = result.add(ONE);\n    }\n    return result;\n  }\n\n  public static mulDivFloor(a: BN, b: BN, denominator: BN): BN {\n    if (denominator.eq(ZERO)) {\n      throw new Error(\"division by 0\");\n    }\n    return a.mul(b).div(denominator);\n  }\n\n  public static mulDivCeil(a: BN, b: BN, denominator: BN): BN {\n    if (denominator.eq(ZERO)) {\n      throw new Error(\"division by 0\");\n    }\n    const numerator = a.mul(b).add(denominator.sub(ONE));\n    return numerator.div(denominator);\n  }\n\n  public static x64ToDecimal(num: BN, decimalPlaces?: number): Decimal {\n    return new Decimal(num.toString())\n      .div(Decimal.pow(2, 64))\n      .toDecimalPlaces(decimalPlaces);\n  }\n\n  public static decimalToX64(num: Decimal): BN {\n    return new BN(num.mul(Decimal.pow(2, 64)).floor().toFixed());\n  }\n\n  public static wrappingSubU128(n0: BN, n1: BN): BN {\n    return n0.add(Q128).sub(n1).mod(Q128);\n  }\n}\n\n// sqrt price math\nfunction mulRightShift(val: BN, mulBy: BN): BN {\n  return signedRightShift(val.mul(mulBy), 64, 256);\n}\n\nfunction signedLeftShift(n0: BN, shiftBy: number, bitWidth: number) {\n  const twosN0 = n0.toTwos(bitWidth).shln(shiftBy);\n  twosN0.imaskn(bitWidth + 1);\n  return twosN0.fromTwos(bitWidth);\n}\n\nfunction signedRightShift(n0: BN, shiftBy: number, bitWidth: number) {\n  const twoN0 = n0.toTwos(bitWidth).shrn(shiftBy);\n  twoN0.imaskn(bitWidth - shiftBy + 1);\n  return twoN0.fromTwos(bitWidth - shiftBy);\n}\n\nexport class SqrtPriceMath {\n  public static sqrtPriceX64ToPrice(\n    sqrtPriceX64: BN,\n    decimalsA: number,\n    decimalsB: number\n  ): Decimal {\n    return MathUtil.x64ToDecimal(sqrtPriceX64)\n      .pow(2)\n      .mul(Decimal.pow(10, decimalsA - decimalsB));\n  }\n\n  public static priceToSqrtPriceX64(\n    price: Decimal,\n    decimalsA: number,\n    decimalsB: number\n  ): BN {\n    return MathUtil.decimalToX64(\n      price.mul(Decimal.pow(10, decimalsB - decimalsA)).sqrt()\n    );\n  }\n\n  public static getNextSqrtPriceX64FromInput(\n    sqrtPriceX64: BN,\n    liquidity: BN,\n    amountIn: BN,\n    zeroForOne: boolean\n  ): BN {\n    if (!sqrtPriceX64.gt(ZERO)) {\n      throw new Error(\"sqrtPriceX64 must greater than 0\");\n    }\n    if (!liquidity.gt(ZERO)) {\n      throw new Error(\"liquidity must greater than 0\");\n    }\n\n    return zeroForOne\n      ? this.getNextSqrtPriceFromTokenAmountARoundingUp(\n        sqrtPriceX64,\n        liquidity,\n        amountIn,\n        true\n      )\n      : this.getNextSqrtPriceFromTokenAmountBRoundingDown(\n        sqrtPriceX64,\n        liquidity,\n        amountIn,\n        true\n      );\n  }\n\n  public static getNextSqrtPriceX64FromOutput(\n    sqrtPriceX64: BN,\n    liquidity: BN,\n    amountOut: BN,\n    zeroForOne: boolean\n  ): BN {\n    if (!sqrtPriceX64.gt(ZERO)) {\n      throw new Error(\"sqrtPriceX64 must greater than 0\");\n    }\n    if (!liquidity.gt(ZERO)) {\n      throw new Error(\"liquidity must greater than 0\");\n    }\n\n    return zeroForOne\n      ? this.getNextSqrtPriceFromTokenAmountBRoundingDown(\n        sqrtPriceX64,\n        liquidity,\n        amountOut,\n        false\n      )\n      : this.getNextSqrtPriceFromTokenAmountARoundingUp(\n        sqrtPriceX64,\n        liquidity,\n        amountOut,\n        false\n      );\n  }\n\n  private static getNextSqrtPriceFromTokenAmountARoundingUp(\n    sqrtPriceX64: BN,\n    liquidity: BN,\n    amount: BN,\n    add: boolean\n  ): BN {\n    if (amount.eq(ZERO)) return sqrtPriceX64;\n    const liquidityLeftShift = liquidity.shln(U64Resolution);\n\n    if (add) {\n      const numerator1 = liquidityLeftShift;\n      const denominator = liquidityLeftShift.add(amount.mul(sqrtPriceX64));\n      if (denominator.gte(numerator1)) {\n        return MathUtil.mulDivCeil(numerator1, sqrtPriceX64, denominator);\n      }\n      return MathUtil.mulDivRoundingUp(\n        numerator1,\n        ONE,\n        numerator1.div(sqrtPriceX64).add(amount)\n      );\n    } else {\n      const amountMulSqrtPrice = amount.mul(sqrtPriceX64);\n      if (!liquidityLeftShift.gt(amountMulSqrtPrice)) {\n        throw new Error(\n          \"getNextSqrtPriceFromTokenAmountARoundingUp,liquidityLeftShift must gt amountMulSqrtPrice\"\n        );\n      }\n      const denominator = liquidityLeftShift.sub(amountMulSqrtPrice);\n      return MathUtil.mulDivCeil(liquidityLeftShift, sqrtPriceX64, denominator);\n    }\n  }\n\n  private static getNextSqrtPriceFromTokenAmountBRoundingDown(\n    sqrtPriceX64: BN,\n    liquidity: BN,\n    amount: BN,\n    add: boolean\n  ): BN {\n    const deltaY = amount.shln(U64Resolution);\n    if (add) {\n      return sqrtPriceX64.add(deltaY.div(liquidity));\n    } else {\n      const amountDivLiquidity = MathUtil.mulDivRoundingUp(\n        deltaY,\n        ONE,\n        liquidity\n      );\n      if (!sqrtPriceX64.gt(amountDivLiquidity)) {\n        throw new Error(\n          \"getNextSqrtPriceFromTokenAmountBRoundingDown sqrtPriceX64 must gt amountDivLiquidity\"\n        );\n      }\n      return sqrtPriceX64.sub(amountDivLiquidity);\n    }\n  }\n\n  public static getSqrtPriceX64FromTick(tick: number): BN {\n    if (!Number.isInteger(tick)) {\n      throw new Error(\"tick must be integer\");\n    }\n    if (tick < MIN_TICK || tick > MAX_TICK) {\n      throw new Error(\"tick must be in MIN_TICK and MAX_TICK\");\n    }\n    const tickAbs: number = tick < 0 ? tick * -1 : tick;\n\n    let ratio: BN =\n      (tickAbs & 0x1) != 0\n        ? new BN(\"18445821805675395072\")\n        : new BN(\"18446744073709551616\");\n    if ((tickAbs & 0x2) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18444899583751176192\"));\n    if ((tickAbs & 0x4) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18443055278223355904\"));\n    if ((tickAbs & 0x8) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18439367220385607680\"));\n    if ((tickAbs & 0x10) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18431993317065453568\"));\n    if ((tickAbs & 0x20) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18417254355718170624\"));\n    if ((tickAbs & 0x40) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18387811781193609216\"));\n    if ((tickAbs & 0x80) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18329067761203558400\"));\n    if ((tickAbs & 0x100) != 0)\n      ratio = mulRightShift(ratio, new BN(\"18212142134806163456\"));\n    if ((tickAbs & 0x200) != 0)\n      ratio = mulRightShift(ratio, new BN(\"17980523815641700352\"));\n    if ((tickAbs & 0x400) != 0)\n      ratio = mulRightShift(ratio, new BN(\"17526086738831433728\"));\n    if ((tickAbs & 0x800) != 0)\n      ratio = mulRightShift(ratio, new BN(\"16651378430235570176\"));\n    if ((tickAbs & 0x1000) != 0)\n      ratio = mulRightShift(ratio, new BN(\"15030750278694412288\"));\n    if ((tickAbs & 0x2000) != 0)\n      ratio = mulRightShift(ratio, new BN(\"12247334978884435968\"));\n    if ((tickAbs & 0x4000) != 0)\n      ratio = mulRightShift(ratio, new BN(\"8131365268886854656\"));\n    if ((tickAbs & 0x8000) != 0)\n      ratio = mulRightShift(ratio, new BN(\"3584323654725218816\"));\n    if ((tickAbs & 0x10000) != 0)\n      ratio = mulRightShift(ratio, new BN(\"696457651848324352\"));\n    if ((tickAbs & 0x20000) != 0)\n      ratio = mulRightShift(ratio, new BN(\"26294789957507116\"));\n    if ((tickAbs & 0x40000) != 0)\n      ratio = mulRightShift(ratio, new BN(\"37481735321082\"));\n\n    if (tick > 0) ratio = MaxUint128.div(ratio);\n    return ratio;\n  }\n\n  public static getTickFromPrice(\n    price: Decimal,\n    decimalsA: number,\n    decimalsB: number\n  ): number {\n    return SqrtPriceMath.getTickFromSqrtPriceX64(\n      SqrtPriceMath.priceToSqrtPriceX64(price, decimalsA, decimalsB)\n    );\n  }\n\n  public static getTickFromSqrtPriceX64(sqrtPriceX64: BN): number {\n    if (\n      sqrtPriceX64.gt(MAX_SQRT_PRICE_X64) ||\n      sqrtPriceX64.lt(MIN_SQRT_PRICE_X64)\n    ) {\n      throw new Error(\n        \"Provided sqrtPrice is not within the supported sqrtPrice range.\"\n      );\n    }\n\n    const msb = sqrtPriceX64.bitLength() - 1;\n    const adjustedMsb = new BN(msb - 64);\n    const log2pIntegerX32 = signedLeftShift(adjustedMsb, 32, 128);\n\n    let bit = new BN(\"8000000000000000\", \"hex\");\n    let precision = 0;\n    let log2pFractionX64 = new BN(0);\n\n    let r =\n      msb >= 64 ? sqrtPriceX64.shrn(msb - 63) : sqrtPriceX64.shln(63 - msb);\n\n    while (bit.gt(new BN(0)) && precision < BIT_PRECISION) {\n      r = r.mul(r);\n      const rMoreThanTwo = r.shrn(127);\n      r = r.shrn(63 + rMoreThanTwo.toNumber());\n      log2pFractionX64 = log2pFractionX64.add(bit.mul(rMoreThanTwo));\n      bit = bit.shrn(1);\n      precision += 1;\n    }\n\n    const log2pFractionX32 = log2pFractionX64.shrn(32);\n\n    const log2pX32 = log2pIntegerX32.add(log2pFractionX32);\n    const logbpX64 = log2pX32.mul(new BN(LOG_B_2_X32));\n\n    const tickLow = signedRightShift(\n      logbpX64.sub(new BN(LOG_B_P_ERR_MARGIN_LOWER_X64)),\n      64,\n      128\n    ).toNumber();\n    const tickHigh = signedRightShift(\n      logbpX64.add(new BN(LOG_B_P_ERR_MARGIN_UPPER_X64)),\n      64,\n      128\n    ).toNumber();\n\n    if (tickLow == tickHigh) {\n      return tickLow;\n    } else {\n      const derivedTickHighSqrtPriceX64 = SqrtPriceMath.getSqrtPriceX64FromTick(tickHigh)\n      return derivedTickHighSqrtPriceX64.lte(sqrtPriceX64) ? tickHigh : tickLow\n    }\n  }\n}\n\n// tick math\nexport class TickMath {\n  public static getTickWithPriceAndTickspacing(\n    price: Decimal,\n    tickSpacing: number,\n    mintDecimalsA: number,\n    mintDecimalsB: number\n  ) {\n    const tick = SqrtPriceMath.getTickFromSqrtPriceX64(\n      SqrtPriceMath.priceToSqrtPriceX64(\n        price,\n        mintDecimalsA,\n        mintDecimalsB\n      )\n    );\n    let result = tick / tickSpacing;\n    if (result < 0) {\n      result = Math.floor(result);\n    } else {\n      result = Math.ceil(result);\n    }\n    return result * tickSpacing;\n  }\n\n  public static roundPriceWithTickspacing(\n    price: Decimal,\n    tickSpacing: number,\n    mintDecimalsA: number,\n    mintDecimalsB: number\n  ) {\n    const tick = TickMath.getTickWithPriceAndTickspacing(\n      price,\n      tickSpacing,\n      mintDecimalsA,\n      mintDecimalsB\n    );\n    const sqrtPriceX64 = SqrtPriceMath.getSqrtPriceX64FromTick(tick);\n    return SqrtPriceMath.sqrtPriceX64ToPrice(\n      sqrtPriceX64,\n      mintDecimalsA,\n      mintDecimalsB\n    );\n  }\n}\n\nexport class LiquidityMath {\n  public static addDelta(x: BN, y: BN): BN {\n    return x.add(y);\n  }\n\n  public static getTokenAmountAFromLiquidity(\n    sqrtPriceX64A: BN,\n    sqrtPriceX64B: BN,\n    liquidity: BN,\n    roundUp: boolean\n  ): BN {\n    if (sqrtPriceX64A.gt(sqrtPriceX64B)) {\n      [sqrtPriceX64A, sqrtPriceX64B] = [sqrtPriceX64B, sqrtPriceX64A];\n    }\n\n    if (!sqrtPriceX64A.gt(ZERO)) {\n      throw new Error(\"sqrtPriceX64A must greater than 0\");\n    }\n\n    const numerator1 = liquidity.ushln(U64Resolution);\n    const numerator2 = sqrtPriceX64B.sub(sqrtPriceX64A);\n\n    return roundUp\n      ? MathUtil.mulDivRoundingUp(\n        MathUtil.mulDivCeil(numerator1, numerator2, sqrtPriceX64B),\n        ONE,\n        sqrtPriceX64A\n      )\n      : MathUtil.mulDivFloor(numerator1, numerator2, sqrtPriceX64B).div(\n        sqrtPriceX64A\n      );\n  }\n\n  public static getTokenAmountBFromLiquidity(\n    sqrtPriceX64A: BN,\n    sqrtPriceX64B: BN,\n    liquidity: BN,\n    roundUp: boolean\n  ): BN {\n    if (sqrtPriceX64A.gt(sqrtPriceX64B)) {\n      [sqrtPriceX64A, sqrtPriceX64B] = [sqrtPriceX64B, sqrtPriceX64A];\n    }\n    if (!sqrtPriceX64A.gt(ZERO)) {\n      throw new Error(\"sqrtPriceX64A must greater than 0\");\n    }\n\n    return roundUp\n      ? MathUtil.mulDivCeil(liquidity, sqrtPriceX64B.sub(sqrtPriceX64A), Q64)\n      : MathUtil.mulDivFloor(liquidity, sqrtPriceX64B.sub(sqrtPriceX64A), Q64);\n  }\n\n  public static getLiquidityFromTokenAmountA(\n    sqrtPriceX64A: BN,\n    sqrtPriceX64B: BN,\n    amountA: BN,\n    roundUp: boolean\n  ): BN {\n    if (sqrtPriceX64A.gt(sqrtPriceX64B)) {\n      [sqrtPriceX64A, sqrtPriceX64B] = [sqrtPriceX64B, sqrtPriceX64A];\n    }\n\n    const numerator = amountA.mul(sqrtPriceX64A).mul(sqrtPriceX64B);\n    const denominator = sqrtPriceX64B.sub(sqrtPriceX64A);\n    const result = numerator.div(denominator);\n\n    if (roundUp) {\n      return MathUtil.mulDivRoundingUp(result, ONE, MaxU64);\n    } else {\n      return result.shrn(U64Resolution);\n    }\n  }\n\n  public static getLiquidityFromTokenAmountB(\n    sqrtPriceX64A: BN,\n    sqrtPriceX64B: BN,\n    amountB: BN\n  ): BN {\n    if (sqrtPriceX64A.gt(sqrtPriceX64B)) {\n      [sqrtPriceX64A, sqrtPriceX64B] = [sqrtPriceX64B, sqrtPriceX64A];\n    }\n    return MathUtil.mulDivFloor(\n      amountB,\n      MaxU64,\n      sqrtPriceX64B.sub(sqrtPriceX64A)\n    );\n  }\n\n  public static getLiquidityFromTokenAmounts(\n    sqrtPriceCurrentX64: BN,\n    sqrtPriceX64A: BN,\n    sqrtPriceX64B: BN,\n    amountA: BN,\n    amountB: BN\n  ): BN {\n    if (sqrtPriceX64A.gt(sqrtPriceX64B)) {\n      [sqrtPriceX64A, sqrtPriceX64B] = [sqrtPriceX64B, sqrtPriceX64A];\n    }\n\n    if (sqrtPriceCurrentX64.lte(sqrtPriceX64A)) {\n      return LiquidityMath.getLiquidityFromTokenAmountA(\n        sqrtPriceX64A,\n        sqrtPriceX64B,\n        amountA,\n        false\n      );\n    } else if (sqrtPriceCurrentX64.lt(sqrtPriceX64B)) {\n      const liquidity0 = LiquidityMath.getLiquidityFromTokenAmountA(\n        sqrtPriceCurrentX64,\n        sqrtPriceX64B,\n        amountA,\n        false\n      );\n      const liquidity1 = LiquidityMath.getLiquidityFromTokenAmountB(\n        sqrtPriceX64A,\n        sqrtPriceCurrentX64,\n        amountB\n      );\n      return liquidity0.lt(liquidity1) ? liquidity0 : liquidity1;\n    } else {\n      return LiquidityMath.getLiquidityFromTokenAmountB(\n        sqrtPriceX64A,\n        sqrtPriceX64B,\n        amountB\n      );\n    }\n  }\n\n  public static getAmountsFromLiquidity(\n    sqrtPriceCurrentX64: BN,\n    sqrtPriceX64A: BN,\n    sqrtPriceX64B: BN,\n    liquidity: BN,\n    roundUp: boolean\n  ): { amountA: BN, amountB: BN } {\n    if (sqrtPriceX64A.gt(sqrtPriceX64B)) {\n      [sqrtPriceX64A, sqrtPriceX64B] = [sqrtPriceX64B, sqrtPriceX64A];\n    }\n\n    if (sqrtPriceCurrentX64.lte(sqrtPriceX64A)) {\n      return {\n        amountA: LiquidityMath.getTokenAmountAFromLiquidity(\n          sqrtPriceX64A,\n          sqrtPriceX64B,\n          liquidity,\n          roundUp\n        ),\n        amountB: new BN(0)\n      };\n    } else if (sqrtPriceCurrentX64.lt(sqrtPriceX64B)) {\n      const amountA = LiquidityMath.getTokenAmountAFromLiquidity(\n        sqrtPriceCurrentX64,\n        sqrtPriceX64B,\n        liquidity,\n        roundUp\n      );\n      const amountB = LiquidityMath.getTokenAmountBFromLiquidity(\n        sqrtPriceX64A,\n        sqrtPriceCurrentX64,\n        liquidity,\n        roundUp\n      );\n      return { amountA, amountB };\n    } else {\n      return {\n        amountA: new BN(0),\n        amountB: LiquidityMath.getTokenAmountBFromLiquidity(\n          sqrtPriceX64A,\n          sqrtPriceX64B,\n          liquidity,\n          roundUp\n        ),\n      };\n    }\n  }\n\n  public static getAmountsFromLiquidityWithSlippage(\n    sqrtPriceCurrentX64: BN,\n    sqrtPriceX64A: BN,\n    sqrtPriceX64B: BN,\n    liquidity: BN,\n    amountMax: boolean,\n    roundUp: boolean,\n    amountSlippage: number\n  ) {\n    const { amountA, amountB } = LiquidityMath.getAmountsFromLiquidity(\n      sqrtPriceCurrentX64,\n      sqrtPriceX64A,\n      sqrtPriceX64B,\n      liquidity,\n      roundUp\n    );\n    const coefficient = amountMax ? 1 + amountSlippage : 1 - amountSlippage;\n\n    const amount0Slippage = amountA.muln(coefficient)\n    const amount1Slippage = amountB.muln(coefficient)\n    return {\n      amountSlippageA: amount0Slippage,\n      amountSlippageB: amount1Slippage,\n    };\n  }\n}\n\n// swap math\n\ntype SwapStep = {\n  sqrtPriceX64Next: BN;\n  amountIn: BN;\n  amountOut: BN;\n  feeAmount: BN;\n};\n\nexport interface StepComputations {\n  sqrtPriceStartX64: BN;\n  tickNext: number;\n  initialized: boolean;\n  sqrtPriceNextX64: BN;\n  amountIn: BN;\n  amountOut: BN;\n  feeAmount: BN;\n}\n\nexport abstract class SwapMath {\n  public static swapCompute(\n    programId: PublicKey,\n    poolId: PublicKey,\n    tickArrayCache: { [key: string]: TickArray },\n    zeroForOne: boolean,\n    fee: number,\n    liquidity: BN,\n    currentTick: number,\n    tickSpacing: number,\n    currentSqrtPriceX64: BN,\n    amountSpecified: BN,\n    lastSavedTickArrayStartIndex: number,\n    sqrtPriceLimitX64?: BN\n  ) {\n    if (amountSpecified.eq(ZERO)) {\n      throw new Error(\"amountSpecified must not be 0\");\n    }\n    if (!sqrtPriceLimitX64)\n      sqrtPriceLimitX64 = zeroForOne\n        ? MIN_SQRT_PRICE_X64.add(ONE)\n        : MAX_SQRT_PRICE_X64.sub(ONE);\n\n    if (zeroForOne) {\n      if (sqrtPriceLimitX64.lt(MIN_SQRT_PRICE_X64)) {\n        throw new Error(\"sqrtPriceX64 must greater than MIN_SQRT_PRICE_X64\");\n      }\n\n      if (sqrtPriceLimitX64.gte(currentSqrtPriceX64)) {\n        throw new Error(\"sqrtPriceX64 must smaller than current\");\n      }\n    } else {\n      if (sqrtPriceLimitX64.gt(MAX_SQRT_PRICE_X64)) {\n        throw new Error(\"sqrtPriceX64 must smaller than MAX_SQRT_PRICE_X64\");\n      }\n\n      if (sqrtPriceLimitX64.lte(currentSqrtPriceX64)) {\n        throw new Error(\"sqrtPriceX64 must greater than current\");\n      }\n    }\n    const baseInput = amountSpecified.gt(ZERO);\n\n    const state = {\n      amountSpecifiedRemaining: amountSpecified,\n      amountCalculated: ZERO,\n      sqrtPriceX64: currentSqrtPriceX64,\n      tick: currentTick,\n      accounts: [] as PublicKey[],\n      liquidity,\n      feeAmount: new BN(0),\n    };\n    let loopCount = 0;\n    while (\n      !state.amountSpecifiedRemaining.eq(ZERO) &&\n      state.sqrtPriceX64 != sqrtPriceLimitX64 &&\n      state.tick < MAX_TICK &&\n      state.tick > MIN_TICK\n    ) {\n      if (loopCount > 10) {\n        throw Error(\"liquidity limit\");\n      }\n      const step: Partial<StepComputations> = {};\n      step.sqrtPriceStartX64 = state.sqrtPriceX64;\n      const { nextTick: nextInitTick, tickArrayAddress, tickArrayStartTickIndex: tickAarrayStartIndex } =\n        TickQuery.nextInitializedTick(\n          programId,\n          poolId,\n          tickArrayCache,\n          state.tick,\n          tickSpacing,\n          zeroForOne\n        );\n      step.tickNext = nextInitTick.tick;\n      step.initialized = nextInitTick.liquidityGross.gtn(0);\n      if (\n        lastSavedTickArrayStartIndex !== tickAarrayStartIndex &&\n        tickArrayAddress\n      ) {\n        state.accounts.push(tickArrayAddress);\n        lastSavedTickArrayStartIndex = tickAarrayStartIndex;\n      }\n      if (step.tickNext < MIN_TICK) {\n        step.tickNext = MIN_TICK;\n      } else if (step.tickNext > MAX_TICK) {\n        step.tickNext = MAX_TICK;\n      }\n\n      step.sqrtPriceNextX64 = SqrtPriceMath.getSqrtPriceX64FromTick(\n        step.tickNext\n      );\n      let targetPrice: BN;\n      if (\n        (zeroForOne && step.sqrtPriceNextX64.lt(sqrtPriceLimitX64)) ||\n        (!zeroForOne && step.sqrtPriceNextX64.gt(sqrtPriceLimitX64))\n      ) {\n        targetPrice = sqrtPriceLimitX64;\n      } else {\n        targetPrice = step.sqrtPriceNextX64;\n      }\n      [state.sqrtPriceX64, step.amountIn, step.amountOut, step.feeAmount] =\n        SwapMath.swapStepCompute(\n          state.sqrtPriceX64,\n          targetPrice,\n          state.liquidity,\n          state.amountSpecifiedRemaining,\n          fee\n        );\n\n      state.feeAmount = state.feeAmount.add(step.feeAmount)\n\n      if (baseInput) {\n        state.amountSpecifiedRemaining = state.amountSpecifiedRemaining.sub(\n          step.amountIn.add(step.feeAmount)\n        );\n        state.amountCalculated = state.amountCalculated.sub(step.amountOut);\n      } else {\n        state.amountSpecifiedRemaining = state.amountSpecifiedRemaining.add(\n          step.amountOut\n        );\n        state.amountCalculated = state.amountCalculated.add(\n          step.amountIn.add(step.feeAmount)\n        );\n      }\n      if (state.sqrtPriceX64.eq(step.sqrtPriceNextX64)) {\n        if (step.initialized) {\n          let liquidityNet = nextInitTick.liquidityNet;\n          if (zeroForOne) liquidityNet = liquidityNet.mul(NEGATIVE_ONE);\n          state.liquidity = LiquidityMath.addDelta(\n            state.liquidity,\n            liquidityNet\n          );\n        }\n        state.tick = zeroForOne ? step.tickNext - 1 : step.tickNext;\n      } else if (state.sqrtPriceX64 != step.sqrtPriceStartX64) {\n        state.tick = SqrtPriceMath.getTickFromSqrtPriceX64(state.sqrtPriceX64);\n      }\n      ++loopCount;\n    }\n    return {\n      amountCalculated: state.amountCalculated,\n      feeAmount: state.feeAmount,\n      sqrtPriceX64: state.sqrtPriceX64,\n      liquidity: state.liquidity,\n      tickCurrent: state.tick,\n      accounts: state.accounts,\n    };\n  }\n\n  private static swapStepCompute(\n    sqrtPriceX64Current: BN,\n    sqrtPriceX64Target: BN,\n    liquidity: BN,\n    amountRemaining: BN,\n    feeRate: Fee\n  ): [BN, BN, BN, BN] {\n    const swapStep: SwapStep = {\n      sqrtPriceX64Next: new BN(0),\n      amountIn: new BN(0),\n      amountOut: new BN(0),\n      feeAmount: new BN(0),\n    };\n\n    const zeroForOne = sqrtPriceX64Current.gte(sqrtPriceX64Target);\n    const baseInput = amountRemaining.gte(ZERO);\n\n    if (baseInput) {\n      const amountRemainingSubtractFee = MathUtil.mulDivFloor(\n        amountRemaining,\n        FEE_RATE_DENOMINATOR.sub(new BN(feeRate.toString())),\n        FEE_RATE_DENOMINATOR\n      );\n      swapStep.amountIn = zeroForOne\n        ? LiquidityMath.getTokenAmountAFromLiquidity(\n          sqrtPriceX64Target,\n          sqrtPriceX64Current,\n          liquidity,\n          true\n        )\n        : LiquidityMath.getTokenAmountBFromLiquidity(\n          sqrtPriceX64Current,\n          sqrtPriceX64Target,\n          liquidity,\n          true\n        );\n      if (amountRemainingSubtractFee.gte(swapStep.amountIn)) {\n        swapStep.sqrtPriceX64Next = sqrtPriceX64Target;\n      } else {\n        swapStep.sqrtPriceX64Next = SqrtPriceMath.getNextSqrtPriceX64FromInput(\n          sqrtPriceX64Current,\n          liquidity,\n          amountRemainingSubtractFee,\n          zeroForOne\n        );\n      }\n    } else {\n      swapStep.amountOut = zeroForOne\n        ? LiquidityMath.getTokenAmountBFromLiquidity(\n          sqrtPriceX64Target,\n          sqrtPriceX64Current,\n          liquidity,\n          false\n        )\n        : LiquidityMath.getTokenAmountAFromLiquidity(\n          sqrtPriceX64Current,\n          sqrtPriceX64Target,\n          liquidity,\n          false\n        );\n      if (amountRemaining.mul(NEGATIVE_ONE).gte(swapStep.amountOut)) {\n        swapStep.sqrtPriceX64Next = sqrtPriceX64Target;\n      } else {\n        swapStep.sqrtPriceX64Next = SqrtPriceMath.getNextSqrtPriceX64FromOutput(\n          sqrtPriceX64Current,\n          liquidity,\n          amountRemaining.mul(NEGATIVE_ONE),\n          zeroForOne\n        );\n      }\n    }\n\n    const reachTargetPrice = sqrtPriceX64Target.eq(swapStep.sqrtPriceX64Next);\n\n    if (zeroForOne) {\n      if (!(reachTargetPrice && baseInput)) {\n        swapStep.amountIn = LiquidityMath.getTokenAmountAFromLiquidity(\n          swapStep.sqrtPriceX64Next,\n          sqrtPriceX64Current,\n          liquidity,\n          true\n        );\n      }\n\n      if (!(reachTargetPrice && !baseInput)) {\n        swapStep.amountOut = LiquidityMath.getTokenAmountBFromLiquidity(\n          swapStep.sqrtPriceX64Next,\n          sqrtPriceX64Current,\n          liquidity,\n          false\n        );\n      }\n    } else {\n      swapStep.amountIn =\n        reachTargetPrice && baseInput\n          ? swapStep.amountIn\n          : LiquidityMath.getTokenAmountBFromLiquidity(\n            sqrtPriceX64Current,\n            swapStep.sqrtPriceX64Next,\n            liquidity,\n            true\n          );\n      swapStep.amountOut =\n        reachTargetPrice && !baseInput\n          ? swapStep.amountOut\n          : LiquidityMath.getTokenAmountAFromLiquidity(\n            sqrtPriceX64Current,\n            swapStep.sqrtPriceX64Next,\n            liquidity,\n            false\n          );\n    }\n\n    if (\n      !baseInput &&\n      swapStep.amountOut.gt(amountRemaining.mul(NEGATIVE_ONE))\n    ) {\n      swapStep.amountOut = amountRemaining.mul(NEGATIVE_ONE);\n    }\n    if (baseInput && !swapStep.sqrtPriceX64Next.eq(sqrtPriceX64Target)) {\n      swapStep.feeAmount = amountRemaining.sub(swapStep.amountIn);\n    } else {\n      swapStep.feeAmount = MathUtil.mulDivCeil(\n        swapStep.amountIn,\n        new BN(feeRate),\n        FEE_RATE_DENOMINATOR.sub(new BN(feeRate))\n      );\n    }\n    return [\n      swapStep.sqrtPriceX64Next,\n      swapStep.amountIn,\n      swapStep.amountOut,\n      swapStep.feeAmount,\n    ];\n  }\n}\n","import _Big from \"big.js\";\nimport BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { Rounding, TEN } from \"./constant\";\nimport { Currency, currencyEquals, Token } from \"./currency\";\nimport { Fraction } from \"./fraction\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/amount\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nexport function splitNumber(num: string, decimals: number) {\n  let integral = \"0\";\n  let fractional = \"0\";\n\n  if (num.includes(\".\")) {\n    const splited = num.split(\".\");\n    if (splited.length === 2) {\n      [integral, fractional] = splited;\n      fractional = fractional.padEnd(decimals, \"0\");\n    } else {\n      return logger.throwArgumentError(\"invalid number string\", \"num\", num);\n    }\n  } else {\n    integral = num;\n  }\n\n  // fix decimals is 0\n  return [integral, fractional.slice(0, decimals) || fractional];\n}\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency;\n\n  public constructor(currency: Currency, amount: BigNumberish, isRaw = true) {\n    let parsedAmount = new BN(0);\n    const multiplier = TEN.pow(new BN(currency.decimals));\n\n    if (isRaw) {\n      parsedAmount = parseBigNumberish(amount);\n    } else {\n      let integralAmount = new BN(0);\n      let fractionalAmount = new BN(0);\n\n      // parse fractional string\n      if (typeof amount === \"string\" || typeof amount === \"number\" || typeof amount === \"bigint\") {\n        const [integral, fractional] = splitNumber(amount.toString(), currency.decimals);\n\n        integralAmount = parseBigNumberish(integral);\n        fractionalAmount = parseBigNumberish(fractional);\n      }\n      // else {\n      //   integralAmount = parseBigNumberish(amount);\n      // }\n\n      integralAmount = integralAmount.mul(multiplier);\n      parsedAmount = integralAmount.add(fractionalAmount);\n    }\n\n    super(parsedAmount, multiplier);\n    this.currency = currency;\n  }\n\n  public get raw() {\n    return this.numerator;\n  }\n\n  public isZero() {\n    return this.raw.isZero();\n  }\n\n  /**\n   * a greater than b\n   */\n  public gt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"gt currency not equals\");\n\n    return this.raw.gt(other.raw);\n  }\n\n  /**\n   * a less than b\n   */\n  public lt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"lt currency not equals\");\n\n    return this.raw.lt(other.raw);\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"add currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.add(other.raw));\n  }\n\n  public sub(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"sub currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.sub(other.raw));\n  }\n\n  public toSignificant(\n    significantDigits = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding);\n  }\n\n  /**\n   * To fixed\n   *\n   * @example\n   * ```\n   * 1 -> 1.000000000\n   * 1.234 -> 1.234000000\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toFixed(\n    decimalPlaces = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    logger.assert(decimalPlaces <= this.currency.decimals, \"decimals overflow\");\n\n    return super.toFixed(decimalPlaces, format, rounding);\n  }\n\n  /**\n   * To exact\n   *\n   * @example\n   * ```\n   * 1 -> 1\n   * 1.234 -> 1.234\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toExact(format: object = { groupSeparator: \"\" }): string {\n    Big.DP = this.currency.decimals;\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format);\n  }\n}\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token;\n\n  public constructor(token: Token, amount: BigNumberish, isRaw = true) {\n    super(token, amount, isRaw);\n    this.token = token;\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"add token not equals\");\n\n    return new TokenAmount(this.token, this.raw.add(other.raw));\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"sub token not equals\");\n\n    return new TokenAmount(this.token, this.raw.sub(other.raw));\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\nimport { BN } from \"bn.js\";\n\nimport { Currency, CurrencyAmount, Fraction, Percent, Price, TokenAmount } from \"../entity\";\n\nimport { validateAndParsePublicKey } from \"./pubkey\";\n\ntype Primitive = boolean | number | string | null | undefined | PublicKey;\n\n/**\n *\n * @example\n * ```typescript\n * interface A {\n *   keyA: string;\n *   keyB: string;\n *   map: {\n *     hello: string;\n *     i: number;\n *   };\n *   list: (string | number)[];\n *   keyC: number;\n * }\n *\n * type WrappedA = ReplaceType<A, string, boolean> // {\n *   keyA: boolean;\n *   keyB: boolean;\n *   map: {\n *     hello: boolean;\n *     i: number;\n *   };\n *   list: (number | boolean)[];\n *   keyC: number;\n * }\n * ```\n */\nexport type ReplaceType<Old, From, To> = {\n  [T in keyof Old]: Old[T] extends From // to avoid case: Old[T] is an Object,\n    ? Exclude<Old[T], From> | To // when match,  directly replace\n    : Old[T] extends Primitive // judge whether need recursively replace\n    ? From extends Old[T] // it's an Object\n      ? Exclude<Old[T], From> | To // directly replace\n      : Old[T] // stay same\n    : ReplaceType<Old[T], From, To>; // recursively replace\n};\n\nconst baseInnerObjects = [TokenAmount, PublicKey, Fraction, BN, Currency, CurrencyAmount, Price, Percent];\n\nfunction notInnerObject(v: unknown): v is Record<string, any> {\n  return typeof v === \"object\" && v !== null && !baseInnerObjects.some((o) => typeof o === \"object\" && v instanceof o);\n}\n\nexport function jsonInfo2PoolKeys<T>(jsonInfo: T): ReplaceType<T, string, PublicKey> {\n  // @ts-expect-error no need type for inner code\n  return typeof jsonInfo === \"string\"\n    ? validateAndParsePublicKey(jsonInfo)\n    : Array.isArray(jsonInfo)\n    ? jsonInfo.map((k) => jsonInfo2PoolKeys(k))\n    : notInnerObject(jsonInfo)\n    ? Object.fromEntries(Object.entries(jsonInfo).map(([k, v]) => [k, jsonInfo2PoolKeys(v)]))\n    : jsonInfo;\n}\n\nexport function poolKeys2JsonInfo<T>(jsonInfo: T): ReplaceType<T, PublicKey, string> {\n  // @ts-expect-error no need type for inner code\n  return jsonInfo instanceof PublicKey\n    ? jsonInfo.toBase58()\n    : Array.isArray(jsonInfo)\n    ? jsonInfo.map((k) => poolKeys2JsonInfo(k))\n    : notInnerObject(jsonInfo)\n    ? Object.fromEntries(Object.entries(jsonInfo).map(([k, v]) => [k, poolKeys2JsonInfo(v)]))\n    : jsonInfo;\n}\n","import { PublicKey, SystemProgram } from \"@solana/web3.js\";\n\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/pubkey\");\n\n/* ================= global public keys ================= */\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nexport { SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY } from \"@solana/web3.js\";\n\nexport const SYSTEM_PROGRAM_ID = SystemProgram.programId;\nexport const MEMO_PROGRAM_ID = new PublicKey(\"Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo\");\nexport const RENT_PROGRAM_ID = new PublicKey('SysvarRent111111111111111111111111111111111')\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s')\n\n/* ================= validate public key ================= */\nexport type PublicKeyish = PublicKey | string;\n\nexport function validateAndParsePublicKey(publicKey: PublicKeyish) {\n  if (publicKey instanceof PublicKey) {\n    return publicKey;\n  }\n\n  if (typeof publicKey === \"string\") {\n    try {\n      const key = new PublicKey(publicKey);\n      return key;\n    } catch {\n      return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n    }\n  }\n\n  return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n}\n\nexport function findProgramAddress(seeds: Array<Buffer | Uint8Array>, programId: PublicKey) {\n  const [publicKey, nonce] = PublicKey.findProgramAddressSync(seeds, programId);\n  return { publicKey, nonce };\n}\n\nexport function AccountMeta(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: true,\n    isSigner,\n  };\n}\n\nexport function AccountMetaReadonly(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: false,\n    isSigner,\n  };\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { version } from \"../version\";\n\n// https://github.com/DABH/colors.js\nimport \"@colors/colors\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [name: string]: number } = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };\nconst _moduleLogLevel: { [name: string]: number } = {};\n\nlet _globalLogger: Logger;\n\nfunction _checkNormalize(): string {\n  try {\n    const missing: Array<string> = [];\n\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n\n  return \"\";\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n  DEBUG = \"DEBUG\",\n  INFO = \"INFO\",\n  WARNING = \"WARNING\",\n  ERROR = \"ERROR\",\n  OFF = \"OFF\",\n}\n\nexport enum ErrorCode {\n  ///////////////////\n  // Generic Errors\n\n  // Unknown Error\n  UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n  // Not Implemented\n  NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n  // Unsupported Operation\n  //   - operation\n  UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  NETWORK_ERROR = \"NETWORK_ERROR\",\n\n  // Some sort of bad response from the server\n  RPC_ERROR = \"RPC_ERROR\",\n\n  // Timeout\n  TIMEOUT = \"TIMEOUT\",\n\n  ///////////////////\n  // Operational  Errors\n\n  // Buffer Overrun\n  BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n  ///////////////////\n  // Argument Errors\n\n  // Missing new operator to an object\n  //  - name: The name of the class\n  MISSING_NEW = \"MISSING_NEW\",\n\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n  ///////////////////\n  // Blockchain Errors\n\n  // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n}\n\nconst HEX = \"0123456789abcdef\";\n\nfunction perfectDisplay(value: any, deeping = false) {\n  let _value = value;\n\n  try {\n    if (value instanceof Uint8Array) {\n      let hex = \"\";\n      for (let i = 0; i < value.length; i++) {\n        hex += HEX[value[i] >> 4];\n        hex += HEX[value[i] & 0x0f];\n      }\n      _value = `Uint8Array(0x${hex})`;\n    } else if (value instanceof PublicKey) {\n      _value = `PublicKey(${value.toBase58()})`;\n    } else if (value instanceof Object && !deeping) {\n      const obj = {};\n      Object.entries(value).forEach(([k, v]) => {\n        obj[k] = perfectDisplay(v, true);\n      });\n      _value = JSON.stringify(obj);\n    } else if (!deeping) {\n      _value = JSON.stringify(value);\n    }\n  } catch (error) {\n    _value = JSON.stringify(value.toString());\n  }\n\n  return _value;\n}\n\nexport class Logger {\n  readonly version: string = version;\n  readonly moduleName: string;\n\n  static errors = ErrorCode;\n\n  static levels = LogLevel;\n\n  constructor(moduleName: string) {\n    this.moduleName = moduleName;\n  }\n\n  _log(logLevel: LogLevel, args: Array<any>): void {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    const _logLevel = _moduleLogLevel[this.moduleName] || LogLevels[\"default\"];\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  debug(...args: Array<any>): void {\n    this._log(Logger.levels.DEBUG, [\"[DEBUG]\".blue, ...args]);\n  }\n\n  info(...args: Array<any>): void {\n    this._log(Logger.levels.INFO, [\"[INFO]\".green, ...args]);\n  }\n\n  warn(...args: Array<any>): void {\n    this._log(Logger.levels.WARNING, [\"[WARN]\".yellow, ...args]);\n  }\n\n  makeError(message: string, code?: ErrorCode, params?: any): Error {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails: Array<string> = [];\n    Object.entries(params).forEach(([key, value]) => {\n      messageDetails.push(`${key}=${perfectDisplay(value)})`);\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`module=${this.moduleName}`);\n    messageDetails.push(`version=${this.version}`);\n\n    const reason = message;\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n\n    // @TODO: Any??\n    const error: any = new Error(message);\n    error.reason = reason;\n    error.code = code;\n\n    Object.entries(params).forEach(([key, value]) => {\n      error[key] = value;\n    });\n\n    return error;\n  }\n\n  throwError(message: string, code?: ErrorCode, params?: any): never {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message: string, name: string, value: any): never {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value,\n    });\n  }\n\n  assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition: any, message: string, name: string, value: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message?: string): void {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError,\n      });\n    }\n  }\n\n  checkSafeUint53(value: number, message?: string): void {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value,\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value,\n      });\n    }\n  }\n\n  checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n  }\n\n  checkNew(target: any, kind: any): void {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  checkAbstract(target: any, kind: any): void {\n    if (target === kind) {\n      this.throwError(\n        \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n        Logger.errors.UNSUPPORTED_OPERATION,\n        { name: target.name, operation: \"new\" },\n      );\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  static globalLogger(): Logger {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship: boolean, permanent?: boolean): void {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(moduleName: string, logLevel: \"DEBUG\" | \"INFO\" | \"WARNING\" | \"ERROR\" | \"OFF\"): void {\n    const level = LogLevels[logLevel.toLowerCase()];\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n    _moduleLogLevel[moduleName] = level;\n  }\n\n  static from(version: string): Logger {\n    return new Logger(version);\n  }\n}\n","export const version = \"1.1.0-beta.6\";\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nexport function inspectPublicKey() {\n  // @ts-ignore\n  PublicKey.prototype.inspect = function () {\n    return `<PublicKey: ${this.toString()}>`;\n  };\n}\n\nexport function inspectBN() {\n  // @ts-ignore\n  BN.prototype.inspect = function () {\n    // @ts-ignore\n    return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n  };\n}\n\nexport function inspectAll() {\n  inspectPublicKey();\n  inspectBN();\n}\n","/**\n * https://youmightnotneed.com/lodash/\n */\n\nexport function chunkArray<T>(arr: T[], chunkSize = 1, cache: T[][] = []): T[][] {\n  const tmp = [...arr];\n  if (chunkSize <= 0) return cache;\n  while (tmp.length) cache.push(tmp.splice(0, chunkSize));\n  return cache;\n}\n\nexport function intersection<T>(arr: T[], ...args: T[][]) {\n  return arr.filter((item) => args.every((arr) => arr.includes(item)));\n}\n\nexport function xor<T>(arr: T[], ...args: T[][]) {\n  return arr.filter((item) => args.every((arr) => !arr.includes(item)));\n}\n\nexport function uniq<T>(arr: T[]) {\n  return [...new Set(arr)];\n}\n","// import BN from 'bn.js';\n\n// import { Spl, SPL_ACCOUNT_LAYOUT } from '../spl';\n// import { TOKEN_PROGRAM_ID } from './id';\n\nimport {\n  AccountInfo, Commitment, Connection, Keypair, PublicKey, Signer, SimulatedTransactionResponse, Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport { chunkArray } from \"./lodash\";\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/web3\");\n\ninterface MultipleAccountsJsonRpcResponse {\n  jsonrpc: string;\n  id: string;\n  error?: {\n    code: number;\n    message: string;\n  };\n  result: {\n    context: { slot: number };\n    value: { data: Array<string>; executable: boolean; lamports: number; owner: string; rentEpoch: number }[];\n  };\n}\n\nexport interface GetMultipleAccountsInfoConfig {\n  batchRequest?: boolean;\n  commitment?: Commitment;\n}\n\n// export async function batchGetMultipleAccountsInfo() {}\n\nexport async function getMultipleAccountsInfo(\n  connection: Connection,\n  publicKeys: PublicKey[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<(AccountInfo<Buffer> | null)[]> {\n  const { batchRequest, commitment } = {\n    // default\n    ...{\n      batchRequest: false,\n    },\n    // custom\n    ...config,\n  };\n\n  const chunkedKeys = chunkArray(publicKeys, 100);\n  let results: (AccountInfo<Buffer> | null)[][] = new Array(chunkedKeys.length).fill([]);\n\n  if (batchRequest) {\n    const batch = chunkedKeys.map((keys) => {\n      const args = connection._buildArgs([keys.map((key) => key.toBase58())], commitment, \"base64\");\n      return {\n        methodName: \"getMultipleAccounts\",\n        args,\n      };\n    });\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const unsafeResponse: MultipleAccountsJsonRpcResponse[] = await connection._rpcBatchRequest(batch);\n    results = unsafeResponse.map((unsafeRes: MultipleAccountsJsonRpcResponse) => {\n      if (unsafeRes.error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: unsafeRes.error.message,\n        });\n      }\n\n      return unsafeRes.result.value.map((accountInfo) => {\n        if (accountInfo) {\n          const { data, executable, lamports, owner, rentEpoch } = accountInfo;\n\n          if (data.length !== 2 && data[1] !== \"base64\") {\n            return logger.throwError(\"info must be base64 encoded\", Logger.errors.RPC_ERROR);\n          }\n\n          return {\n            data: Buffer.from(data[0], \"base64\"),\n            executable,\n            lamports,\n            owner: new PublicKey(owner),\n            rentEpoch,\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n  } else {\n    try {\n      results = (await Promise.all(\n        chunkedKeys.map((keys) => connection.getMultipleAccountsInfo(keys, commitment)),\n      )) as (AccountInfo<Buffer> | null)[][];\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n  }\n\n  return results.flat();\n}\n\nexport async function getMultipleAccountsInfoWithCustomFlags<T extends { pubkey: PublicKey }>(\n  connection: Connection,\n  publicKeysWithCustomFlag: T[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<({ accountInfo: AccountInfo<Buffer> | null } & T)[]> {\n  const multipleAccountsInfo = await getMultipleAccountsInfo(\n    connection,\n    publicKeysWithCustomFlag.map((o) => o.pubkey),\n    config,\n  );\n\n  return publicKeysWithCustomFlag.map((o, idx) => ({ ...o, accountInfo: multipleAccountsInfo[idx] }));\n}\n\nexport interface GetTokenAccountsByOwnerConfig {\n  commitment?: Commitment;\n}\n\n// export async function getTokenAccountsByOwner(\n//   connection: Connection,\n//   owner: PublicKey,\n//   config?: GetTokenAccountsByOwnerConfig\n// ) {\n//   const defaultConfig = {};\n//   const customConfig = { ...defaultConfig, ...config };\n\n//   const solReq = connection.getAccountInfo(owner, customConfig.commitment);\n//   const tokenReq = connection.getTokenAccountsByOwner(\n//     owner,\n//     {\n//       programId: TOKEN_PROGRAM_ID\n//     },\n//     customConfig.commitment\n//   );\n\n//   const [solResp, tokenResp] = await Promise.all([solReq, tokenReq]);\n\n//   const accounts: {\n//     publicKey?: PublicKey;\n//     mint?: PublicKey;\n//     isAssociated?: boolean;\n//     amount: BN;\n//     isNative: boolean;\n//   }[] = [];\n\n//   for (const { pubkey, account } of tokenResp.value) {\n//     // double check layout length\n//     if (account.data.length !== SPL_ACCOUNT_LAYOUT.span) {\n//       return logger.throwArgumentError('invalid token account layout length', 'publicKey', pubkey);\n//     }\n\n//     const { mint, amount } = SPL_ACCOUNT_LAYOUT.decode(account.data);\n//     const associatedTokenAddress = await Spl.getAssociatedTokenAddress({ mint, owner });\n\n//     accounts.push({\n//       publicKey: pubkey,\n//       mint,\n//       isAssociated: associatedTokenAddress.equals(pubkey),\n//       amount,\n//       isNative: false\n//     });\n//   }\n\n//   if (solResp) {\n//     accounts.push({\n//       amount: new BN(solResp.lamports),\n//       isNative: true\n//     });\n//   }\n\n//   return accounts;\n// }\n\n/**\n * Forecast transaction size\n */\nexport function forecastTransactionSize(instructions: TransactionInstruction[], signers: PublicKey[]) {\n  if (instructions.length < 1) {\n    return logger.throwArgumentError(\"no instructions provided\", \"instructions\", instructions);\n  }\n  if (signers.length < 1) {\n    return logger.throwArgumentError(\"no signers provided\", \"signers\", signers);\n  }\n\n  const transaction = new Transaction({\n    recentBlockhash: \"11111111111111111111111111111111\",\n    feePayer: signers[0],\n  });\n\n  transaction.add(...instructions);\n\n  try {\n    transaction.serialize({ verifySignatures: false });\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Simulates multiple instruction\n */\nexport async function simulateMultipleInstruction(\n  connection: Connection,\n  instructions: TransactionInstruction[],\n  keyword: string,\n  batchRequest = true\n) {\n  const feePayer = new PublicKey(\"RaydiumSimuLateTransaction11111111111111111\");\n\n  const transactions: Transaction[] = [];\n\n  let transaction = new Transaction();\n  transaction.feePayer = feePayer\n\n  for (const instruction of instructions) {\n    if (!forecastTransactionSize([...transaction.instructions, instruction], [feePayer])) {\n      transactions.push(transaction);\n      transaction = new Transaction();\n      transaction.feePayer = feePayer\n    }\n    transaction.add(instruction);\n  }\n  if (transaction.instructions.length > 0) {\n    transactions.push(transaction);\n  }\n\n  let results: SimulatedTransactionResponse[] = [];\n\n  try {\n    results = await simulateTransaction(connection, transactions, batchRequest)\n    if (results.find(i => i.err !== null)) throw Error('rpc simulateTransaction error')\n  } catch (error) {\n    if (error instanceof Error) {\n      return logger.throwError(\"failed to simulate for instructions\", Logger.errors.RPC_ERROR, {\n        message: error.message,\n      });\n    }\n  }\n\n  const logs: string[] = [];\n  for (const result of results) {\n    logger.debug(\"simulate result:\", result);\n\n    if (result.logs) {\n      const filteredLog = result.logs.filter((log) => log && log.includes(keyword));\n      logger.debug(\"filteredLog:\", logs);\n\n      logger.assertArgument(filteredLog.length !== 0, \"simulate log not match keyword\", \"keyword\", keyword);\n\n      logs.push(...filteredLog);\n    }\n  }\n\n  return logs;\n}\n\nexport function parseSimulateLogToJson(log: string, keyword: string) {\n  const results = log.match(/{[\"\\w:,]+}/g);\n  if (!results || results.length !== 1) {\n    return logger.throwArgumentError(\"simulate log fail to match json\", \"keyword\", keyword);\n  }\n\n  return results[0];\n}\n\nexport function parseSimulateValue(log: string, key: string) {\n  const reg = new RegExp(`\"${key}\":(\\\\d+)`, \"g\");\n\n  const results = reg.exec(log);\n  if (!results || results.length !== 2) {\n    return logger.throwArgumentError(\"simulate log fail to match key\", \"key\", key);\n  }\n\n  return results[1];\n}\n\nexport async function simulateTransaction(connection: Connection, transactions: Transaction[], batchRequest?: boolean) {\n  let results: any[] = []\n  if (batchRequest) {\n    const getLatestBlockhash = await connection.getLatestBlockhash()\n\n    const encodedTransactions: string[] = []\n    for (const transaction of transactions) {\n      transaction.recentBlockhash = getLatestBlockhash.blockhash\n      transaction.lastValidBlockHeight = getLatestBlockhash.lastValidBlockHeight\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const message = transaction._compile();\n      const signData = message.serialize();\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const wireTransaction = transaction._serialize(signData);\n      const encodedTransaction = wireTransaction.toString('base64');\n\n      encodedTransactions.push(encodedTransaction)\n    }\n\n    const batch = encodedTransactions.map((keys) => {\n      const args = connection._buildArgs([keys], undefined, \"base64\");\n      return {\n        methodName: \"simulateTransaction\",\n        args,\n      };\n    });\n\n    const reqData: { methodName: string; args: any[]; }[][] = []\n    const itemReqIndex = 20\n    for (let i = 0; i < Math.ceil(batch.length / itemReqIndex); i++) {\n      reqData.push(batch.slice(i * itemReqIndex, (i + 1) * itemReqIndex))\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    results = await (await Promise.all(reqData.map(async (i) => (await connection._rpcBatchRequest(i)).map(ii => ii.result.value)))).flat()\n  } else {\n    try {\n      results = (await Promise.all(\n        transactions.map(async (transaction) =>\n          await (await connection.simulateTransaction(transaction)).value\n        )));\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n  }\n\n  return results\n}\n\nexport function splitTxAndSigners({ instructions, signers, payer }: {\n  instructions: TransactionInstruction[],\n  signers: (Signer | Keypair)[],\n  payer: PublicKey\n}) {\n  const signerKey: { [key: string]: Signer } = {}\n  for (const item of signers) signerKey[item.publicKey.toString()] = item\n\n  const transactions: { transaction: Transaction, signer: (Keypair | Signer)[] }[] = []\n\n  let itemIns: TransactionInstruction[] = []\n\n  for (const item of instructions) {\n    const _itemIns = [...itemIns, item]\n    const _signerStrs = new Set<string>(_itemIns.map(i => i.keys.filter(ii => ii.isSigner).map(ii => ii.pubkey.toString())).flat())\n    const _signer = [..._signerStrs.values()].map(i => new PublicKey(i))\n\n    if (forecastTransactionSize(_itemIns, [payer, ..._signer])) {\n      itemIns.push(item)\n    } else {\n      transactions.push({\n        transaction: new Transaction().add(...itemIns),\n        signer: [..._signerStrs.values()].map(i => signerKey[i]).filter(i => i !== undefined)\n      })\n\n      itemIns = [item]\n    }\n  }\n\n  if (itemIns.length > 0) {\n    const _signerStrs = new Set<string>(itemIns.map(i => i.keys.filter(ii => ii.isSigner).map(ii => ii.pubkey.toString())).flat())\n    transactions.push({\n      transaction: new Transaction().add(...itemIns),\n      signer: [..._signerStrs.values()].map(i => signerKey[i]).filter(i => i !== undefined)\n    })\n  }\n\n  return transactions\n}","import BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { TEN } from \"./constant\";\n\nconst logger = Logger.from(\"entity/bignumber\");\n\nexport type BigNumberish = BN | string | number | bigint;\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\nexport function parseBigNumberish(value: BigNumberish) {\n  // BN\n  if (value instanceof BN) {\n    return value;\n  }\n\n  // string\n  if (typeof value === \"string\") {\n    if (value.match(/^-?[0-9]+$/)) {\n      return new BN(value);\n    }\n\n    return logger.throwArgumentError(\"invalid BigNumberish string\", \"value\", value);\n  }\n\n  // number\n  if (typeof value === \"number\") {\n    if (value % 1) {\n      return logger.throwArgumentError(\"BigNumberish number underflow\", \"value\", value);\n    }\n\n    if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n      return logger.throwArgumentError(\"BigNumberish number overflow\", \"value\", value);\n    }\n\n    return new BN(String(value));\n  }\n\n  // bigint\n  if (typeof value === \"bigint\") {\n    return new BN(value.toString());\n  }\n\n  return logger.throwArgumentError(\"invalid BigNumberish value\", \"value\", value);\n}\n\nexport function tenExponentiate(shift: BigNumberish) {\n  return TEN.pow(parseBigNumberish(shift));\n}\n\n// round up\nexport function divCeil(a: BN, b: BN): BN {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const dm = a.divmod(b);\n\n  // Fast case - exact division\n  if (dm.mod.isZero()) return dm.div;\n\n  // Round up\n  return dm.div.isNeg() ? dm.div.isubn(1) : dm.div.iaddn(1);\n}\n","import BN from \"bn.js\";\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP,\n}\n\nexport const ZERO = new BN(0);\nexport const ONE = new BN(1);\nexport const TWO = new BN(2);\nexport const THREE = new BN(3);\nexport const FIVE = new BN(5);\nexport const TEN = new BN(10);\nexport const _100 = new BN(100);\nexport const _1000 = new BN(1000);\nexport const _10000 = new BN(10000);\n","import { NativeTokenInfo, SplTokenInfo } from \"./type\";\n\nexport const SOL: NativeTokenInfo = {\n  symbol: \"SOL\",\n  name: \"Solana\",\n  decimals: 9,\n};\n\nexport const WSOL: SplTokenInfo = {\n  symbol: \"WSOL\",\n  name: \"Wrapped SOL\",\n  mint: \"So11111111111111111111111111111111111111112\",\n  decimals: 9,\n  extensions: {\n    coingeckoId: \"solana\",\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const MAINNET_SPL_TOKENS: SplTokens = {\n  WSOL: {\n    ...WSOL,\n  },\n  BTC: {\n    symbol: \"BTC\",\n    name: \"Bitcoin\",\n    mint: \"9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bitcoin\",\n    },\n  },\n  ETH: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    mint: \"2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ethereum\",\n    },\n  },\n  USDT: {\n    symbol: \"USDT\",\n    name: \"Tether\",\n    mint: \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  WUSDT: {\n    symbol: \"WUSDT\",\n    name: \"Wrapped USDT\",\n    mint: \"BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  USDC: {\n    symbol: \"USDC\",\n    name: \"USD Coin\",\n    mint: \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  WUSDC: {\n    symbol: \"WUSDC\",\n    name: \"Wrapped USDC\",\n    mint: \"BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  YFI: {\n    symbol: \"YFI\",\n    name: \"YFI\",\n    mint: \"3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"yearn-finance\",\n    },\n  },\n  LINK: {\n    symbol: \"LINK\",\n    name: \"Chainlink\",\n    mint: \"CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"chainlink\",\n    },\n  },\n  XRP: {\n    symbol: \"XRP\",\n    name: \"XRP\",\n    mint: \"Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ripple\",\n    },\n  },\n  SUSHI: {\n    symbol: \"SUSHI\",\n    name: \"SUSHI\",\n    mint: \"AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"sushi\",\n    },\n  },\n  ALEPH: {\n    symbol: \"ALEPH\",\n    name: \"ALEPH\",\n    mint: \"CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"aleph\",\n    },\n  },\n  SXP: {\n    symbol: \"SXP\",\n    name: \"SXP\",\n    mint: \"SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swipe\",\n    },\n  },\n  HGET: {\n    symbol: \"HGET\",\n    name: \"HGET\",\n    mint: \"BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"hedget\",\n    },\n  },\n  CREAM: {\n    symbol: \"CREAM\",\n    name: \"CREAM\",\n    mint: \"5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cream-2\",\n    },\n  },\n  UNI: {\n    symbol: \"UNI\",\n    name: \"UNI\",\n    mint: \"DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"uniswap\",\n    },\n  },\n  SRM: {\n    symbol: \"SRM\",\n    name: \"Serum\",\n    mint: \"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"serum\",\n    },\n  },\n  FTT: {\n    symbol: \"FTT\",\n    name: \"FTX Token\",\n    mint: \"AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ftx-token\",\n    },\n  },\n  MSRM: {\n    symbol: \"MSRM\",\n    name: \"MegaSerum\",\n    mint: \"MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"megaserum\",\n    },\n  },\n  TOMO: {\n    symbol: \"TOMO\",\n    name: \"TOMO\",\n    mint: \"GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tomochain\",\n    },\n  },\n  KARMA: {\n    symbol: \"KARMA\",\n    name: \"KARMA\",\n    mint: \"EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"karma-dao\",\n    },\n  },\n  LUA: {\n    symbol: \"LUA\",\n    name: \"LUA\",\n    mint: \"EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"lua-token\",\n    },\n  },\n  MATH: {\n    symbol: \"MATH\",\n    name: \"MATH\",\n    mint: \"GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"math\",\n    },\n  },\n  KEEP: {\n    symbol: \"KEEP\",\n    name: \"KEEP\",\n    mint: \"GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"keep-network\",\n    },\n  },\n  SWAG: {\n    symbol: \"SWAG\",\n    name: \"SWAG\",\n    mint: \"9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swag-finance\",\n    },\n  },\n  FIDA: {\n    symbol: \"FIDA\",\n    name: \"Bonfida\",\n    mint: \"EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bonfida\",\n    },\n  },\n  KIN: {\n    symbol: \"KIN\",\n    name: \"Kin\",\n    mint: \"kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6\",\n    decimals: 5,\n    extensions: {\n      coingeckoId: \"kin\",\n    },\n  },\n  MAPS: {\n    symbol: \"MAPS\",\n    name: \"MAPS\",\n    mint: \"MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"maps\",\n    },\n  },\n  OXY: {\n    symbol: \"OXY\",\n    name: \"Oxygen\",\n    mint: \"z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"oxygen\",\n    },\n  },\n  RAY: {\n    symbol: \"RAY\",\n    name: \"Raydium\",\n    mint: \"4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"raydium\",\n    },\n  },\n  xCOPE: {\n    symbol: \"xCOPE\",\n    name: \"xCOPE\",\n    mint: \"3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  COPE: {\n    symbol: \"COPE\",\n    name: \"Cope\",\n    mint: \"8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  STEP: {\n    symbol: \"STEP\",\n    name: \"Step Finance\",\n    mint: \"StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"step-finance\",\n    },\n  },\n  MEDIA: {\n    symbol: \"MEDIA\",\n    name: \"Media Network\",\n    mint: \"ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"media-network\",\n    },\n  },\n  ROPE: {\n    symbol: \"ROPE\",\n    name: \"Rope Token\",\n    mint: \"8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"rope-token\",\n    },\n  },\n  MER: {\n    symbol: \"MER\",\n    name: \"Mercurial\",\n    mint: \"MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mercurial\",\n    },\n  },\n  TULIP: {\n    symbol: \"TULIP\",\n    name: \"Tulip Protocol\",\n    mint: \"TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solfarm\",\n    },\n  },\n  SNY: {\n    symbol: \"SNY\",\n    name: \"SNY\",\n    mint: \"4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"synthetify-token\",\n    },\n  },\n  SLRS: {\n    symbol: \"SLRS\",\n    name: \"SLRS\",\n    mint: \"SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solrise-finance\",\n    },\n  },\n  WOO: {\n    symbol: \"WOO\",\n    name: \"WOO Network\",\n    mint: \"E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woo-network\",\n    },\n  },\n  BOP: {\n    symbol: \"BOP\",\n    name: \"Boring Protocol\",\n    mint: \"BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"boring-protocol\",\n    },\n  },\n  SAMO: {\n    symbol: \"SAMO\",\n    name: \"Samoyedcoin\",\n    mint: \"7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"samoyedcoin\",\n    },\n  },\n  renBTC: {\n    symbol: \"renBTC\",\n    name: \"renBTC\",\n    mint: \"CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"renbtc\",\n    },\n  },\n  renDOGE: {\n    symbol: \"renDOGE\",\n    name: \"renDOGE\",\n    mint: \"ArUkYE2XDKzqy77PRRGjo4wREWwqk6RXTfM9NeqzPvjU\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"rendoge\",\n    },\n  },\n  LIKE: {\n    symbol: \"LIKE\",\n    name: \"Only1\",\n    mint: \"3bRTivrVsitbmCTGtqwp7hxXPsybkjn4XLNtPsHqa3zR\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"only1\",\n    },\n  },\n  DXL: {\n    symbol: \"DXL\",\n    name: \"Dexlab\",\n    mint: \"GsNzxJfFn6zQdJGeYsupJWzUAm57Ba7335mfhWvFiE9Z\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"dexlab\",\n    },\n  },\n  mSOL: {\n    symbol: \"mSOL\",\n    name: \"Marinade staked SOL\",\n    mint: \"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"msol\",\n    },\n  },\n  PAI: {\n    symbol: \"PAI\",\n    name: \"Parrot USD\",\n    mint: \"Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-usd\",\n    },\n  },\n  PORT: {\n    symbol: \"PORT\",\n    name: \"Port Finance\",\n    mint: \"PoRTjZMPXb9T7dyU7tpLEZRQj7e6ssfAE62j2oQuc6y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"port-finance\",\n    },\n  },\n  MNGO: {\n    symbol: \"MNGO\",\n    name: \"Mango\",\n    mint: \"MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mango-markets\",\n    },\n  },\n  CRP: {\n    symbol: \"CRP\",\n    name: \"CropperFinance\",\n    mint: \"DubwWZNWiNGMMeeQHPnMATNj77YZPZSAz2WVR5WjLJqz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cropperfinance\",\n    },\n  },\n  ATLAS: {\n    symbol: \"ATLAS\",\n    name: \"Star Atlas\",\n    mint: \"ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas\",\n    },\n  },\n  POLIS: {\n    symbol: \"POLIS\",\n    name: \"Star Atlas DAO\",\n    mint: \"poLisWXnNRwC6oBu1vHiuKQzFjGL4XDSu4g9qjz9qVk\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas-dao\",\n    },\n  },\n  GRAPE: {\n    symbol: \"GRAPE\",\n    name: \"Grape Protocol\",\n    mint: \"8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"grape-2\",\n    },\n  },\n  GENE: {\n    symbol: \"GENE\",\n    name: \"Genopets\",\n    mint: \"GENEtH5amGSi8kHAtQoezp1XEXwZJ8vcuePYnXdKrMYz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genopets\",\n    },\n  },\n  DFL: {\n    symbol: \"DFL\",\n    name: \"DeFi Land\",\n    mint: \"DFL1zNkaGPWm1BqAVqRjCZvHmwTFrEaJtbzJWgseoNJh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"defi-land\",\n    },\n  },\n  CHEEMS: {\n    symbol: \"CHEEMS\",\n    name: \"Cheems\",\n    mint: \"3FoUAsGDbvTD6YZ4wVKJgTB76onJUKz7GPEBNiR5b8wc\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"cheems\",\n    },\n  },\n  stSOL: {\n    symbol: \"stSOL\",\n    name: \"Lido Staked SOL\",\n    mint: \"7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"lido-staked-sol\",\n    },\n  },\n  LARIX: {\n    symbol: \"LARIX\",\n    name: \"Larix\",\n    mint: \"Lrxqnh6ZHKbGy3dcrCED43nsoLkM1LTzU2jRfWe8qUC\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"larix\",\n    },\n  },\n  RIN: {\n    symbol: \"RIN\",\n    name: \"Aldrin\",\n    mint: \"E5ndSkaB17Dm7CsD22dvcjfrYSDLCxFcMd6z8ddCk5wp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aldrin\",\n    },\n  },\n  APEX: {\n    symbol: \"APEX\",\n    name: \"ApeXit Finance\",\n    mint: \"51tMb3zBKDiQhNwGqpgwbavaGH54mk8fXFzxTc1xnasg\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"apexit-finance\",\n    },\n  },\n  MNDE: {\n    symbol: \"MNDE\",\n    name: \"Marinade\",\n    mint: \"MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"marinade\",\n    },\n  },\n  LIQ: {\n    symbol: \"LIQ\",\n    name: \"LIQ Protocol\",\n    mint: \"4wjPQJ6PrkC4dHhYghwJzGBVP78DkBzA2U3kHoFNBuhj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"liq-protocol\",\n    },\n  },\n  WAG: {\n    symbol: \"WAG\",\n    name: \"Waggle Network\",\n    mint: \"5tN42n9vMi6ubp67Uy4NnmM5DMZYN8aS8GeB3bEDHr6E\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"waggle-network\",\n    },\n  },\n  wLDO: {\n    symbol: \"wLDO\",\n    name: \"wLDO\",\n    mint: \"HZRCwxP2Vq9PCpPXooayhJ2bxTpo5xfpQrwB1svh332p\",\n    decimals: 8,\n    extensions: {},\n  },\n  SLIM: {\n    symbol: \"SLIM\",\n    name: \"Solanium\",\n    mint: \"xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solanium\",\n    },\n  },\n  PRT: {\n    symbol: \"PRT\",\n    name: \"Parrot Protocol\",\n    mint: \"PRT88RkA4Kg5z7pKnezeNH4mafTvtQdfFgpQTGRjz44\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-protocol\",\n    },\n  },\n  SBR: {\n    symbol: \"SBR\",\n    name: \"SBR\",\n    mint: \"Saber2gLauYim4Mvftnrasomsv6NvAuncvMEZwcLpD1\",\n    decimals: 6,\n    extensions: {},\n  },\n  FAB: {\n    symbol: \"FAB\",\n    name: \"Fabric\",\n    mint: \"EdAhkbj5nF9sRM7XN7ewuW8C9XEUMs8P7cnoQ57SYE96\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"fabric\",\n    },\n  },\n  ABR: {\n    symbol: \"ABR\",\n    name: \"Allbridge\",\n    mint: \"a11bdAAuV8iB2fu7X6AxAvDTo1QZ8FXB3kk5eecdasp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"allbridge\",\n    },\n  },\n  IVN: {\n    symbol: \"IVN\",\n    name: \"Investin\",\n    mint: \"iVNcrNE9BRZBC9Aqf753iZiZfbszeAVUoikgT9yvr2a\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"investin\",\n    },\n  },\n  CYS: {\n    symbol: \"CYS\",\n    name: \"Cyclos\",\n    mint: \"BRLsMczKuaR5w9vSubF4j8HwEGGprVAyyVgS4EX7DKEg\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cyclos\",\n    },\n  },\n  FRKT: {\n    symbol: \"FRKT\",\n    name: \"FRAKT Token\",\n    mint: \"ErGB9xa24Szxbk1M28u2Tx8rKPqzL6BroNkkzk5rG4zj\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"frakt-token\",\n    },\n  },\n  AURY: {\n    symbol: \"AURY\",\n    name: \"Aurory\",\n    mint: \"AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aurory\",\n    },\n  },\n  SYP: {\n    symbol: \"SYP\",\n    name: \"Sypool\",\n    mint: \"FnKE9n6aGjQoNWRBZXy4RW6LZVao7qwBonUbiD7edUmZ\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sypool\",\n    },\n  },\n  WOOF: {\n    symbol: \"WOOF\",\n    name: \"WOOF\",\n    mint: \"9nEqaUcb16sQ3Tn1psbkWqyhPdLmfHWjKGymREjsAgTE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woof-token\",\n    },\n  },\n  ORCA: {\n    symbol: \"ORCA\",\n    name: \"Orca\",\n    mint: \"orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"orca\",\n    },\n  },\n  SLND: {\n    symbol: \"SLND\",\n    name: \"Solend\",\n    mint: \"SLNDpmoWTVADgEdndyvWzroNL7zSi1dF9PC3xHGtPwp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solend\",\n    },\n  },\n  weWETH: {\n    symbol: \"weWETH\",\n    name: \"weWETH\",\n    mint: \"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\",\n    decimals: 8,\n    extensions: {},\n  },\n  weUNI: {\n    symbol: \"weUNI\",\n    name: \"weUNI\",\n    mint: \"8FU95xFJhUUkyyCLU13HSzDLs7oC4QZdXQHL6SCeab36\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSUSHI: {\n    symbol: \"weSUSHI\",\n    name: \"weSUSHI\",\n    mint: \"ChVzxWRmrTeSgwd3Ui3UumcN8KX7VK3WaD4KGeSKpypj\",\n    decimals: 8,\n    extensions: {},\n  },\n  GOFX: {\n    symbol: \"GOFX\",\n    name: \"GooseFX\",\n    mint: \"GFX1ZjR2P15tmrSwow6FjyDYcEkoFb4p4gJCpLBjaxHD\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"goosefx\",\n    },\n  },\n  IN: {\n    symbol: \"IN\",\n    name: \"Invictus\",\n    mint: \"inL8PMVd6iiW3RCBJnr5AsrRN6nqr4BTrcNuQWQSkvY\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"invictus\",\n    },\n  },\n  weDYDX: {\n    symbol: \"weDYDX\",\n    name: \"weDYDX\",\n    mint: \"4Hx6Bj56eGyw8EJrrheM6LBQAvVYRikYCWsALeTrwyRU\",\n    decimals: 8,\n    extensions: {},\n  },\n  STARS: {\n    symbol: \"STARS\",\n    name: \"StarLaunch\",\n    mint: \"HCgybxq5Upy8Mccihrp7EsmwwFqYZtrHrsmsKwtGXLgW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"starlaunch\",\n    },\n  },\n  weAXS: {\n    symbol: \"weAXS\",\n    name: \"weAXS\",\n    mint: \"HysWcbHiYY9888pHbaqhwLYZQeZrcQMXKQWRqS7zcPK5\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSHIB: {\n    symbol: \"weSHIB\",\n    name: \"weSHIB\",\n    mint: \"CiKu4eHsVrc1eueVQeHn7qhXTcVu95gSQmBpX4utjL9z\",\n    decimals: 8,\n    extensions: {},\n  },\n  OXS: {\n    symbol: \"OXS\",\n    name: \"Oxbull Solana\",\n    mint: \"4TGxgCSJQx2GQk9oHZ8dC5m3JNXTYZHjXumKAW3vLnNx\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"oxbull-solana\",\n    },\n  },\n  CWAR: {\n    symbol: \"CWAR\",\n    name: \"Cryowar\",\n    mint: \"HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cryowar-token\",\n    },\n  },\n  UPS: {\n    symbol: \"UPS\",\n    name: \"UPFI Network\",\n    mint: \"EwJN2GqUGXXzYmoAciwuABtorHczTA5LqbukKXV1viH7\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"upfi-network\",\n    },\n  },\n  weSAND: {\n    symbol: \"weSAND\",\n    name: \"weSAND\",\n    mint: \"49c7WuCZkQgc3M4qH8WuEUNXfgwupZf1xqWkDQ7gjRGt\",\n    decimals: 8,\n    extensions: {},\n  },\n  weMANA: {\n    symbol: \"weMANA\",\n    name: \"weMANA\",\n    mint: \"7dgHoN8wBZCc5wbnQ2C47TDnBMAxG4Q5L3KjP67z8kNi\",\n    decimals: 8,\n    extensions: {},\n  },\n  CAVE: {\n    symbol: \"CAVE\",\n    name: \"Crypto Cavemen\",\n    mint: \"4SZjjNABoqhbd4hnapbvoEPEqT8mnNkfbEoAwALf1V8t\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cave\",\n    },\n  },\n  JSOL: {\n    symbol: \"JSOL\",\n    name: \"JPool\",\n    mint: \"7Q2afV64in6N6SeZsAAB81TJzwDoD6zpqmHkzi9Dcavn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"jpool\",\n    },\n  },\n  APT: {\n    symbol: \"APT\",\n    name: \"Apricot\",\n    mint: \"APTtJyaRX5yGTsJU522N4VYWg3vCvSb65eam5GrPT5Rt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"apricot\",\n    },\n  },\n  SONAR: {\n    symbol: \"SONAR\",\n    name: \"SonarWatch\",\n    mint: \"sonarX4VtVkQemriJeLm6CKeW3GDMyiBnnAEMw1MRAE\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sonarwatch\",\n    },\n  },\n  SHILL: {\n    symbol: \"SHILL\",\n    name: \"SHILL Token\",\n    mint: \"6cVgJUqo4nmvQpbgrDZwyfd6RwWw5bfnCamS3M9N1fd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"shill-token\",\n    },\n  },\n  TTT: {\n    symbol: \"TTT\",\n    name: \"TabTrader\",\n    mint: \"FNFKRV3V8DtA3gVJN6UshMiLGYA8izxFwkNWmJbFjmRj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tabtrader\",\n    },\n  },\n  BOKU: {\n    symbol: \"BOKU\",\n    name: \"Boryoku Dragonz\",\n    mint: \"CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"boku\",\n    },\n  },\n  MIMO: {\n    symbol: \"MIMO\",\n    name: \"Million Monke\",\n    mint: \"9TE7ebz1dsFo1uQ2T4oYAKSm39Y6fWuHrd6Uk6XaiD16\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"million-monke\",\n    },\n  },\n  wbWBNB: {\n    symbol: \"wbWBNB\",\n    name: \"wbWBNB\",\n    mint: \"9gP2kCy3wA1ctvYWQk75guqXuHfrEomqydHLtcTCqiLa\",\n    decimals: 8,\n    extensions: {},\n  },\n  wePEOPLE: {\n    symbol: \"wePEOPLE\",\n    name: \"wePEOPLE\",\n    mint: \"CobcsUrt3p91FwvULYKorQejgsm5HoQdv5T8RUZ6PnLA\",\n    decimals: 8,\n    extensions: {},\n  },\n  XTAG: {\n    symbol: \"XTAG\",\n    name: \"xHashtag\",\n    mint: \"5gs8nf4wojB5EXgDUWNLwXpknzgV2YWDhveAeBZpVLbp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"xhashtag\",\n    },\n  },\n  KKO: {\n    symbol: \"KKO\",\n    name: \"Kineko\",\n    mint: \"kiNeKo77w1WBEzFFCXrTDRWGRWGP8yHvKC9rX6dqjQh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"kineko\",\n    },\n  },\n  VI: {\n    symbol: \"VI\",\n    name: \"Vybit\",\n    mint: \"7zBWymxbZt7PVHQzfi3i85frc1YRiQc23K7bh3gos8ZC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"vybit\",\n    },\n  },\n  SOLC: {\n    symbol: \"SOLC\",\n    name: \"Solcubator\",\n    mint: \"Bx1fDtvTN6NvE4kjdPHQXtmGSg582bZx9fGy4DQNMmAT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solcubator\",\n    },\n  },\n  STR: {\n    symbol: \"STR\",\n    name: \"Solster\",\n    mint: \"9zoqdwEBKWEi9G5Ze8BSkdmppxGgVv1Kw4LuigDiNr9m\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solster\",\n    },\n  },\n  SPWN: {\n    symbol: \"SPWN\",\n    name: \"Bitspawn\",\n    mint: \"5U9QqCPhqXAJcEv9uyzFJd5zhN93vuPk1aNNkXnUfPnt\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"bitspawn\",\n    },\n  },\n  ISOLA: {\n    symbol: \"ISOLA\",\n    name: \"Intersola\",\n    mint: \"333iHoRM2Awhf9uVZtSyTfU8AekdGrgQePZsKMFPgKmS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"intersola\",\n    },\n  },\n  RUN: {\n    symbol: \"RUN\",\n    name: \"Run\",\n    mint: \"6F9XriABHfWhit6zmMUYAQBSy6XK5VF1cHXuW5LDpRtC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"run\",\n    },\n  },\n  REAL: {\n    symbol: \"REAL\",\n    name: \"Realy Metaverse\",\n    mint: \"AD27ov5fVU2XzwsbvnFvb1JpCBaCB5dRXrczV9CqSVGb\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"realy-metaverse\",\n    },\n  },\n  CRWNY: {\n    symbol: \"CRWNY\",\n    name: \"CRWNY\",\n    mint: \"CRWNYkqdgvhGGae9CKfNka58j6QQkaD5bLhKXvUYqnc1\",\n    decimals: 6,\n    extensions: {},\n  },\n  BLOCK: {\n    symbol: \"BLOCK\",\n    name: \"Blockasset\",\n    mint: \"NFTUkR4u7wKxy9QLaX2TGvd9oZSWoMo4jqSJqdMb7Nk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"blockasset\",\n    },\n  },\n  SOLAR: {\n    symbol: \"SOLAR\",\n    name: \"Solar\",\n    mint: \"2wmKXX1xsxLfrvjEPrt2UHiqj8Gbzwxvffr9qmNjsw8g\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solar\",\n    },\n  },\n  BASIS: {\n    symbol: \"BASIS\",\n    name: \"basis.markets\",\n    mint: \"Basis9oJw9j8cw53oMV7iqsgo6ihi9ALw4QR31rcjUJa\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"basis-markets\",\n    },\n  },\n  SOLX: {\n    symbol: \"SOLX\",\n    name: \"Soldex\",\n    mint: \"CH74tuRLTYcxG7qNJCsV9rghfLXJCQJbsu7i52a8F1Gn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"soldex\",\n    },\n  },\n  CHICKS: {\n    symbol: \"CHICKS\",\n    name: \"SolChicks Token\",\n    mint: \"cxxShYRVcepDudXhe7U62QHvw8uBJoKFifmzggGKVC2\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solchicks-token\",\n    },\n  },\n  GST: {\n    symbol: \"GST\",\n    name: \"GST\",\n    mint: \"AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"gst\",\n    },\n  },\n  MBS: {\n    symbol: \"MBS\",\n    name: \"MonkeyBall\",\n    mint: \"Fm9rHUTF5v3hwMLbStjZXqNBBoZyGriQaFM6sTFz3K8A\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"monkeyball\",\n    },\n  },\n  PRISM: {\n    symbol: \"PRISM\",\n    name: \"Prism\",\n    mint: \"PRSMNsEPqhGVCH1TtWiJqPjJyh2cKrLostPZTNy1o5x\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"prism\",\n    },\n  },\n  MEAN: {\n    symbol: \"MEAN\",\n    name: \"Meanfi\",\n    mint: \"MEANeD3XDdUmNMsRGjASkSWdC8prLYsoRJ61pPeHctD\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"meanfi\",\n    },\n  },\n  TINY: {\n    symbol: \"TINY\",\n    name: \"Tiny Colony\",\n    mint: \"HKfs24UEDQpHS5hUyKYkHd9q7GY5UQ679q2bokeL2whu\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tiny-colony\",\n    },\n  },\n  SHDW: {\n    symbol: \"SHDW\",\n    name: \"GenesysGo Shadow\",\n    mint: \"SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genesysgo-shadow\",\n    },\n  },\n  SCY: {\n    symbol: \"SCY\",\n    name: \"Synchrony\",\n    mint: \"SCYfrGCw8aDiqdgcpdGjV6jp4UVVQLuphxTDLNWu36f\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"synchrony\",\n    },\n  },\n  SLC: {\n    symbol: \"SLC\",\n    name: \"Solice\",\n    mint: \"METAmTMXwdb8gYzyCPfXXFmZZw4rUsXX58PNsDg7zjL\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solice\",\n    },\n  },\n};\n\nexport const MAINNET_LP_TOKENS: LpTokens = {\n  FIDA_RAY_V4: {\n    symbol: \"FIDA-RAY\",\n    name: \"FIDA-RAY V4 LP\",\n    mint: \"DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv\",\n\n    base: MAINNET_SPL_TOKENS.FIDA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.FIDA.decimals,\n\n    version: 4,\n  },\n  OXY_RAY_V4: {\n    symbol: \"OXY-RAY\",\n    name: \"OXY-RAY V4 LP\",\n    mint: \"FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb\",\n\n    base: MAINNET_SPL_TOKENS.OXY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.OXY.decimals,\n\n    version: 4,\n  },\n  MAPS_RAY_V4: {\n    symbol: \"MAPS-RAY\",\n    name: \"MAPS-RAY V4 LP\",\n    mint: \"CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP\",\n\n    base: MAINNET_SPL_TOKENS.MAPS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MAPS.decimals,\n\n    version: 4,\n  },\n  KIN_RAY_V4: {\n    symbol: \"KIN-RAY\",\n    name: \"KIN-RAY V4 LP\",\n    mint: \"CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW\",\n\n    base: MAINNET_SPL_TOKENS.KIN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    // mistake, a special one\n    decimals: 6,\n\n    version: 4,\n  },\n  RAY_USDT_V4: {\n    symbol: \"RAY-USDT\",\n    name: \"RAY-USDT V4 LP\",\n    mint: \"C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  SOL_USDC_V4: {\n    symbol: \"SOL-USDC\",\n    name: \"SOL-USDC V4 LP\",\n    mint: \"8HoQnePLqPj4M7PUDzfw8e3Ymdwgc7NLGnaTUapubyvu\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDC_V4: {\n    symbol: \"YFI-USDC\",\n    name: \"YFI-USDC V4 LP\",\n    mint: \"865j7iMmRRycSYUXzJ33ZcvLiX9JHvaLidasCyUyKaRE\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDC_V4: {\n    symbol: \"SRM-USDC\",\n    name: \"SRM-USDC V4 LP\",\n    mint: \"9XnZd82j34KxNLgQfz29jGbYdxsYznTWRpvZE3SRE7JG\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDC_V4: {\n    symbol: \"FTT-USDC\",\n    name: \"FTT-USDC V4 LP\",\n    mint: \"75dCoKfUHLUuZ4qEh46ovsxfgWhB4icc3SintzWRedT9\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDC_V4: {\n    symbol: \"BTC-USDC\",\n    name: \"BTC-USDC V4 LP\",\n    mint: \"2hMdRdVWZqetQsaHG8kQjdZinEMBz75vsoWTCob1ijXu\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDC_V4: {\n    symbol: \"SUSHI-USDC\",\n    name: \"SUSHI-USDC V4 LP\",\n    mint: \"2QVjeR9d2PbSf8em8NE8zWd8RYHjFtucDUdDgdbDD2h2\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDC_V4: {\n    symbol: \"TOMO-USDC\",\n    name: \"TOMO-USDC V4 LP\",\n    mint: \"CHyUpQFeW456zcr5XEh4RZiibH8Dzocs6Wbgz9aWpXnQ\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDC_V4: {\n    symbol: \"LINK-USDC\",\n    name: \"LINK-USDC V4 LP\",\n    mint: \"BqjoYjqKrXtfBKXeaWeAT5sYCy7wsAYf3XjgDWsHSBRs\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDC_V4: {\n    symbol: \"ETH-USDC\",\n    name: \"ETH-USDC V4 LP\",\n    mint: \"13PoKid6cZop4sj2GfoBeujnGfthUbTERdE5tpLCDLEY\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  xCOPE_USDC_V4: {\n    symbol: \"xCOPE-USDC\",\n    name: \"xCOPE-USDC V4 LP\",\n    mint: \"2Vyyeuyd15Gp8aH6uKE72c4hxc8TVSLibxDP9vzspQWG\",\n\n    base: MAINNET_SPL_TOKENS.xCOPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.xCOPE.decimals,\n\n    version: 4,\n  },\n  SOL_USDT_V4: {\n    symbol: \"SOL-USDT\",\n    name: \"SOL-USDT V4 LP\",\n    mint: \"Epm4KfTj4DMrvqn6Bwg2Tr2N8vhQuNbuK8bESFp4k33K\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDT_V4: {\n    symbol: \"YFI-USDT\",\n    name: \"YFI-USDT V4 LP\",\n    mint: \"FA1i7fej1pAbQbnY8NbyYUsTrWcasTyipKreDgy1Mgku\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDT_V4: {\n    symbol: \"SRM-USDT\",\n    name: \"SRM-USDT V4 LP\",\n    mint: \"HYSAu42BFejBS77jZAZdNAWa3iVcbSRJSzp3wtqCbWwv\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDT_V4: {\n    symbol: \"FTT-USDT\",\n    name: \"FTT-USDT V4 LP\",\n    mint: \"2cTCiUnect5Lap2sk19xLby7aajNDYseFhC9Pigou11z\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDT_V4: {\n    symbol: \"BTC-USDT\",\n    name: \"BTC-USDT V4 LP\",\n    mint: \"DgGuvR9GSHimopo3Gc7gfkbKamLKrdyzWkq5yqA6LqYS\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDT_V4: {\n    symbol: \"SUSHI-USDT\",\n    name: \"SUSHI-USDT V4 LP\",\n    mint: \"Ba26poEYDy6P2o95AJUsewXgZ8DM9BCsmnU9hmC9i4Ki\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDT_V4: {\n    symbol: \"TOMO-USDT\",\n    name: \"TOMO-USDT V4 LP\",\n    mint: \"D3iGro1vn6PWJXo9QAPj3dfta6dKkHHnmiiym2EfsAmi\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDT_V4: {\n    symbol: \"LINK-USDT\",\n    name: \"LINK-USDT V4 LP\",\n    mint: \"Dr12Sgt9gkY8WU5tRkgZf1TkVWJbvjYuPAhR3aDCwiiX\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDT_V4: {\n    symbol: \"ETH-USDT\",\n    name: \"ETH-USDT V4 LP\",\n    mint: \"nPrB78ETY8661fUgohpuVusNCZnedYCgghzRJzxWnVb\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  YFI_SRM_V4: {\n    symbol: \"YFI-SRM\",\n    name: \"YFI-SRM V4 LP\",\n    mint: \"EGJht91R7dKpCj8wzALkjmNdUUUcQgodqWCYweyKcRcV\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  FTT_SRM_V4: {\n    symbol: \"FTT-SRM\",\n    name: \"FTT-SRM V4 LP\",\n    mint: \"AsDuPg9MgPtt3jfoyctUCUgsvwqAN6RZPftqoeiPDefM\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_SRM_V4: {\n    symbol: \"BTC-SRM\",\n    name: \"BTC-SRM V4 LP\",\n    mint: \"AGHQxXb3GSzeiLTcLtXMS2D5GGDZxsB2fZYZxSB5weqB\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_SRM_V4: {\n    symbol: \"SUSHI-SRM\",\n    name: \"SUSHI-SRM V4 LP\",\n    mint: \"3HYhUnUdV67j1vn8fu7ExuVGy5dJozHEyWvqEstDbWwE\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_SRM_V4: {\n    symbol: \"TOMO-SRM\",\n    name: \"TOMO-SRM V4 LP\",\n    mint: \"GgH9RnKrQpaMQeqmdbMvs5oo1A24hERQ9wuY2pSkeG7x\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_SRM_V4: {\n    symbol: \"LINK-SRM\",\n    name: \"LINK-SRM V4 LP\",\n    mint: \"GXN6yJv12o18skTmJXaeFXZVY1iqR18CHsmCT8VVCmDD\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_SRM_V4: {\n    symbol: \"ETH-SRM\",\n    name: \"ETH-SRM V4 LP\",\n    mint: \"9VoY3VERETuc2FoadMSYYizF26mJinY514ZpEzkHMtwG\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  SRM_SOL_V4: {\n    symbol: \"SRM-SOL\",\n    name: \"SRM-SOL V4 LP\",\n    mint: \"AKJHspCwDhABucCxNLXUSfEzb7Ny62RqFtC9uNjJi4fq\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  STEP_USDC_V4: {\n    symbol: \"STEP-USDC\",\n    name: \"STEP-USDC V4 LP\",\n    mint: \"3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC\",\n\n    base: MAINNET_SPL_TOKENS.STEP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STEP.decimals,\n\n    version: 4,\n  },\n  MEDIA_USDC_V4: {\n    symbol: \"MEDIA-USDC\",\n    name: \"MEDIA-USDC V4 LP\",\n    mint: \"A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  ROPE_USDC_V4: {\n    symbol: \"ROPE-USDC\",\n    name: \"ROPE-USDC V4 LP\",\n    mint: \"Cq4HyW5xia37tKejPF2XfZeXQoPYW6KfbPvxvw5eRoUE\",\n\n    base: MAINNET_SPL_TOKENS.ROPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ROPE.decimals,\n\n    version: 4,\n  },\n  MER_USDC_V4: {\n    symbol: \"MER-USDC\",\n    name: \"MER-USDC V4 LP\",\n    mint: \"3H9NxvaZoxMZZDZcbBDdWMKbrfNj7PCF5sbRwDr7SdDW\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  COPE_USDC_V4: {\n    symbol: \"COPE-USDC\",\n    name: \"COPE-USDC V4 LP\",\n    mint: \"Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ALEPH_USDC_V4: {\n    symbol: \"ALEPH-USDC\",\n    name: \"ALEPH-USDC V4 LP\",\n    mint: \"iUDasAP2nXm5wvTukAHEKSdSXn8vQkRtaiShs9ceGB7\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_USDC_V4: {\n    symbol: \"TULIP-USDC\",\n    name: \"TULIP-USDC V4 LP\",\n    mint: \"2doeZGLJyACtaG9DCUyqMLtswesfje1hjNA11hMdj6YU\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  WOO_USDC_V4: {\n    symbol: \"WOO-USDC\",\n    name: \"WOO-USDC V4 LP\",\n    mint: \"7cu42ao8Jgrd5A3y3bNQsCxq5poyGZNmTydkGfJYQfzh\",\n\n    base: MAINNET_SPL_TOKENS.WOO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOO.decimals,\n\n    version: 4,\n  },\n  SNY_USDC_V4: {\n    symbol: \"SNY-USDC\",\n    name: \"SNY-USDC V4 LP\",\n    mint: \"G8qcfeFqxwbCqpxv5LpLWxUCd1PyMB5nWb5e5YyxLMKg\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  BOP_RAY_V4: {\n    symbol: \"BOP-RAY\",\n    name: \"BOP-RAY V4 LP\",\n    mint: \"9nQPYJvysyfnXhQ6nkK5V7sZG26hmDgusfdNQijRk5LD\",\n\n    base: MAINNET_SPL_TOKENS.BOP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.BOP.decimals,\n\n    version: 4,\n  },\n  SLRS_USDC_V4: {\n    symbol: \"SLRS-USDC\",\n    name: \"SLRS-USDC V4 LP\",\n    mint: \"2Xxbm1hdv5wPeen5ponDSMT3VqhGMTQ7mH9stNXm9shU\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  SAMO_RAY_V4: {\n    symbol: \"SAMO-RAY\",\n    name: \"SAMO-RAY V4 LP\",\n    mint: \"HwzkXyX8B45LsaHXwY8su92NoRBS5GQC32HzjQRDqPnr\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  renBTC_USDC_V4: {\n    symbol: \"renBTC-USDC\",\n    name: \"renBTC-USDC V4 LP\",\n    mint: \"CTEpsih91ZLo5gunvryLpJ3pzMjmt5jbS6AnSQrzYw7V\",\n\n    base: MAINNET_SPL_TOKENS.renBTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renBTC.decimals,\n\n    version: 4,\n  },\n  renDOGE_USDC_V4: {\n    symbol: \"renDOGE-USDC\",\n    name: \"renDOGE-USDC V4 LP\",\n    mint: \"Hb8KnZNKvRxu7pgMRWJgoMSMcepfvNiBFFDDrdf9o3wA\",\n\n    base: MAINNET_SPL_TOKENS.renDOGE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renDOGE.decimals,\n\n    version: 4,\n  },\n  RAY_USDC_V4: {\n    symbol: \"RAY-USDC\",\n    name: \"RAY-USDC V4 LP\",\n    mint: \"FbC6K13MzHvN42bXrtGaWsvZY9fxrackRSZcBGfjPc7m\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SRM_V4: {\n    symbol: \"RAY-SRM\",\n    name: \"RAY-SRM V4 LP\",\n    mint: \"7P5Thr9Egi2rvMmEuQkLn8x8e8Qro7u2U7yLD2tU2Hbe\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_ETH_V4: {\n    symbol: \"RAY-ETH\",\n    name: \"RAY-ETH V4 LP\",\n    mint: \"mjQH33MqZv5aKAbKHi8dG3g3qXeRQqq1GFcXceZkNSr\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.ETH,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SOL_V4: {\n    symbol: \"RAY-SOL\",\n    name: \"RAY-SOL V4 LP\",\n    mint: \"89ZKE4aoyfLBe2RuV6jM3JGNhaV18Nxh8eNtjRcndBip\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  DXL_USDC_V4: {\n    symbol: \"DXL-USDC\",\n    name: \"DXL-USDC V4 LP\",\n    mint: \"4HFaSvfgskipvrzT1exoVKsUZ174JyExEsA8bDfsAdY5\",\n\n    base: MAINNET_SPL_TOKENS.DXL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DXL.decimals,\n\n    version: 4,\n  },\n  LIKE_USDC_V4: {\n    symbol: \"LIKE-USDC\",\n    name: \"LIKE-USDC V4 LP\",\n    mint: \"cjZmbt8sJgaoyWYUttomAu5LJYU44ZrcKTbzTSEPDVw\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  mSOL_USDC_V4: {\n    symbol: \"mSOL-USDC\",\n    name: \"mSOL-USDC V4 LP\",\n    mint: \"4xTpJ4p76bAeggXoYywpCCNKfJspbuRzZ79R7pRhbqSf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  mSOL_SOL_V4: {\n    symbol: \"mSOL-SOL\",\n    name: \"mSOL-SOL V4 LP\",\n    mint: \"5ijRoAHVgd5T5CNtK5KDRUBZ7Bffb69nktMj5n6ks6m4\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MER_PAI_V4: {\n    symbol: \"MER-PAI\",\n    name: \"MER-PAI V4 LP\",\n    mint: \"DU5RT2D9EviaSmX6Ta8MZwMm85HwSEqGMRdqUiuCGfmD\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.PAI,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  PORT_USDC_V4: {\n    symbol: \"PORT-USDC\",\n    name: \"PORT-USDC V4 LP\",\n    mint: \"9tmNtbUCrLS15qC4tEfr5NNeqcqpZ4uiGgi2vS5CLQBS\",\n\n    base: MAINNET_SPL_TOKENS.PORT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PORT.decimals,\n\n    version: 4,\n  },\n  MNGO_USDC_V4: {\n    symbol: \"MNGO-USDC\",\n    name: \"MNGO-USDC V4 LP\",\n    mint: \"DkiqCQ792n743xjWQVCbBUaVtkdiuvQeYndM53ReWnCC\",\n\n    base: MAINNET_SPL_TOKENS.MNGO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MNGO.decimals,\n\n    version: 4,\n  },\n  ATLAS_USDC_V4: {\n    symbol: \"ATLAS-USDC\",\n    name: \"ATLAS-USDC V4 LP\",\n    mint: \"9shGU9f1EsxAbiR567MYZ78WUiS6ZNCYbHe53WUULQ7n\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_USDC_V4: {\n    symbol: \"POLIS-USDC\",\n    name: \"POLIS-USDC V4 LP\",\n    mint: \"8MbKSBpyXs8fVneKgt71jfHrn5SWtX8n4wMLpiVfF9So\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ATLAS_RAY_V4: {\n    symbol: \"ATLAS-RAY\",\n    name: \"ATLAS-RAY V4 LP\",\n    mint: \"418MFhkaYQtbn529wmjLLqL6uKxDz7j4eZBaV1cobkyd\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_RAY_V4: {\n    symbol: \"POLIS-RAY\",\n    name: \"POLIS-RAY V4 LP\",\n    mint: \"9ysGKUH6WqzjQEUT4dxqYCUaFNVK9QFEa24pGzjFq8xg\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ALEPH_RAY_V4: {\n    symbol: \"ALEPH-RAY\",\n    name: \"ALEPH-RAY V4 LP\",\n    mint: \"n76skjqv4LirhdLok2zJELXNLdRpYDgVJQuQFbamscy\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_RAY_V4: {\n    symbol: \"TULIP-RAY\",\n    name: \"TULIP-RAY V4 LP\",\n    mint: \"3AZTviji5qduMG2s4FfWGR3SSQmNUCyx8ao6UKCPg3oJ\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  SLRS_RAY_V4: {\n    symbol: \"SLRS-RAY\",\n    name: \"SLRS-RAY V4 LP\",\n    mint: \"2pk78vsKT3jfJAcN2zbpMUnrR57SZrxHqaZYyFgp92mM\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  MER_RAY_V4: {\n    symbol: \"MER-RAY\",\n    name: \"MER-RAY V4 LP\",\n    mint: \"214hxy3AbKoaEKgqcg2aC1cP5R67cGGAyDEg5GDwC7Ub\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  MEDIA_RAY_V4: {\n    symbol: \"MEDIA-RAY\",\n    name: \"MEDIA-RAY V4 LP\",\n    mint: \"9Aseg5A1JD1yCiFFdDaNNxCiJ7XzrpZFmcEmLjXFdPaH\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  SNY_RAY_V4: {\n    symbol: \"SNY-RAY\",\n    name: \"SNY-RAY V4 LP\",\n    mint: \"2k4quTuuLUxrSEhFH99qcoZzvgvVEc3b5sz3xz3qstfS\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  LIKE_RAY_V4: {\n    symbol: \"LIKE-RAY\",\n    name: \"LIKE-RAY V4 LP\",\n    mint: \"7xqDycbFSCpUpzkYapFeyPJWPwEpV7zdWbYf2MVHTNjv\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  COPE_RAY_V4: {\n    symbol: \"COPE-RAY\",\n    name: \"COPE-RAY V4 LP\",\n    mint: \"A7GCVHA8NSsbdFscHdoNU41tL1TRKNmCH4K94CgcLK9F\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ETH_SOL_V4: {\n    symbol: \"ETH-SOL\",\n    name: \"ETH-SOL V4 LP\",\n    mint: \"GKfgC86iJoMjwAtcyiLu6nWnjggqUXsDQihXkP14fDez\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  stSOL_USDC_V4: {\n    symbol: \"stSOL-USDC\",\n    name: \"stSOL-USDC V4 LP\",\n    mint: \"HDUJMwYZkjUZre63xUeDhdCi8c6LgUDiBqxmP3QC3VPX\",\n\n    base: MAINNET_SPL_TOKENS.stSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.stSOL.decimals,\n\n    version: 4,\n  },\n  GRAPE_USDC_V4: {\n    symbol: \"GRAPE-USDC\",\n    name: \"GRAPE-USDC V4 LP\",\n    mint: \"A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt\",\n\n    base: MAINNET_SPL_TOKENS.GRAPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GRAPE.decimals,\n\n    version: 4,\n  },\n  LARIX_USDC_V4: {\n    symbol: \"LARIX-USDC\",\n    name: \"LARIX-USDC V4 LP\",\n    mint: \"7yieit4YsNsZ9CAK8H5ZEMvvk35kPEHHeXwp6naoWU9V\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  RIN_USDC_V4: {\n    symbol: \"RIN-USDC\",\n    name: \"RIN-USDC V4 LP\",\n    mint: \"GfCWfrZez7BDmCSEeMERVDVUaaM2TEreyYUgb2cpuS3w\",\n\n    base: MAINNET_SPL_TOKENS.RIN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RIN.decimals,\n\n    version: 4,\n  },\n  APEX_USDC_V4: {\n    symbol: \"APEX-USDC\",\n    name: \"APEX-USDC V4 LP\",\n    mint: \"444cVqYyDxJNo6FqiMb9qQWFUd7tYzFRdDuJRFrSAGnU\",\n\n    base: MAINNET_SPL_TOKENS.APEX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APEX.decimals,\n\n    version: 4,\n  },\n  mSOL_RAY_V4: {\n    symbol: \"mSOL-RAY\",\n    name: \"mSOL-RAY V4 LP\",\n    mint: \"De2EHBAdkgfc72DpShqDGG42cV3iDWh8wvvZdPsiEcqP\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MNDE_mSOL_V4: {\n    symbol: \"MNDE-mSOL\",\n    name: \"MNDE-mSOL V4 LP\",\n    mint: \"4bh8XCzTHSbqbWN8o1Jn4ueBdz1LvJFoEasN6K6CQ8Ny\",\n\n    base: MAINNET_SPL_TOKENS.MNDE,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.MNDE.decimals,\n\n    version: 4,\n  },\n  LARIX_RAY_V4: {\n    symbol: \"LARIX-RAY\",\n    name: \"LARIX-RAY V4 LP\",\n    mint: \"ZRDfSLgWGeaYSmhdPvFNKQQhDcYdZQaue2N8YDmHX4q\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  LIQ_USDC_V4: {\n    symbol: \"LIQ-USDC\",\n    name: \"LIQ-USDC V4 LP\",\n    mint: \"GWpD3eTfhJB5KDCcnE85dBQrjAk2CsrgDF9b52R9CrjV\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  WAG_USDC_V4: {\n    symbol: \"WAG-USDC\",\n    name: \"WAG-USDC V4 LP\",\n    mint: \"4yykyPugitUVRewNPXXCviRvxGfsfsRMoP32z3b6FmUC\",\n\n    base: MAINNET_SPL_TOKENS.WAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WAG.decimals,\n\n    version: 4,\n  },\n  ETH_mSOL_V4: {\n    symbol: \"ETH-mSOL\",\n    name: \"ETH-mSOL V4 LP\",\n    mint: \"HYv3grQfi8QbV7nG7EFgNK1aJSrsJ7HynXJKJVPLL2Uh\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  mSOL_USDT_V4: {\n    symbol: \"mSOL-USDT\",\n    name: \"mSOL-USDT V4 LP\",\n    mint: \"69NCmEW9mGpiWLjAcAWHq51k4ionJZmzgRfRT3wQaCCf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  BTC_mSOL_V4: {\n    symbol: \"BTC-mSOL\",\n    name: \"BTC-mSOL V4 LP\",\n    mint: \"92bcERNtUmuaJ6mwLSxYHZYSph37jdKxRdoYNxpcYNPp\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SLIM_SOL_V4: {\n    symbol: \"SLIM-SOL\",\n    name: \"SLIM-SOL V4 LP\",\n    mint: \"9X4EK8E59VAVi6ChnNvvd39m6Yg9RtkBbAPq1mDVJT57\",\n\n    base: MAINNET_SPL_TOKENS.SLIM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SLIM.decimals,\n\n    version: 4,\n  },\n  AURY_USDC_V4: {\n    symbol: \"AURY-USDC\",\n    name: \"AURY-USDC V4 LP\",\n    mint: \"Gub5dvTy4nzP82qpmpNkBxmRqjtqRddBTBqHSdNcf2oS\",\n\n    base: MAINNET_SPL_TOKENS.AURY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.AURY.decimals,\n\n    version: 4,\n  },\n  PRT_SOL_V4: {\n    symbol: \"PRT-SOL\",\n    name: \"PRT-SOL V4 LP\",\n    mint: \"EcJ8Wgwt1AzSPiDpVr6aaSur8TKAsNTPmmzRACeqT68Z\",\n\n    base: MAINNET_SPL_TOKENS.PRT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.PRT.decimals,\n\n    version: 4,\n  },\n  LIQ_RAY_V4: {\n    symbol: \"LIQ-RAY\",\n    name: \"LIQ-RAY V4 LP\",\n    mint: \"49YUsDrThJosHSagCn1F59Uc9NRxbr9thVrZikUnQDXy\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  SYP_SOL_V4: {\n    symbol: \"SYP-SOL\",\n    name: \"SYP-SOL V4 LP\",\n    mint: \"KHV6dfj2bDntzJ9z1S26cDfqWfUZdJRFmteLR6LxHwW\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_RAY_V4: {\n    symbol: \"SYP-RAY\",\n    name: \"SYP-RAY V4 LP\",\n    mint: \"FT2KZqxxM8F2h9pZtTF4PyjK88bM4YbuBzd7ZPwQ5wMB\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_USDC_V4: {\n    symbol: \"SYP-USDC\",\n    name: \"SYP-USDC V4 LP\",\n    mint: \"2xJGuLAivAR1WkARRA6zP1v4jaA9jV2Qis8JfMNvrVyZ\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  FAB_USDC_V4: {\n    symbol: \"FAB-USDC\",\n    name: \"FAB-USDC V4 LP\",\n    mint: \"5rTCvZq6BcApsC3VV1EEUuTJfaVd8uYhcGjwTy1By6P8\",\n\n    base: MAINNET_SPL_TOKENS.FAB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FAB.decimals,\n\n    version: 4,\n  },\n  WOOF_RAY_V4: {\n    symbol: \"WOOF-RAY\",\n    name: \"WOOF-RAY V4 LP\",\n    mint: \"H2FAnazDaGFutcmnrwDxhmdncR1Bd7GG4mhPCSUiamDX\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  WOOF_USDC_V4: {\n    symbol: \"WOOF-USDC\",\n    name: \"WOOF-USDC V4 LP\",\n    mint: \"EFSu5TMc1ijRevaYCxUkS7uGvbhsymDHEaTK3UVdNE3q\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  SLND_USDC_V4: {\n    symbol: \"SLND-USDC\",\n    name: \"SLND-USDC V4 LP\",\n    mint: \"EunE9uDh2cGsyJcsGuGKc6wte7kBn8iye2gzC4w2ePHn\",\n\n    base: MAINNET_SPL_TOKENS.SLND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLND.decimals,\n\n    version: 4,\n  },\n  FRKT_SOL_V4: {\n    symbol: \"FRKT-SOL\",\n    name: \"FRKT-SOL V4 LP\",\n    mint: \"HYUKXgpjaxMXHttyrFYtv3z2rdhZ1U9QDH8zEc8BooQC\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  weWETH_SOL_V4: {\n    symbol: \"weWETH-SOL\",\n    name: \"weWETH-SOL V4 LP\",\n    mint: \"3hbozt2Por7bcrGod8N7kEeJNMocFFjCJrQR16TQGBrE\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weWETH_USDC_V4: {\n    symbol: \"weWETH-USDC\",\n    name: \"weWETH-USDC V4 LP\",\n    mint: \"3529SBnMCDW3S3xQ52aABbRHo7PcHvpQA4no8J12L5eK\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weUNI_USDC_V4: {\n    symbol: \"weUNI-USDC\",\n    name: \"weUNI-USDC V4 LP\",\n    mint: \"EEC4QnT41py39QaYnzQnoYQEtDUDNa6Se8SBDgfPSN2a\",\n\n    base: MAINNET_SPL_TOKENS.weUNI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weUNI.decimals,\n\n    version: 4,\n  },\n  weSUSHI_USDC_V4: {\n    symbol: \"weSUSHI-USDC\",\n    name: \"weSUSHI-USDC V4 LP\",\n    mint: \"3wVrtQZsiDNp5yTPyfEzQHPU6iuJoMmpnWg6CTt4V8sR\",\n\n    base: MAINNET_SPL_TOKENS.weSUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSUSHI.decimals,\n\n    version: 4,\n  },\n  CYS_USDC_V4: {\n    symbol: \"CYS-USDC\",\n    name: \"CYS-USDC V4 LP\",\n    mint: \"GfV3QDzzdVUwCNSdfn6PjhmyJvjw18tn51RingWZYwk3\",\n\n    base: MAINNET_SPL_TOKENS.CYS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CYS.decimals,\n\n    version: 4,\n  },\n  SAMO_USDC_V4: {\n    symbol: \"SAMO-USDC\",\n    name: \"SAMO-USDC V4 LP\",\n    mint: \"B2PjGEP3vPf1999fUD14pYdxvSDRVBk43hxB2rgthwEY\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  ABR_USDC_V4: {\n    symbol: \"ABR-USDC\",\n    name: \"ABR-USDC V4 LP\",\n    mint: \"ECHfxkf5zjjZFTX95QfFahNyzG7feyEKcfTdjsdrMSGU\",\n\n    base: MAINNET_SPL_TOKENS.ABR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ABR.decimals,\n\n    version: 4,\n  },\n  IN_USDC_V4: {\n    symbol: \"IN-USDC\",\n    name: \"IN-USDC V4 LP\",\n    mint: \"GbmJtVgg9fRmmmjKUYGMZeSt8wZ47cDDXasg5Y3iF4kz\",\n\n    base: MAINNET_SPL_TOKENS.IN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.IN.decimals,\n\n    version: 4,\n  },\n  weDYDX_USDC_V4: {\n    symbol: \"weDYDX-USDC\",\n    name: \"weDYDX-USDC V4 LP\",\n    mint: \"BjkkMZnnzmgLqzGErzDbkk15ozv48iVKQuunpeM2Hqnk\",\n\n    base: MAINNET_SPL_TOKENS.weDYDX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weDYDX.decimals,\n\n    version: 4,\n  },\n  STARS_USDC_V4: {\n    symbol: \"STARS-USDC\",\n    name: \"STARS-USDC V4 LP\",\n    mint: \"FJ68q7NChhETcGVdinMbM2FF1Cy79dpmUi6HC83K55Hv\",\n\n    base: MAINNET_SPL_TOKENS.STARS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STARS.decimals,\n\n    version: 4,\n  },\n  weAXS_USDC_V4: {\n    symbol: \"weAXS-USDC\",\n    name: \"weAXS-USDC V4 LP\",\n    mint: \"6PSoJQ7myQ1BJtbQC6oiWR8HSecQGyoWsPYTZRJo2ci3\",\n\n    base: MAINNET_SPL_TOKENS.weAXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weAXS.decimals,\n\n    version: 4,\n  },\n  weSHIB_USDC_V4: {\n    symbol: \"weSHIB-USDC\",\n    name: \"weSHIB-USDC V4 LP\",\n    mint: \"AcjX5pmTMGSgxkdxc3r82r6WMKBvS6eQXXFz5ck5KKUa\",\n\n    base: MAINNET_SPL_TOKENS.weSHIB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSHIB.decimals,\n\n    version: 4,\n  },\n  SBR_USDC_V4: {\n    symbol: \"SBR-USDC\",\n    name: \"SBR-USDC V4 LP\",\n    mint: \"9FC8xTFRbgTpuZZYAYnZLxgnQ8r7FwfSBM1SWvGwgF7s\",\n\n    base: MAINNET_SPL_TOKENS.SBR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SBR.decimals,\n\n    version: 4,\n  },\n  OXS_USDC_V4: {\n    symbol: \"OXS-USDC\",\n    name: \"OXS-USDC V4 LP\",\n    mint: \"et9pdjWm97rbmsJoN183GkFV5qzTGru79GE1Zhe7NTU\",\n\n    base: MAINNET_SPL_TOKENS.OXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.OXS.decimals,\n\n    version: 4,\n  },\n  CWAR_USDC_V4: {\n    symbol: \"CWAR-USDC\",\n    name: \"CWAR-USDC V4 LP\",\n    mint: \"HjR23bxn2gtRDB2P1Tm3DLepAPPZgazsWJpLG9wqjnYR\",\n\n    base: MAINNET_SPL_TOKENS.CWAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CWAR.decimals,\n\n    version: 4,\n  },\n  UPS_USDC_V4: {\n    symbol: \"UPS-USDC\",\n    name: \"UPS-USDC V4 LP\",\n    mint: \"9hSUZdREEsbaYaKY4FouvXr7xyAqtpdHRDoYCb6Mb28a\",\n\n    base: MAINNET_SPL_TOKENS.UPS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.UPS.decimals,\n\n    version: 4,\n  },\n  weSAND_USDC_V4: {\n    symbol: \"weSAND-USDC\",\n    name: \"weSAND-USDC V4 LP\",\n    mint: \"3dADrQa7utyiCsaFeVk9r7oebW1WheowhKo5soBYKBVT\",\n\n    base: MAINNET_SPL_TOKENS.weSAND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSAND.decimals,\n\n    version: 4,\n  },\n  weMANA_USDC_V4: {\n    symbol: \"weMANA-USDC\",\n    name: \"weMANA-USDC V4 LP\",\n    mint: \"HpUkVAPRJ5zNRuJ1ZwMXEhbMHL3gSuPb2QuSER9YUd3a\",\n\n    base: MAINNET_SPL_TOKENS.weMANA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weMANA.decimals,\n\n    version: 4,\n  },\n  CAVE_USDC_V4: {\n    symbol: \"CAVE-USDC\",\n    name: \"CAVE-USDC V4 LP\",\n    mint: \"5Gba1k3fU7Vh7UtAiBmie9vhQNNq1JfEwgn1DPGZ7NKQ\",\n\n    base: MAINNET_SPL_TOKENS.CAVE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CAVE.decimals,\n\n    version: 4,\n  },\n  GENE_USDC_V4: {\n    symbol: \"GENE-USDC\",\n    name: \"GENE-USDC V4 LP\",\n    mint: \"7GKvfHEXenNiWYbJBKae89mdaMPr5gGMYwZmyC8gBNVG\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  GENE_RAY_V4: {\n    symbol: \"GENE-RAY\",\n    name: \"GENE-RAY V4 LP\",\n    mint: \"3HzXnc1qZ8mGqun18Ck3KA616XnZNqF1RWbgYE2nGRMA\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  APT_USDC_V4: {\n    symbol: \"APT-USDC\",\n    name: \"APT-USDC V4 LP\",\n    mint: \"Hk8mDAJFq4E9kF3DtNgPFwzbo5kbeiusNFJgWmo3LoQ5\",\n\n    base: MAINNET_SPL_TOKENS.APT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APT.decimals,\n\n    version: 4,\n  },\n  GOFX_USDC_V4: {\n    symbol: \"GOFX-USDC\",\n    name: \"GOFX-USDC V4 LP\",\n    mint: \"4svqAwrLPGRDCQuuieYTmtLXF75wiahjeK2rEN9tY1YL\",\n\n    base: MAINNET_SPL_TOKENS.GOFX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GOFX.decimals,\n\n    version: 4,\n  },\n  SONAR_USDC_V4: {\n    symbol: \"SONAR-USDC\",\n    name: \"SONAR-USDC V4 LP\",\n    mint: \"2tAcfqJ1YYjpGLqwh76kyNt9VaNFDd4fJySfH6SmWfKt\",\n\n    base: MAINNET_SPL_TOKENS.SONAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SONAR.decimals,\n\n    version: 4,\n  },\n  JSOL_SOL_V4: {\n    symbol: \"JSOL-SOL\",\n    name: \"JSOL-SOL V4 LP\",\n    mint: \"61z37rpHsU6d3Fq5sUjJ85K6tXGzkoYKDAG3kPJQNDRo\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  JSOL_USDC_V4: {\n    symbol: \"JSOL-USDC\",\n    name: \"JSOL-USDC V4 LP\",\n    mint: \"3JZqf2VPNxj1kDZQsfzC7myM6spsGQbGuFv1gVfdYosN\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  SHILL_USDC_V4: {\n    symbol: \"SHILL-USDC\",\n    name: \"SHILL-USDC V4 LP\",\n    mint: \"CnUhYBtQEbSBZ76bgxAouVCTCb8rofZzwerVF5z5LREJ\",\n\n    base: MAINNET_SPL_TOKENS.SHILL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SHILL.decimals,\n\n    version: 4,\n  },\n  DFL_USDC_V4: {\n    symbol: \"DFL-USDC\",\n    name: \"DFL-USDC V4 LP\",\n    mint: \"Fffijd6UVJdQeLVXhenS8YcsnMUdWJqpbBeH42LFkXgS\",\n\n    base: MAINNET_SPL_TOKENS.DFL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DFL.decimals,\n\n    version: 4,\n  },\n  BOKU_USDC_V4: {\n    symbol: \"BOKU-USDC\",\n    name: \"BOKU-USDC V4 LP\",\n    mint: \"8jjQn5Yagb6Nm2WGAxPW1bcGqrTWpg5adf6QukXEarcP\",\n\n    base: MAINNET_SPL_TOKENS.BOKU,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BOKU.decimals,\n\n    version: 4,\n  },\n  MIMO_SOL_V4: {\n    symbol: \"MIMO-SOL\",\n    name: \"MIMO-SOL V4 LP\",\n    mint: \"HUJ1opSk8AiPfDT47r7n4hTiK2EXgrR3Msy7T8q1BywS\",\n\n    base: MAINNET_SPL_TOKENS.MIMO,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.MIMO.decimals,\n\n    version: 4,\n  },\n  wbWBNB_USDC_V4: {\n    symbol: \"wbWBNB-USDC\",\n    name: \"wbWBNB-USDC V4 LP\",\n    mint: \"FEsEfEJJSfiMQcshUgZ5UigfytfGRQ3z5puyF6DXDp9C\",\n\n    base: MAINNET_SPL_TOKENS.wbWBNB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wbWBNB.decimals,\n\n    version: 4,\n  },\n  wePEOPLE_USDC_V4: {\n    symbol: \"wePEOPLE-USDC\",\n    name: \"wePEOPLE-USDC V4 LP\",\n    mint: \"3e5ZCKi4etorpV4pv1fSckP5iJD67xcUkx3RtFCZhbzD\",\n\n    base: MAINNET_SPL_TOKENS.wePEOPLE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wePEOPLE.decimals,\n\n    version: 4,\n  },\n  ISOLA_USDT_V4: {\n    symbol: \"ISOLA-USDT\",\n    name: \"ISOLA-USDT V4 LP\",\n    mint: \"H8s1wQsZpRK61pyLF3XwyQc6E8vNUnwRDhy3TBDCDENQ\",\n\n    base: MAINNET_SPL_TOKENS.ISOLA,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ISOLA.decimals,\n\n    version: 4,\n  },\n  SPWN_USDC_V4: {\n    symbol: \"SPWN-USDC\",\n    name: \"SPWN-USDC V4 LP\",\n    mint: \"B5uyCAQcX6nAjZypLgiivbEKabSptgUb8JK9tkaSnqdW\",\n\n    base: MAINNET_SPL_TOKENS.SPWN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SPWN.decimals,\n\n    version: 4,\n  },\n  STR_USDC_V4: {\n    symbol: \"STR-USDC\",\n    name: \"STR-USDC V4 LP\",\n    mint: \"8uDVKmVwNmbXHDB7rNKqtpcT9VAsFHTJ5pPYxjyoBbNg\",\n\n    base: MAINNET_SPL_TOKENS.STR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STR.decimals,\n\n    version: 4,\n  },\n  SOLC_USDT_V4: {\n    symbol: \"SOLC-USDT\",\n    name: \"SOLC-USDT V4 LP\",\n    mint: \"2g9JzTWycLzK4KEBBHsponAtZRee2ii63bRrJ8tefEyt\",\n\n    base: MAINNET_SPL_TOKENS.SOLC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SOLC.decimals,\n\n    version: 4,\n  },\n  VI_USDC_V4: {\n    symbol: \"VI-USDC\",\n    name: \"VI-USDC V4 LP\",\n    mint: \"3MwHyHCRfVqtH3ABFtdKXdY9dwemr9GGxQFaBkeq6NjY\",\n\n    base: MAINNET_SPL_TOKENS.VI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.VI.decimals,\n\n    version: 4,\n  },\n  KKO_USDC_V4: {\n    symbol: \"KKO-USDC\",\n    name: \"KKO-USDC V4 LP\",\n    mint: \"7xr1Doc1NiMWbUg99YVFqQSLfYXNzo6YvacXUsSgBMNW\",\n\n    base: MAINNET_SPL_TOKENS.KKO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.KKO.decimals,\n\n    version: 4,\n  },\n  XTAG_USDC_V4: {\n    symbol: \"XTAG-USDC\",\n    name: \"XTAG-USDC V4 LP\",\n    mint: \"GCEQbLg4ik5YJ4CMcbtuVqEc4sjLdSGy34rFk1CtGjdg\",\n\n    base: MAINNET_SPL_TOKENS.XTAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.XTAG.decimals,\n\n    version: 4,\n  },\n  TTT_USDC_V4: {\n    symbol: \"TTT-USDC\",\n    name: \"TTT-USDC V4 LP\",\n    mint: \"84fmrerHGohoRf4iLPDQ1KG4CjSjCRksYWGzjWfCRM8a\",\n\n    base: MAINNET_SPL_TOKENS.TTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TTT.decimals,\n\n    version: 4,\n  },\n  RUN_USDC_V4: {\n    symbol: \"RUN-USDC\",\n    name: \"RUN-USDC V4 LP\",\n    mint: \"CjTLvvKSQdEujcSzeZRYgk4w1DpuXBbMppLHaxZyz11Y\",\n\n    base: MAINNET_SPL_TOKENS.RUN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RUN.decimals,\n\n    version: 4,\n  },\n  CRWNY_USDC_V4: {\n    symbol: \"CRWNY-USDC\",\n    name: \"CRWNY-USDC V4 LP\",\n    mint: \"H3D9Gyi4frRLW6bS9vBthDVDJyzyRJ6XhhpP6PJGWaDC\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  CRWNY_RAY_V4: {\n    symbol: \"CRWNY-RAY\",\n    name: \"CRWNY-RAY V4 LP\",\n    mint: \"5Cz9wGStNjiUg81q8t6sJJeckuT2C14CYSfyQbtYirSX\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  BLOCK_USDC_V4: {\n    symbol: \"BLOCK-USDC\",\n    name: \"BLOCK-USDC V4 LP\",\n    mint: \"8i44Y23GkkwDYZ5iSkVEqmrXUfwNmwo9grguTDWKM8wg\",\n\n    base: MAINNET_SPL_TOKENS.BLOCK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BLOCK.decimals,\n\n    version: 4,\n  },\n  REAL_USDC_V4: {\n    symbol: \"REAL-USDC\",\n    name: \"REAL-USDC V4 LP\",\n    mint: \"EN43tp8xdkcM8RYSJ4msFHMPTJRXKhUteVYBDJLwTvr3\",\n\n    base: MAINNET_SPL_TOKENS.REAL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.REAL.decimals,\n\n    version: 4,\n  },\n  FRKT_USDC_V4: {\n    symbol: \"FRKT-USDC\",\n    name: \"FRKT-USDC V4 LP\",\n    mint: \"7MgzqVTGeA4wENme81QPTrPy45NJMKVL9XGwxmNT87cG\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  MBS_USDC_V4: {\n    symbol: \"MBS-USDC\",\n    name: \"MBS-USDC V4 LP\",\n    mint: \"BAgSWaPZpsQKyZJdvB5KyvmCNj6hzczzentt5FhDCVHb\",\n\n    base: MAINNET_SPL_TOKENS.MBS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MBS.decimals,\n\n    version: 4,\n  },\n  PRISM_USDC_V4: {\n    symbol: \"PRISM-USDC\",\n    name: \"PRISM-USDC V4 LP\",\n    mint: \"3baYkTcudvSFMe25UpZcBfdp4FA5kL2E4pfaeJ8AiYJB\",\n\n    base: MAINNET_SPL_TOKENS.PRISM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PRISM.decimals,\n\n    version: 4,\n  },\n  CHICKS_USDC_V4: {\n    symbol: \"CHICKS-USDC\",\n    name: \"CHICKS-USDC V4 LP\",\n    mint: \"CPzmcw81a6PDasSXhVLfDRKuTJXZPUqocS9VFf5zCFhs\",\n\n    base: MAINNET_SPL_TOKENS.CHICKS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CHICKS.decimals,\n\n    version: 4,\n  },\n  MEAN_RAY_V4: {\n    symbol: \"MEAN-RAY\",\n    name: \"MEAN-RAY V4 LP\",\n    mint: \"H9wUyrxpAErmdNVPitpHSXgwoomoh91ggJKPWtQQoCn1\",\n\n    base: MAINNET_SPL_TOKENS.MEAN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEAN.decimals,\n\n    version: 4,\n  },\n  TINY_USDC_V4: {\n    symbol: \"TINY-USDC\",\n    name: \"TINY-USDC V4 LP\",\n    mint: \"Hho6ZzRDj49L4z6zog8nQZFaxMSz6FX6wNzVpMeAMen\",\n\n    base: MAINNET_SPL_TOKENS.TINY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TINY.decimals,\n\n    version: 4,\n  },\n  SCY_USDC_V4: {\n    symbol: \"SCY-USDC\",\n    name: \"SCY-USDC V4 LP\",\n    mint: \"EcYk7t6Vw59HDnY2u6H1KDPkk8juMeA1NpGpHiGk1LDf\",\n\n    base: MAINNET_SPL_TOKENS.SCY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SCY.decimals,\n\n    version: 4,\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const DEVNET_SPL_TOKENS: SplTokens = {\n  WSOL: { ...WSOL },\n};\n\nexport const DEVNET_LP_TOKENS: LpTokens = {\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const TESTNET_SPL_TOKENS: SplTokens = {\n  WSOL: { ...WSOL },\n};\n\nexport const TESTNET_LP_TOKENS: LpTokens = {\n};\n","import { Logger } from \"../common\";\n\nimport { LpTokenInfo, SplTokenInfo } from \"./type\";\n\nconst logger = Logger.from(\"token/util\");\n\n/**\n * Token list\n */\nexport class TokenList {\n  constructor(private tokenList: (SplTokenInfo | LpTokenInfo)[]) {}\n\n  /**\n   * Filter token by mint of token list.\n   *\n   * @param mint - Token's mint address\n   */\n  filterByMint = (mint: string) => {\n    return this.tokenList.filter((token) => token.mint === mint);\n  };\n\n  /**\n   * Filter unique token by mint of token list, must and can only have one result.\n   */\n  filterUniqueByMint = <T extends \"all\" | \"spl\" | \"lp\">(mint: string, tokenType: T | \"all\" | \"spl\" | \"lp\" = \"all\") => {\n    const result = this.tokenList.filter((token) => token.mint === mint);\n\n    if (result.length === 0) {\n      return logger.throwArgumentError(`No token found`, \"mint\", mint);\n    } else if (result.length > 1) {\n      return logger.throwArgumentError(`Multiple tokens found: ${result.length}`, \"mint\", mint);\n    }\n\n    const token = result[0];\n\n    if (tokenType === \"spl\" && \"version\" in token) {\n      return logger.throwArgumentError(\"invalid SPL token mint\", \"mint\", mint);\n    } else if (tokenType === \"lp\" && !(\"version\" in token)) {\n      return logger.throwArgumentError(\"invalid LP token mint\", \"mint\", mint);\n    }\n\n    return token as T extends \"all\" ? SplTokenInfo | LpTokenInfo : T extends \"spl\" ? SplTokenInfo : LpTokenInfo;\n  };\n\n  /**\n   * Get list of token list\n   */\n  getList = () => {\n    return this.tokenList;\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { PublicKeyish, validateAndParsePublicKey } from \"../common\";\nimport { SOL, WSOL } from \"../token\";\n\n/**\n * A currency is any fungible financial instrument on Solana, including SOL and all SPL tokens.\n *\n * The only instance of the base class `Currency` is SOL.\n */\nexport class Currency {\n  public readonly symbol?: string;\n  public readonly name?: string;\n\n  public readonly decimals: number;\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly SOL: Currency = new Currency(SOL.decimals, SOL.symbol, SOL.name);\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.SOL`.\n   * @param decimals - decimals of the currency\n   * @param symbol - symbol of the currency\n   * @param name - name of the currency\n   */\n  public constructor(decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    this.decimals = decimals;\n    this.symbol = symbol;\n    this.name = name;\n  }\n}\n\nexport function inspectCurrency() {\n  // @ts-ignore\n  Currency.prototype.inspect = function () {\n    return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n  };\n}\n\n/**\n * Represents an SPL token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly mint: PublicKey;\n\n  /**\n   * The only instance of the base class `Token`.\n   */\n  public static readonly WSOL: Token = new Token(WSOL.mint, WSOL.decimals, SOL.symbol, SOL.name);\n\n  public constructor(mint: PublicKeyish, decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    super(decimals, symbol, name);\n\n    this.mint = validateAndParsePublicKey(mint);\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same mint address.\n   * @param other - other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true;\n    }\n    return this.mint.equals(other.mint);\n  }\n}\n\nexport function inspectToken() {\n  // @ts-ignore\n  Token.prototype.inspect = function () {\n    return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n      this.symbol\n    }>`;\n  };\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB);\n  } else if (currencyA instanceof Token || currencyB instanceof Token) {\n    return false;\n  } else {\n    return currencyA === currencyB;\n  }\n}\n","import _Big from \"big.js\";\nimport BN from \"bn.js\";\nimport _Decimal from \"decimal.js-light\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { ONE, Rounding } from \"./constant\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/fraction\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nconst Decimal = toFormat(_Decimal);\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP,\n};\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: Big.roundDown,\n  [Rounding.ROUND_HALF_UP]: Big.roundHalfUp,\n  [Rounding.ROUND_UP]: Big.roundUp,\n};\n\nexport class Fraction {\n  public readonly numerator: BN;\n  public readonly denominator: BN;\n\n  public constructor(numerator: BigNumberish, denominator: BigNumberish = ONE) {\n    this.numerator = parseBigNumberish(numerator);\n    this.denominator = parseBigNumberish(denominator);\n  }\n\n  // performs floor division\n  public get quotient() {\n    return this.numerator.div(this.denominator);\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator);\n  }\n\n  // +\n  public add(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.add(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).add(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // -\n  public sub(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.sub(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).sub(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // ×\n  public mul(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.numerator), this.denominator.mul(otherParsed.denominator));\n  }\n\n  // ÷\n  public div(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.denominator), this.denominator.mul(otherParsed.numerator));\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`);\n    logger.assert(significantDigits > 0, `${significantDigits} is not positive.`);\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] });\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`);\n    logger.assert(decimalPlaces >= 0, `${decimalPlaces} is negative.`);\n\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n}\n","import Big, { BigConstructor, BigSource, RoundingMode } from \"big.js\";\nimport Decimal, { Config, Numeric } from \"decimal.js-light\";\nimport _toFarmat from \"toformat\";\n\ntype TakeStatic<T> = { [P in keyof T]: T[P] };\ninterface FormatOptions {\n  decimalSeparator?: string;\n  groupSeparator?: string;\n  groupSize?: number;\n  fractionGroupSeparator?: string;\n  fractionGroupSize?: number;\n}\ninterface WrappedBigConstructor extends TakeStatic<BigConstructor> {\n  new (value: BigSource): WrappedBig;\n  (value: BigSource): WrappedBig;\n  (): WrappedBigConstructor;\n\n  format: FormatOptions;\n}\nexport interface WrappedBig extends Big {\n  add(n: BigSource): WrappedBig;\n  abs(): WrappedBig;\n  div(n: BigSource): WrappedBig;\n  minus(n: BigSource): WrappedBig;\n  mod(n: BigSource): WrappedBig;\n  mul(n: BigSource): WrappedBig;\n  plus(n: BigSource): WrappedBig;\n  pow(exp: number): WrappedBig;\n  round(dp?: number, rm?: RoundingMode): WrappedBig;\n  sqrt(): WrappedBig;\n  sub(n: BigSource): WrappedBig;\n  times(n: BigSource): WrappedBig;\n  toFormat(): string;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\ntype DecimalConstructor = typeof Decimal;\ninterface WrappedDecimalConstructor extends TakeStatic<DecimalConstructor> {\n  new (value: Numeric): WrappedDecimal;\n  clone(config?: Config): WrappedDecimalConstructor;\n  config(config: Config): WrappedDecimal;\n  set(config: Config): WrappedDecimal;\n  format: FormatOptions;\n}\nexport interface WrappedDecimal extends Decimal {\n  absoluteValue(): WrappedDecimal;\n  abs(): WrappedDecimal;\n  dividedBy(y: Numeric): WrappedDecimal;\n  div(y: Numeric): WrappedDecimal;\n  dividedToIntegerBy(y: Numeric): WrappedDecimal;\n  idiv(y: Numeric): WrappedDecimal;\n  logarithm(base?: Numeric): WrappedDecimal;\n  log(base?: Numeric): WrappedDecimal;\n  minus(y: Numeric): WrappedDecimal;\n  sub(y: Numeric): WrappedDecimal;\n  modulo(y: Numeric): WrappedDecimal;\n  mod(y: Numeric): WrappedDecimal;\n  naturalExponetial(): WrappedDecimal;\n  exp(): WrappedDecimal;\n  naturalLogarithm(): WrappedDecimal;\n  ln(): WrappedDecimal;\n  negated(): WrappedDecimal;\n  neg(): WrappedDecimal;\n  plus(y: Numeric): WrappedDecimal;\n  add(y: Numeric): WrappedDecimal;\n  squareRoot(): WrappedDecimal;\n  sqrt(): WrappedDecimal;\n  times(y: Numeric): WrappedDecimal;\n  mul(y: Numeric): WrappedDecimal;\n  toWrappedDecimalPlaces(dp?: number, rm?: number): WrappedDecimal;\n  todp(dp?: number, rm?: number): WrappedDecimal;\n  toInteger(): WrappedDecimal;\n  toint(): WrappedDecimal;\n  toPower(y: Numeric): WrappedDecimal;\n  pow(y: Numeric): WrappedDecimal;\n  toSignificantDigits(sd?: number, rm?: number): WrappedDecimal;\n  tosd(sd?: number, rm?: number): WrappedDecimal;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\nconst toFormat: {\n  (fn: BigConstructor): WrappedBigConstructor;\n  (fn: DecimalConstructor): WrappedDecimalConstructor;\n} = _toFarmat;\nexport default toFormat;\n","import { _100, Rounding } from \"./constant\";\nimport { Fraction } from \"./fraction\";\n\nexport const _100_PERCENT = new Fraction(_100);\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits = 5, format?: object, rounding?: Rounding) {\n    return this.mul(_100_PERCENT).toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(decimalPlaces = 2, format?: object, rounding?: Rounding) {\n    return this.mul(_100_PERCENT).toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import { Logger } from \"../common\";\n\nimport { BigNumberish, tenExponentiate } from \"./bignumber\";\nimport { Rounding } from \"./constant\";\nimport { Currency, currencyEquals } from \"./currency\";\nimport { Fraction } from \"./fraction\";\n\nconst logger = Logger.from(\"entity/price\");\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Currency; // input i.e. denominator\n  public readonly quoteCurrency: Currency; // output i.e. numerator\n  // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n  public readonly scalar: Fraction;\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(\n    baseCurrency: Currency,\n    denominator: BigNumberish,\n    quoteCurrency: Currency,\n    numerator: BigNumberish,\n  ) {\n    super(numerator, denominator);\n\n    this.baseCurrency = baseCurrency;\n    this.quoteCurrency = quoteCurrency;\n    this.scalar = new Fraction(tenExponentiate(baseCurrency.decimals), tenExponentiate(quoteCurrency.decimals));\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  public get adjusted(): Fraction {\n    return super.mul(this.scalar);\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.numerator, this.baseCurrency, this.denominator);\n  }\n\n  public mul(other: Price): Price {\n    logger.assert(currencyEquals(this.quoteCurrency, other.baseCurrency), \"mul currency not equals\");\n\n    const fraction = super.mul(other);\n    return new Price(this.baseCurrency, fraction.denominator, other.quoteCurrency, fraction.numerator);\n  }\n\n  public toSignificant(significantDigits = this.quoteCurrency.decimals, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(decimalPlaces = this.quoteCurrency.decimals, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import BN from \"bn.js\";\n\nimport { ONE } from \"../../entity\";\n\nexport const NEGATIVE_ONE = new BN(-1);\n\nexport const Q64 = new BN(1).shln(64);\nexport const Q128 = new BN(1).shln(128);\n\nexport const MaxU64 = Q64.sub(ONE);\n\nexport const U64Resolution = 64;\n\nexport const MaxUint128 = Q128.subn(1);\n\nexport const MIN_TICK = -307200;\nexport const MAX_TICK = -MIN_TICK;\n\nexport const MIN_SQRT_PRICE_X64: BN = new BN(\"3939943522091\");\nexport const MAX_SQRT_PRICE_X64: BN = new BN(\"86367321006760116002434269\");\n\nexport const MIN_TICK_ARRAY_START_INDEX = -307200;\nexport const MAX_TICK_ARRAY_START_INDEX = 306600;\n\nexport const BIT_PRECISION = 14;\nexport const LOG_B_2_X32 = \"59543866431248\";\nexport const LOG_B_P_ERR_MARGIN_LOWER_X64 = \"184467440737095516\";\nexport const LOG_B_P_ERR_MARGIN_UPPER_X64 = \"15793534762490258745\";\n\nexport const FEE_RATE_DENOMINATOR = new BN(10).pow(new BN(6));\n\nexport enum Fee {\n  rate_500 = 500, //  500 / 10e6 = 0.0005\n  rate_3000 = 3000, // 3000/ 10e6 = 0.003\n  rate_10000 = 10000, // 10000 /10e6 = 0.01\n}\nexport const TICK_SPACINGS: { [amount in Fee]: number } = {\n  [Fee.rate_500]: 10,\n  [Fee.rate_3000]: 60,\n  [Fee.rate_10000]: 200,\n};\n","import { PublicKey } from \"@solana/web3.js\";\nimport BN, { isBN } from \"bn.js\";\n\nimport {\n  bits, blob, Blob, Layout, offset as _offset, seq as _seq, Structure as _Structure, u32 as _u32, u8 as _u8, UInt,\n  union as _union, Union as _Union,\n} from \"./buffer-layout\";\n\nexport * from \"./buffer-layout\";\nexport { blob };\n\nexport class BNLayout<P extends string = \"\"> extends Layout<BN, P> {\n  blob: Layout<Buffer>;\n  signed: boolean;\n\n  constructor(span: number, signed: boolean, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends, but it desn't matter\n    super(span, property);\n    this.blob = blob(span);\n    this.signed = signed;\n  }\n\n  /** @override */\n  decode(b: Buffer, offset = 0) {\n    const num = new BN(this.blob.decode(b, offset), 10, \"le\");\n    if (this.signed) {\n      return num.fromTwos(this.span * 8).clone();\n    }\n    return num;\n  }\n\n  /** @override */\n  encode(src: BN, b: Buffer, offset = 0) {\n    if (typeof src === \"number\") src = new BN(src); // src will pass a number accidently in union\n    if (this.signed) {\n      src = src.toTwos(this.span * 8);\n    }\n    return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n  }\n}\n\nexport class WideBits<P extends string = \"\"> extends Layout<Record<string, boolean>, P> {\n  _lower: any;\n  _upper: any;\n  // TODO: unknown\n  constructor(property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(8, property);\n    this._lower = bits(_u32(), false);\n    this._upper = bits(_u32(), false);\n  }\n\n  addBoolean(property: string) {\n    if (this._lower.fields.length < 32) {\n      this._lower.addBoolean(property);\n    } else {\n      this._upper.addBoolean(property);\n    }\n  }\n\n  decode(b: Buffer, offset = 0): Record<string, boolean> {\n    const lowerDecoded = this._lower.decode(b, offset);\n    const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n    return { ...lowerDecoded, ...upperDecoded };\n  }\n\n  encode(src: any /* TEMP */, b: Buffer, offset = 0) {\n    return this._lower.encode(src, b, offset) + this._upper.encode(src, b, offset + this._lower.span);\n  }\n}\n\nexport function u8<P extends string = \"\">(property?: P): UInt<number, P> {\n  return new UInt(1, property);\n}\n\nexport function u32<P extends string = \"\">(property?: P): UInt<number, P> {\n  return new UInt(4, property);\n}\n\nexport function u64<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(8, false, property);\n}\n\nexport function u128<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(16, false, property);\n}\n\nexport function i64<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(8, true, property);\n}\n\nexport function i128<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(16, true, property);\n}\n\nexport class WrappedLayout<T, U, P extends string = \"\"> extends Layout<U, P> {\n  layout: Layout<T>;\n  decoder: (data: T) => U;\n  encoder: (src: U) => T;\n\n  constructor(layout: Layout<T>, decoder: (data: T) => U, encoder: (src: U) => T, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(layout.span, property);\n    this.layout = layout;\n    this.decoder = decoder;\n    this.encoder = encoder;\n  }\n\n  decode(b: Buffer, offset?: number): U {\n    return this.decoder(this.layout.decode(b, offset));\n  }\n\n  encode(src: U, b: Buffer, offset?: number): number {\n    return this.layout.encode(this.encoder(src), b, offset);\n  }\n\n  getSpan(b: Buffer, offset?: number): number {\n    return this.layout.getSpan(b, offset);\n  }\n}\n\nexport function publicKey<P extends string = \"\">(property?: P): Layout<PublicKey, P> {\n  return new WrappedLayout(\n    blob(32),\n    (b: Buffer) => new PublicKey(b),\n    (key: PublicKey) => key.toBuffer(),\n    property,\n  );\n}\n\nexport class OptionLayout<T, P> extends Layout<T | null, P> {\n  layout: Layout<T>;\n  discriminator: Layout<number>;\n\n  constructor(layout: Layout<T>, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(-1, property);\n    this.layout = layout;\n    this.discriminator = _u8();\n  }\n\n  encode(src: T | null, b: Buffer, offset = 0): number {\n    if (src === null || src === undefined) {\n      return this.discriminator.encode(0, b, offset);\n    }\n    this.discriminator.encode(1, b, offset);\n    return this.layout.encode(src, b, offset + 1) + 1;\n  }\n\n  decode(b: Buffer, offset = 0): T | null {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return null;\n    } else if (discriminator === 1) {\n      return this.layout.decode(b, offset + 1);\n    }\n    throw new Error(\"Invalid option \" + this.property);\n  }\n\n  getSpan(b: Buffer, offset = 0): number {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return 1;\n    } else if (discriminator === 1) {\n      return this.layout.getSpan(b, offset + 1) + 1;\n    }\n    throw new Error(\"Invalid option \" + this.property);\n  }\n}\n\nexport function option<T, P extends string = \"\">(layout: Layout<T>, property?: P): Layout<T | null, P> {\n  return new OptionLayout<T, P>(layout, property);\n}\n\nexport function bool<P extends string = \"\">(property?: P): Layout<boolean, P> {\n  return new WrappedLayout(_u8(), decodeBool, encodeBool, property);\n}\n\nexport function decodeBool(value: number): boolean {\n  if (value === 0) {\n    return false;\n  } else if (value === 1) {\n    return true;\n  }\n  throw new Error(\"Invalid bool: \" + value);\n}\n\nexport function encodeBool(value: boolean): number {\n  return value ? 1 : 0;\n}\n\nexport function vec<T, P extends string = \"\">(elementLayout: Layout<T>, property?: P): Layout<T[], P> {\n  const length = _u32(\"length\");\n  const layout: Layout<{ values: T[] }> = struct([\n    length,\n    seq(elementLayout, _offset(length, -length.span), \"values\"),\n  ]) as any; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ values }) => values,\n    (values) => ({ values }),\n    property,\n  );\n}\n\nexport function tagged<T, P extends string = \"\">(tag: BN, layout: Layout<T>, property?: P): Layout<T, P> {\n  const wrappedLayout: Layout<{ tag: BN; data: T }> = struct([u64(\"tag\"), layout.replicate(\"data\")]) as any; // Something I don't know\n\n  function decodeTag({ tag: receivedTag, data }: { tag: BN; data: T }) {\n    if (!receivedTag.eq(tag)) {\n      throw new Error(\"Invalid tag, expected: \" + tag.toString(\"hex\") + \", got: \" + receivedTag.toString(\"hex\"));\n    }\n    return data;\n  }\n\n  return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\n\nexport function vecU8<P extends string = \"\">(property?: P): Layout<Buffer, P> {\n  const length = _u32(\"length\");\n  const layout: Layout<{ data: Buffer }> = struct([length, blob(_offset(length, -length.span), \"data\")]) as any; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ data }) => data,\n    (data) => ({ data }),\n    property,\n  );\n}\n\nexport function str<P extends string = \"\">(property?: P): Layout<string, P> {\n  return new WrappedLayout(\n    vecU8(),\n    (data) => data.toString(\"utf-8\"),\n    (s) => Buffer.from(s, \"utf-8\"),\n    property,\n  );\n}\n\nexport interface EnumLayout<T, P extends string = \"\"> extends Layout<T, P> {\n  registry: Record<string, Layout<any>>;\n}\n\nexport function rustEnum<T, P extends string = \"\">(variants: Layout<any>[], property?: P): EnumLayout<T, P> {\n  const unionLayout = _union(_u8(), property);\n  variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n  return unionLayout as any; // ?why use UnionLayout? This must be a fault\n}\n\nexport function array<T, P extends string = \"\">(\n  elementLayout: Layout<T>,\n  length: number,\n  property?: P,\n): Layout<T[], P> {\n  const layout = struct([seq(elementLayout, length, \"values\")]) as any as Layout<{ values: T[] }>; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ values }) => values,\n    (values) => ({ values }),\n    property,\n  );\n}\n\nexport class Structure<T, P, D extends { [key: string]: any } = any> extends _Structure<T, P, D> {\n  /** @override */\n  decode(b: Buffer, offset?: number) {\n    return super.decode(b, offset);\n  }\n}\n\nexport function struct<T, P extends string = \"\">(\n  fields: T,\n  property?: P,\n  decodePrefixes?: boolean,\n): T extends Layout<infer Value, infer Property>[]\n  ? Structure<\n      Value,\n      P,\n      {\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\n          ? V\n          : any;\n      }\n    >\n  : any {\n  //@ts-expect-error this type is not quite satisfied the define, but, never no need to worry about.\n  return new Structure(fields, property, decodePrefixes);\n}\n\nexport type GetLayoutSchemaFromStructure<T extends Structure<any, any, any>> = T extends Structure<any, any, infer S>\n  ? S\n  : any;\nexport type GetStructureFromLayoutSchema<S extends { [key: string]: any } = any> = Structure<any, any, S>;\n\nexport class Union<Schema extends { [key: string]: any } = any> extends _Union<Schema> {\n  encodeInstruction(instruction: any): Buffer {\n    const instructionMaxSpan = Math.max(...Object.values(this.registry).map((r) => r.span));\n    const b = Buffer.alloc(instructionMaxSpan);\n    return b.slice(0, this.encode(instruction, b));\n  }\n\n  decodeInstruction(instruction: any) {\n    return this.decode(instruction);\n  }\n}\nexport function union<UnionSchema extends { [key: string]: any } = any>(\n  discr: any,\n  defaultLayout?: any,\n  property?: string,\n): Union<UnionSchema> {\n  return new Union(discr, defaultLayout, property);\n}\n\nclass Zeros extends Blob {\n  decode(b: Buffer, offset: number) {\n    const slice = super.decode(b, offset);\n    if (!slice.every((v) => v === 0)) {\n      throw new Error(\"nonzero padding bytes\");\n    }\n    return slice;\n  }\n}\n\nexport function zeros(length: number) {\n  return new Zeros(length);\n}\n\nexport function seq<T, P extends string = \"\", AnotherP extends string = \"\">(\n  elementLayout: Layout<T, P>,\n  count: number | BN | Layout<BN | number, P>,\n  property?: AnotherP,\n): Layout<T[], AnotherP> {\n  let parsedCount: number;\n  const superCount =\n    typeof count === \"number\"\n      ? count\n      : isBN(count)\n      ? count.toNumber()\n      : new Proxy(count as unknown as Layout<number> /* pretend to be Layout<number> */, {\n          get(target, property) {\n            if (!parsedCount) {\n              // get count in targetLayout. note that count may be BN\n              const countProperty = Reflect.get(target, \"count\");\n\n              // let targetLayout's  property:count be a number\n              parsedCount = isBN(countProperty) ? countProperty.toNumber() : countProperty;\n\n              // record the count\n              Reflect.set(target, \"count\", parsedCount);\n            }\n            return Reflect.get(target, property);\n          },\n          set(target, property, value) {\n            if (property === \"count\") {\n              parsedCount = value;\n            }\n            return Reflect.set(target, property, value);\n          },\n        });\n\n  // @ts-expect-error force type\n  return _seq(elementLayout, superCount, property);\n}\n","import {\n  bits as _bits, BitStructure as _BitStructure, blob as _blob, Blob as _Blob, cstr as _cstr, f32 as _f32,\n  f32be as _f32be, f64 as _f64, f64be as _f64be, greedy as _greedy, Layout as _Layout, ns64 as _ns64, ns64be as _ns64be,\n  nu64 as _nu64, nu64be as _nu64be, offset as _offset, s16 as _s16, s16be as _s16be, s24 as _s24, s24be as _s24be,\n  s32 as _s32, s32be as _s32be, s40 as _s40, s40be as _s40be, s48 as _s48, s48be as _s48be, s8 as _s8, seq as _seq,\n  struct as _struct, Structure as _Structure, u16 as _u16, u16be as _u16be, u24 as _u24, u24be as _u24be, u32 as _u32,\n  u32be as _u32be, u40 as _u40, u40be as _u40be, u48 as _u48, u48be as _u48be, u8 as _u8, UInt as _UInt,\n  union as _union, Union as _Union, unionLayoutDiscriminator as _unionLayoutDiscriminator, utf8 as _utf8,\n} from \"@solana/buffer-layout\";\n\n//#region ------------------- Layout -------------------\nexport interface Layout<T = any, P = \"\"> {\n  span: number;\n  property?: P;\n  decode(b: Buffer, offset?: number): T;\n  encode(src: T, b: Buffer, offset?: number): number;\n  getSpan(b: Buffer, offset?: number): number;\n  replicate<AP extends string>(name: AP): Layout<T, AP>;\n}\nexport interface LayoutConstructor {\n  new <T, P>(): Layout<T, P>; // for class extends syntex\n  new <T, P>(span?: T, property?: P): Layout<T, P>;\n  readonly prototype: Layout;\n}\nexport const Layout = _Layout as unknown as LayoutConstructor;\n//#endregion\n\n//#region ------------------- Structure -------------------\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface Structure<T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>\n  extends Layout<DecodeSchema, P> {\n  span: number;\n  decode(b: Buffer, offset?: number): DecodeSchema;\n  layoutFor<AP extends string>(property: AP): Layout<DecodeSchema[AP]>;\n  offsetOf<AP extends string>(property: AP): number;\n}\ninterface StructureConstructor {\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(): Structure<T, P, DecodeSchema>;\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(\n    fields: T,\n    property?: P,\n    decodePrefixes?: boolean,\n  ): Structure<T, P, DecodeSchema>;\n}\nexport const Structure = _Structure as unknown as StructureConstructor;\n//#endregion\n\n//#region ------------------- Union -------------------\nexport interface Union<UnionSchema extends { [key: string]: any } = any> extends Layout {\n  registry: object;\n  decode(b: Buffer, offset?: number): Partial<UnionSchema>;\n  addVariant(\n    variant: number,\n    layout: Structure<any, any, Partial<UnionSchema>> | Layout<any, keyof UnionSchema>,\n    property?: string,\n  ): any /* TEMP: code in Layout.js 1809 */;\n}\ninterface UnionConstructor {\n  new <UnionSchema extends { [key: string]: any } = any>(): Union<UnionSchema>;\n  new <UnionSchema extends { [key: string]: any } = any>(\n    discr: Layout<any, any>,\n    defaultLayout: Layout<any, any>,\n    property?: string,\n  ): Union<UnionSchema>;\n}\nexport const Union = _Union as unknown as UnionConstructor;\n//#endregion\n\n//#region ------------------- BitStructure -------------------\nexport type BitStructure<T = unknown /* TEMP */, P = \"\"> = Layout<T, P>;\ninterface BitStructureConstructor {\n  new (...params: any[]): BitStructure;\n}\nexport const BitStructure = _BitStructure as BitStructureConstructor;\n//#endregion\n\n//#region ------------------- UInt -------------------\nexport type UInt<T = any, P = \"\"> = Layout<T, P>;\ninterface UIntConstructor {\n  new <T, P>(span?: T, property?: P): UInt<T, P>;\n}\nexport const UInt = _UInt as UIntConstructor;\n//#endregion\n\n//#region ------------------- Blob -------------------\nexport type Blob<P extends string = \"\"> = Layout<Buffer, P>;\ninterface BlobConstructor {\n  new (...params: ConstructorParameters<LayoutConstructor>): Blob;\n}\nexport const Blob = _Blob as unknown as BlobConstructor;\n//#endregion\n\nexport const greedy = _greedy as <P extends string = \"\">(elementSpan?: number, property?: P) => Layout<number, P>;\nexport const u8 = _u8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u16 = _u16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u24 = _u24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u32 = _u32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u40 = _u40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u48 = _u48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const nu64 = _nu64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u16be = _u16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u24be = _u24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u32be = _u32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u40be = _u40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u48be = _u48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const nu64be = _nu64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s8 = _s8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s16 = _s16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s24 = _s24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s32 = _s32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s40 = _s40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s48 = _s48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const ns64 = _ns64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s16be = _s16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s24be = _s24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s32be = _s32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s40be = _s40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s48be = _s48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const ns64be = _ns64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f32 = _f32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f32be = _f32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f64 = _f64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f64be = _f64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const struct = _struct as <T, P extends string = \"\">(\n  fields: T,\n  property?: P,\n  decodePrefixes?: boolean,\n) => T extends Layout<infer Value, infer Property>[]\n  ? Structure<\n      Value,\n      P,\n      {\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\n          ? V\n          : any;\n      }\n    >\n  : any;\n\nexport const seq = _seq as unknown as <T, P>(\n  elementLayout: Layout<T, string>,\n  count: number | Layout<number, string>,\n  property?: P,\n) => Layout<T[]>;\nexport const union = _union as <UnionSchema extends { [key: string]: any } = any>(\n  discr: Layout<any, any>,\n  defaultLayout?: any,\n  property?: string,\n) => Union<UnionSchema>;\nexport const unionLayoutDiscriminator = _unionLayoutDiscriminator as <P extends string = \"\">(\n  layout: Layout<any, P>,\n  property?: P,\n) => any;\nexport const blob = _blob as unknown as <P extends string = \"\">(length: number | Layout<number, P>, property?: P) => Blob<P>;\nexport const cstr = _cstr as <P extends string = \"\">(property?: P) => Layout<string, P>;\nexport const utf8 = _utf8 as <P extends string = \"\">(maxSpan: number, property?: P) => Layout<string, P>;\nexport const bits = _bits as unknown as <T, P extends string = \"\">(\n  word: Layout<T>,\n  msb?: boolean,\n  property?: P,\n) => BitStructure<T, P>; // TODO: not quite sure\nexport const offset = _offset as unknown as <T, P extends string = \"\">(\n  layout: Layout<T, P>,\n  offset?: number,\n  property?: P,\n) => Layout<T, P>;\n\nexport type GetStructureSchema<T extends Structure> = T extends Structure<any, any, infer S> ? S : unknown;\n","import { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { getPdaTickArrayAddress } from \"./pda\";\n\nexport const TICK_ARRAY_SIZE = 60\nexport const TICK_ARRAY_BITMAP_SIZE = 1024\n\nexport type Tick = {\n  tick: number;\n  liquidityNet: BN;\n  liquidityGross: BN;\n  feeGrowthOutsideX64A: BN;\n  feeGrowthOutsideX64B: BN;\n  rewardGrowthsOutsideX64: BN[];\n}\n\nexport type TickArray = {\n  address: PublicKey\n  poolId: PublicKey;\n  startTickIndex: number\n  ticks: Tick[]\n  initializedTickCount: number;\n}\n\nexport type TickState = {\n  tick: number\n  liquidityNet: BN\n  liquidityGross: BN\n  feeGrowthOutsideX64A: BN\n  feeGrowthOutsideX64B: BN\n  tickCumulativeOutside: BN\n  secondsPerLiquidityOutsideX64: BN\n  secondsOutside: number\n  rewardGrowthsOutside: BN[]\n}\n\nexport type TickArrayState = {\n  ammPool: PublicKey\n  startTickIndex: number\n  ticks: TickState[]\n  initializedTickCount: number\n}\n\nexport class TickUtils {\n  public static getTickArrayAddressByTick(\n    programId: PublicKey,\n    poolId: PublicKey,\n    tickIndex: number,\n    tickSpacing: number\n  ) {\n    const startIndex = TickUtils.getTickArrayStartIndexByTick(\n      tickIndex,\n      tickSpacing\n    )\n    const { publicKey: tickArrayAddress } = getPdaTickArrayAddress(\n      programId,\n      poolId,\n      startIndex\n    )\n    return tickArrayAddress\n  }\n\n  public static getTickOffsetInArray(\n    tickIndex: number,\n    tickSpacing: number\n  ) {\n    if (tickIndex % tickSpacing != 0) {\n      throw new Error('tickIndex % tickSpacing not equal 0')\n    }\n    const startTickIndex = TickUtils.getTickArrayStartIndexByTick(\n      tickIndex,\n      tickSpacing\n    )\n    const offsetInArray = Math.floor((tickIndex - startTickIndex) / tickSpacing)\n    if (offsetInArray < 0 || offsetInArray >= TICK_ARRAY_SIZE) {\n      throw new Error('tick offset in array overflow')\n    }\n    return offsetInArray\n  }\n\n  public static getTickArrayStartIndexByTick(\n    tickIndex: number,\n    tickSpacing: number\n  ) {\n    let startIndex: number = tickIndex / (TICK_ARRAY_SIZE * tickSpacing)\n    if (tickIndex < 0 && tickIndex % (TICK_ARRAY_SIZE * tickSpacing) != 0) {\n      startIndex = Math.ceil(startIndex) - 1\n    } else {\n      startIndex = Math.floor(startIndex)\n    }\n    return startIndex * (tickSpacing * TICK_ARRAY_SIZE)\n  }\n\n  public static getTickArrayOffsetInBitmapByTick(\n    tick: number,\n    tickSpacing: number\n  ) {\n    const multiplier = tickSpacing * TICK_ARRAY_SIZE\n    const compressed = Math.floor(tick / multiplier) + 512\n    return Math.abs(compressed)\n  }\n\n  public static checkTickArrayIsInitialized(\n    bitmap: BN,\n    tick: number,\n    tickSpacing: number\n  ) {\n    const multiplier = tickSpacing * TICK_ARRAY_SIZE\n    const compressed = Math.floor(tick / multiplier) + 512\n    const bit_pos = Math.abs(compressed)\n    return {\n      isInitialized: bitmap.testn(bit_pos),\n      startIndex: (bit_pos - 512) * multiplier\n    }\n  }\n\n  public static getNextTickArrayStartIndex(\n    lastTickArrayStartIndex: number,\n    tickSpacing: number,\n    zeroForOne: boolean\n  ) {\n    return zeroForOne ? lastTickArrayStartIndex - tickSpacing * TICK_ARRAY_SIZE : lastTickArrayStartIndex + tickSpacing * TICK_ARRAY_SIZE\n  }\n\n  public static mergeTickArrayBitmap(bns: BN[]) {\n    return bns[0]\n      .add(bns[1].shln(64))\n      .add(bns[2].shln(128))\n      .add(bns[3].shln(192))\n      .add(bns[4].shln(256))\n      .add(bns[5].shln(320))\n      .add(bns[6].shln(384))\n      .add(bns[7].shln(448))\n      .add(bns[8].shln(512))\n      .add(bns[9].shln(576))\n      .add(bns[10].shln(640))\n      .add(bns[11].shln(704))\n      .add(bns[12].shln(768))\n      .add(bns[13].shln(832))\n      .add(bns[14].shln(896))\n      .add(bns[15].shln(960))\n  }\n\n  public static getInitializedTickArrayInRange(\n    tickArrayBitmap: BN,\n    tickSpacing: number,\n    tickArrayStartIndex: number,\n    expectedCount: number\n  ) {\n    if (tickArrayStartIndex % (tickSpacing * TICK_ARRAY_SIZE) != 0) {\n      throw new Error('Invild tickArrayStartIndex')\n    }\n    const tickArrayOffset = Math.floor(tickArrayStartIndex / (tickSpacing * TICK_ARRAY_SIZE)) + 512\n    return [\n      // find right of currenct offset\n      ...TickUtils.searchLowBitFromStart(\n        tickArrayBitmap,\n        tickArrayOffset - 1,\n        0,\n        expectedCount,\n        tickSpacing\n      ),\n\n      // find left of current offset\n      ...TickUtils.searchHightBitFromStart(\n        tickArrayBitmap,\n        tickArrayOffset,\n        TICK_ARRAY_BITMAP_SIZE,\n        expectedCount,\n        tickSpacing\n      )\n    ]\n  }\n\n  public static getAllInitializedTickArrayStartIndex(\n    tickArrayBitmap: BN,\n    tickSpacing: number\n  ) {\n    // find from offset 0 to 1024\n    return TickUtils.searchHightBitFromStart(\n      tickArrayBitmap,\n      0,\n      TICK_ARRAY_BITMAP_SIZE,\n      TICK_ARRAY_BITMAP_SIZE,\n      tickSpacing\n    )\n  }\n\n  public static getAllInitializedTickArrayInfo(\n    programId: PublicKey,\n    poolId: PublicKey,\n    tickArrayBitmap: BN,\n    tickSpacing: number\n  ) {\n    const result: {\n      tickArrayStartIndex: number\n      tickArrayAddress: PublicKey\n    }[] = []\n    const allInitializedTickArrayIndex: number[] =\n      TickUtils.getAllInitializedTickArrayStartIndex(\n        tickArrayBitmap,\n        tickSpacing\n      )\n    for (const startIndex of allInitializedTickArrayIndex) {\n      const { publicKey: address } = getPdaTickArrayAddress(\n        programId,\n        poolId,\n        startIndex\n      )\n      result.push({\n        tickArrayStartIndex: startIndex,\n        tickArrayAddress: address,\n      })\n    }\n    return result\n  }\n\n  public static getAllInitializedTickInTickArray(\n    tickArray: TickArrayState,\n  ) {\n    return tickArray.ticks.filter(i => i.liquidityGross.gtn(0))\n  }\n\n  public static searchLowBitFromStart(\n    tickArrayBitmap: BN,\n    start: number,\n    end: number,\n    expectedCount: number,\n    tickSpacing: number\n  ) {\n    let fetchNum = 0\n    const result: number[] = []\n    for (let i = start; i >= end; i--) {\n      if (tickArrayBitmap.shrn(i).and(new BN(1)).eqn(1)) {\n        const nextStartIndex = (i - 512) * (tickSpacing * TICK_ARRAY_SIZE)\n        result.push(nextStartIndex)\n        fetchNum++\n      }\n      if (fetchNum >= expectedCount) {\n        break\n      }\n    }\n    return result\n  }\n\n  public static searchHightBitFromStart(\n    tickArrayBitmap: BN,\n    start: number,\n    end: number,\n    expectedCount: number,\n    tickSpacing: number\n  ) {\n    let fetchNum = 0\n    const result: number[] = []\n    for (let i = start; i < end; i++) {\n      if (tickArrayBitmap.shrn(i).and(new BN(1)).eqn(1)) {\n        const nextStartIndex = (i - 512) * (tickSpacing * TICK_ARRAY_SIZE)\n        result.push(nextStartIndex)\n        fetchNum++\n      }\n      if (fetchNum >= expectedCount) {\n        break\n      }\n    }\n    return result\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { findProgramAddress, METADATA_PROGRAM_ID, TOKEN_PROGRAM_ID } from \"../../common\";\n\nimport { i32ToBytes, u16ToBytes } from \"./util\";\n\nexport const AMM_CONFIG_SEED = Buffer.from(\"amm_config\", \"utf8\");\nexport const POOL_SEED = Buffer.from(\"pool\", \"utf8\");\nexport const POOL_VAULT_SEED = Buffer.from(\"pool_vault\", \"utf8\");\nexport const POOL_REWARD_VAULT_SEED = Buffer.from(\"pool_reward_vault\", \"utf8\");\nexport const POSITION_SEED = Buffer.from(\"position\", \"utf8\");\nexport const TICK_ARRAY_SEED = Buffer.from(\"tick_array\", \"utf8\");\nexport const OPERATION_SEED = Buffer.from(\"operation\", \"utf8\");\n\nexport function getPdaAmmConfigId(programId: PublicKey, index: number) {\n  return findProgramAddress(\n    [AMM_CONFIG_SEED, u16ToBytes(index)],\n    programId\n  )\n}\n\nexport function getPdaPoolId(\n  programId: PublicKey,\n  ammConfigId: PublicKey,\n  mintA: PublicKey,\n  mintB: PublicKey\n) {\n  return findProgramAddress(\n    [POOL_SEED, ammConfigId.toBuffer(), mintA.toBuffer(), mintB.toBuffer()],\n    programId\n  );\n}\n\nexport function getPdaPoolVaultId(\n  programId: PublicKey,\n  poolId: PublicKey,\n  vaultMint: PublicKey\n) {\n  return findProgramAddress(\n    [POOL_VAULT_SEED, poolId.toBuffer(), vaultMint.toBuffer()],\n    programId\n  );\n}\n\nexport function getPdaPoolRewardVaulId(\n  programId: PublicKey,\n  poolId: PublicKey,\n  rewardMint: PublicKey\n) {\n  return findProgramAddress(\n    [POOL_REWARD_VAULT_SEED, poolId.toBuffer(), rewardMint.toBuffer()],\n    programId\n  );\n}\n\nexport function getPdaTickArrayAddress(\n  programId: PublicKey,\n  poolId: PublicKey,\n  startIndex: number\n) {\n  return findProgramAddress(\n    [TICK_ARRAY_SEED, poolId.toBuffer(), i32ToBytes(startIndex)],\n    programId\n  );\n}\n\nexport function getPdaProtocolPositionAddress(\n  programId: PublicKey,\n  poolId: PublicKey,\n  tickLower: number,\n  tickUpper: number\n) {\n  return findProgramAddress(\n    [\n      POSITION_SEED,\n      poolId.toBuffer(),\n      i32ToBytes(tickLower),\n      i32ToBytes(tickUpper),\n    ],\n    programId\n  );\n}\n\nexport function getPdaPersonalPositionAddress(\n  programId: PublicKey,\n  nftMint: PublicKey\n) {\n  return findProgramAddress(\n    [POSITION_SEED, nftMint.toBuffer()],\n    programId\n  );\n}\n\nexport function getATAAddress(owner: PublicKey, mint: PublicKey) {\n  return findProgramAddress(\n    [owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\")\n  );\n}\n\nexport function getPdaMetadataKey(mint: PublicKey) {\n  return findProgramAddress(\n    [\n      Buffer.from('metadata', 'utf8'),\n      METADATA_PROGRAM_ID.toBuffer(),\n      mint.toBuffer(),\n    ],\n    METADATA_PROGRAM_ID\n  )\n}\n\nexport function getPdaOperationAccount(\n  programId: PublicKey,\n) {\n  return findProgramAddress(\n    [OPERATION_SEED],\n    programId\n  );\n}","export function u16ToBytes(num: number) {\n  const arr = new ArrayBuffer(2);\n  const view = new DataView(arr);\n  view.setUint16(0, num, false);\n  return new Uint8Array(arr);\n}\n\nexport function i16ToBytes(num: number) {\n  const arr = new ArrayBuffer(2);\n  const view = new DataView(arr);\n  view.setInt16(0, num, false);\n  return new Uint8Array(arr);\n}\n\nexport function u32ToBytes(num: number) {\n  const arr = new ArrayBuffer(4);\n  const view = new DataView(arr);\n  view.setUint32(0, num, false);\n  return new Uint8Array(arr);\n}\n\nexport function i32ToBytes(num: number) {\n  const arr = new ArrayBuffer(4);\n  const view = new DataView(arr);\n  view.setInt32(0, num, false);\n  return new Uint8Array(arr);\n}\n","import { blob, bool, i128, publicKey, s32, seq, struct, u128, u16, u32, u64, u8 } from \"../marshmallow\";\n\nimport { TICK_ARRAY_SIZE } from \"./utils/tick\";\n\nexport const AmmConfigLayout = struct([\n  blob(8),\n  u8(\"bump\"),\n  u16(\"index\"),\n  publicKey(\"\"),\n  u32(\"protocolFeeRate\"),\n  u32(\"tradeFeeRate\"),\n  u16(\"tickSpacing\"),\n  u32(\"fundFeeRate\"),\n  seq(u32(), 1, \"padding\"),\n  publicKey(\"fundOwner\"),\n  seq(u64(), 3, \"padding\"),\n]);\n\nexport const ObservationLayout = struct([\n  u32(\"blockTimestamp\"),\n  u128(\"sqrtPriceX64\"),\n  u128(\"cumulativeTimePriceX64\"),\n  seq(u128(), 1, \"\"),\n]);\nexport const ObservationInfoLayout = struct([\n  blob(8),\n  bool(\"initialized\"),\n  publicKey(\"poolId\"),\n  seq(ObservationLayout, 1000, \"observations\"),\n  seq(u128(), 5, \"\"),\n]);\n\nexport const RewardInfo = struct([\n  u8(\"rewardState\"),\n  u64(\"openTime\"),\n  u64(\"endTime\"),\n  u64(\"lastUpdateTime\"),\n  u128(\"emissionsPerSecondX64\"),\n  u64(\"rewardTotalEmissioned\"),\n  u64(\"rewardClaimed\"),\n  publicKey(\"tokenMint\"),\n  publicKey(\"tokenVault\"),\n  publicKey(\"creator\"),\n  u128(\"rewardGrowthGlobalX64\"),\n]);\nexport const PoolInfoLayout = struct([\n  blob(8),\n  u8(\"bump\"),\n  publicKey(\"ammConfig\"),\n  publicKey(\"creator\"),\n  publicKey(\"mintA\"),\n  publicKey(\"mintB\"),\n  publicKey(\"vaultA\"),\n  publicKey(\"vaultB\"),\n  publicKey(\"observationId\"),\n  u8(\"mintDecimalsA\"),\n  u8(\"mintDecimalsB\"),\n  u16(\"tickSpacing\"),\n  u128(\"liquidity\"),\n  u128(\"sqrtPriceX64\"),\n  s32(\"tickCurrent\"),\n  u16(\"observationIndex\"),\n  u16(\"observationUpdateDuration\"),\n  u128(\"feeGrowthGlobalX64A\"),\n  u128(\"feeGrowthGlobalX64B\"),\n  u64(\"protocolFeesTokenA\"),\n  u64(\"protocolFeesTokenB\"),\n\n  u128(\"swapInAmountTokenA\"),\n  u128(\"swapOutAmountTokenB\"),\n  u128(\"swapInAmountTokenB\"),\n  u128(\"swapOutAmountTokenA\"),\n\n  u8(\"status\"),\n\n  seq(u8(), 7, \"\"),\n\n  seq(RewardInfo, 3, \"rewardInfos\"),\n  seq(u64(), 16, 'tickArrayBitmap'),\n\n  u64(\"totalFeesTokenA\"),\n  u64(\"totalFeesClaimedTokenA\"),\n  u64(\"totalFeesTokenB\"),\n  u64(\"totalFeesClaimedTokenB\"),\n\n  u64(\"fundFeesTokenA\"),\n  u64(\"fundFeesTokenB\"),\n\n  seq(u64(), 15 * 4 - 2, \"padding\"),\n]);\n\nexport const PositionRewardInfoLayout = struct([\n  u128(\"growthInsideLastX64\"),\n  u64(\"rewardAmountOwed\"),\n]);\nexport const PositionInfoLayout = struct([\n  blob(8),\n  u8(\"bump\"),\n  publicKey(\"nftMint\"),\n  publicKey(\"poolId\"),\n\n  s32(\"tickLower\"),\n  s32(\"tickUpper\"),\n  u128(\"liquidity\"),\n  u128(\"feeGrowthInsideLastX64A\"),\n  u128(\"feeGrowthInsideLastX64B\"),\n  u64(\"tokenFeesOwedA\"),\n  u64(\"tokenFeesOwedB\"),\n\n  seq(PositionRewardInfoLayout, 3, \"rewardInfos\"),\n\n  seq(u64(), 8, \"\"),\n]);\n\nexport const ProtocolPositionLayout = struct([\n  blob(8),\n  u8(\"bump\"),\n  publicKey('poolId'),\n  s32(\"tickLowerIndex\"),\n  s32(\"tickUpperIndex\"),\n  u128(\"liquidity\"),\n  u128(\"feeGrowthInsideLastX64A\"),\n  u128(\"feeGrowthInsideLastX64B\"),\n  u64(\"tokenFeesOwedA\"),\n  u64(\"tokenFeesOwedB\"),\n  seq(u128(), 3, \"rewardGrowthInside\"),\n\n  seq(u64(), 8, \"\"),\n]);\n\nexport const TickLayout = struct([\n  s32(\"tick\"),\n  i128(\"liquidityNet\"),\n  u128(\"liquidityGross\"),\n  u128(\"feeGrowthOutsideX64A\"),\n  u128(\"feeGrowthOutsideX64B\"),\n  seq(u128(), 3, \"rewardGrowthsOutsideX64\"),\n\n  seq(u32(), 13, \"\"),\n]);\n\nexport const TickArrayLayout = struct([\n  blob(8),\n  publicKey(\"poolId\"),\n  s32(\"startTickIndex\"),\n  seq(TickLayout, TICK_ARRAY_SIZE, \"ticks\"),\n  u8(\"initializedTickCount\"),\n\n  seq(u8(), 115, \"\"),\n]);\n\nexport const OperationLayout = struct([\n  blob(329),\n  seq(publicKey(), 100, \"whitelistMints\"),\n]);\n","import { Connection, PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { getMultipleAccountsInfo } from \"../../common\";\nimport { TickArrayLayout } from \"../layout\";\n\nimport { MAX_TICK_ARRAY_START_INDEX, MIN_TICK_ARRAY_START_INDEX } from \"./constants\";\nimport { getPdaTickArrayAddress } from \"./pda\";\nimport { Tick, TICK_ARRAY_SIZE, TickArray, TickUtils } from \"./tick\";\n\nexport const FETCH_TICKARRAY_COUNT = 15;\n\nexport declare type PoolVars = {\n  key: PublicKey;\n  tokenA: PublicKey;\n  tokenB: PublicKey;\n  fee: number;\n};\n\nexport class TickQuery {\n  public static async getTickArrays(\n    connection: Connection,\n    programId: PublicKey,\n    poolId: PublicKey,\n    tickCurrent: number,\n    tickSpacing: number,\n    tickArrayBitmapArray: BN[]\n  ) {\n    const tickArrayBitmap = TickUtils.mergeTickArrayBitmap(tickArrayBitmapArray);\n    const tickArraysToFetch: PublicKey[] = [];\n    const currentTickArrayStartIndex = TickUtils.getTickArrayStartIndexByTick(tickCurrent, tickSpacing);\n\n    const startIndexArray = TickUtils.getInitializedTickArrayInRange(tickArrayBitmap, tickSpacing, currentTickArrayStartIndex, Math.floor(FETCH_TICKARRAY_COUNT / 2));\n    for (let i = 0; i < startIndexArray.length; i++) {\n      const { publicKey: tickArrayAddress } = getPdaTickArrayAddress(\n        programId,\n        poolId,\n        startIndexArray[i]\n      );\n      tickArraysToFetch.push(tickArrayAddress);\n    }\n\n    const fetchedTickArrays = (await getMultipleAccountsInfo(connection, tickArraysToFetch)).map(i => i !== null ? TickArrayLayout.decode(i.data) : null)\n\n    const tickArrayCache: { [key: string]: TickArray } = {};\n    for (let i = 0; i < tickArraysToFetch.length; i++) {\n      const _info = fetchedTickArrays[i]\n      if (_info === null) continue\n\n      tickArrayCache[_info.startTickIndex] = {\n        ..._info,\n        address: tickArraysToFetch[i],\n      }\n    }\n    return tickArrayCache;\n  }\n\n  public static nextInitializedTick(\n    programId: PublicKey,\n    poolId: PublicKey,\n    tickArrayCache: { [key: string]: TickArray },\n    tickIndex: number,\n    tickSpacing: number,\n    zeroForOne: boolean\n  ) {\n    let {\n      initializedTick: nextTick,\n      tickArrayAddress,\n      tickArrayStartTickIndex,\n    } = this.nextInitializedTickInOneArray(\n      programId,\n      poolId,\n      tickArrayCache,\n      tickIndex,\n      tickSpacing,\n      zeroForOne\n    );\n    while (nextTick == undefined || nextTick.liquidityGross.lten(0)) {\n      tickArrayStartTickIndex = TickUtils.getNextTickArrayStartIndex(\n        tickArrayStartTickIndex,\n        tickSpacing,\n        zeroForOne\n      );\n      if (\n        tickArrayStartTickIndex < MIN_TICK_ARRAY_START_INDEX ||\n        tickArrayStartTickIndex > MAX_TICK_ARRAY_START_INDEX\n      ) {\n        throw new Error(\"No enough initialized tickArray\");\n      }\n      const cachedTickArray = tickArrayCache[tickArrayStartTickIndex];\n\n      if (cachedTickArray === undefined) continue\n\n      const { nextTick: _nextTick, tickArrayAddress: _tickArrayAddress, tickArrayStartTickIndex: _tickArrayStartTickIndex } = this.firstInitializedTickInOneArray(\n        programId,\n        poolId,\n        cachedTickArray,\n        zeroForOne\n      );\n      [nextTick, tickArrayAddress, tickArrayStartTickIndex] = [_nextTick, _tickArrayAddress, _tickArrayStartTickIndex]\n    }\n    if (nextTick == undefined) {\n      throw new Error(\"No invaild tickArray cache\");\n    }\n    return { nextTick, tickArrayAddress, tickArrayStartTickIndex };\n  }\n\n  public static firstInitializedTickInOneArray(\n    programId: PublicKey,\n    poolId: PublicKey,\n    tickArray: TickArray,\n    zeroForOne: boolean\n  ) {\n    let nextInitializedTick: Tick | undefined = undefined;\n    if (zeroForOne) {\n      let i = TICK_ARRAY_SIZE - 1;\n      while (i >= 0) {\n        const tickInArray = tickArray.ticks[i];\n        if (tickInArray.liquidityGross.gtn(0)) {\n          nextInitializedTick = tickInArray;\n          break;\n        }\n        i = i - 1;\n      }\n    } else {\n      let i = 0;\n      while (i < TICK_ARRAY_SIZE) {\n        const tickInArray = tickArray.ticks[i];\n        if (tickInArray.liquidityGross.gtn(0)) {\n          nextInitializedTick = tickInArray;\n          break;\n        }\n        i = i + 1;\n      }\n    }\n    const { publicKey: tickArrayAddress } = getPdaTickArrayAddress(\n      programId,\n      poolId,\n      tickArray.startTickIndex\n    );\n    return { nextTick: nextInitializedTick, tickArrayAddress, tickArrayStartTickIndex: tickArray.startTickIndex };\n  }\n\n  public static nextInitializedTickInOneArray(\n    programId: PublicKey,\n    poolId: PublicKey,\n    tickArrayCache: { [key: string]: TickArray },\n    tickIndex: number,\n    tickSpacing: number,\n    zeroForOne: boolean\n  ): {\n    initializedTick: Tick | undefined;\n    tickArrayAddress: PublicKey | undefined;\n    tickArrayStartTickIndex: number;\n  } {\n    const startIndex = TickUtils.getTickArrayStartIndexByTick(\n      tickIndex,\n      tickSpacing\n    );\n    let tickPositionInArray = Math.floor(\n      (tickIndex - startIndex) / tickSpacing\n    );\n    const cachedTickArray = tickArrayCache[startIndex];\n    if (cachedTickArray == undefined) {\n      return {\n        initializedTick: undefined,\n        tickArrayAddress: undefined,\n        tickArrayStartTickIndex: startIndex,\n      };\n    }\n    let nextInitializedTick: Tick | undefined = undefined;\n    if (zeroForOne) {\n      while (tickPositionInArray >= 0) {\n        const tickInArray = cachedTickArray.ticks[tickPositionInArray];\n        if (tickInArray.liquidityGross.gtn(0)) {\n          nextInitializedTick = tickInArray;\n          break;\n        }\n        tickPositionInArray = tickPositionInArray - 1;\n      }\n    } else {\n      tickPositionInArray = tickPositionInArray + 1;\n      while (tickPositionInArray < TICK_ARRAY_SIZE) {\n        const tickInArray = cachedTickArray.ticks[tickPositionInArray];\n        if (tickInArray.liquidityGross.gtn(0)) {\n          nextInitializedTick = tickInArray;\n          break;\n        }\n        tickPositionInArray = tickPositionInArray + 1;\n      }\n    }\n    const { publicKey: tickArrayAddress } = getPdaTickArrayAddress(\n      programId,\n      poolId,\n      startIndex\n    );\n    return {\n      initializedTick: nextInitializedTick,\n      tickArrayAddress,\n      tickArrayStartTickIndex: cachedTickArray.startTickIndex,\n    };\n  }\n}\n"],"mappings":"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CR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,KACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,gBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,kBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,QAAS,CACP,OAAQ,UACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,sBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,eACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CAAC,CACf,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,kBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MAC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","names":["math_exports","__export","LiquidityMath","MathUtil","SqrtPriceMath","SwapMath","TickMath","__toCommonJS","import_bn","import_decimal","import_big","import_bn","import_web3","import_bn","import_web3","import_web3","version","import_colors","_permanentCensorErrors","_censorErrors","LogLevels","_moduleLogLevel","_globalLogger","_checkNormalize","missing","form","error","_normalizeError","LogLevel","ErrorCode","HEX","perfectDisplay","value","deeping","_value","hex","i","obj","k","v","_Logger","moduleName","version","logLevel","args","level","message","code","params","messageDetails","key","reason","name","condition","count","expectedCount","target","kind","censorship","permanent","Logger","import_spl_token","import_web3","logger","Logger","SYSTEM_PROGRAM_ID","MEMO_PROGRAM_ID","RENT_PROGRAM_ID","METADATA_PROGRAM_ID","validateAndParsePublicKey","publicKey","e","findProgramAddress","seeds","programId","nonce","import_web3","import_bn","chunkArray","arr","chunkSize","cache","tmp","import_web3","logger","Logger","getMultipleAccountsInfo","connection","publicKeys","config","__async","batchRequest","commitment","__spreadValues","chunkedKeys","chunkArray","results","batch","keys","key","unsafeRes","accountInfo","data","executable","lamports","owner","rentEpoch","error","import_bn","import_bn","ZERO","BN","ONE","TWO","THREE","FIVE","TEN","_100","_1000","_10000","logger","Logger","MAX_SAFE","parseBigNumberish","value","BN","SOL","WSOL","MAINNET_SPL_TOKENS","__spreadValues","WSOL","MAINNET_LP_TOKENS","DEVNET_SPL_TOKENS","__spreadValues","WSOL","TESTNET_SPL_TOKENS","__spreadValues","WSOL","logger","Logger","_Currency","decimals","symbol","name","Currency","SOL","_Token","Currency","mint","decimals","symbol","name","validateAndParsePublicKey","other","Token","WSOL","SOL","import_big","import_decimal","import_toformat","toFormat","_toFarmat","to_format_default","logger","Logger","Big","to_format_default","_Big","Decimal","_Decimal","toSignificantRounding","toFixedRounding","Fraction","numerator","denominator","ONE","parseBigNumberish","other","otherParsed","significantDigits","format","rounding","quotient","decimalPlaces","logger","Logger","Big","to_format_default","_Big","_100_PERCENT","Fraction","_100","logger","Logger","import_bn","NEGATIVE_ONE","BN","Q64","Q128","MaxU64","ONE","U64Resolution","MaxUint128","MIN_TICK","MAX_TICK","MIN_SQRT_PRICE_X64","MAX_SQRT_PRICE_X64","MIN_TICK_ARRAY_START_INDEX","MAX_TICK_ARRAY_START_INDEX","BIT_PRECISION","LOG_B_2_X32","LOG_B_P_ERR_MARGIN_LOWER_X64","LOG_B_P_ERR_MARGIN_UPPER_X64","FEE_RATE_DENOMINATOR","import_web3","import_bn","import_buffer_layout","Layout","_Layout","Structure","_Structure","UInt","_UInt","u8","_u8","u16","_u16","s32","_s32","seq","_seq","blob","_blob","BNLayout","Layout","span","signed","property","blob","b","offset","num","BN","src","u8","property","UInt","u32","u64","BNLayout","u128","i128","property","BNLayout","WrappedLayout","Layout","layout","decoder","encoder","b","offset","src","publicKey","blob","key","bool","property","WrappedLayout","u8","decodeBool","encodeBool","value","Structure","b","offset","struct","fields","property","decodePrefixes","seq","elementLayout","count","property","parsedCount","superCount","target","countProperty","value","import_bn","import_web3","i32ToBytes","num","arr","AMM_CONFIG_SEED","POOL_SEED","POOL_VAULT_SEED","POOL_REWARD_VAULT_SEED","POSITION_SEED","TICK_ARRAY_SEED","OPERATION_SEED","getPdaTickArrayAddress","programId","poolId","startIndex","findProgramAddress","TICK_ARRAY_SEED","i32ToBytes","TICK_ARRAY_SIZE","TICK_ARRAY_BITMAP_SIZE","TickUtils","programId","poolId","tickIndex","tickSpacing","startIndex","tickArrayAddress","getPdaTickArrayAddress","startTickIndex","offsetInArray","tick","multiplier","compressed","bitmap","bit_pos","lastTickArrayStartIndex","zeroForOne","bns","tickArrayBitmap","tickArrayStartIndex","expectedCount","tickArrayOffset","result","allInitializedTickArrayIndex","address","tickArray","i","start","end","fetchNum","BN","nextStartIndex","AmmConfigLayout","struct","blob","u8","u16","publicKey","u32","seq","u64","ObservationLayout","u128","ObservationInfoLayout","bool","RewardInfo","PoolInfoLayout","s32","PositionRewardInfoLayout","PositionInfoLayout","ProtocolPositionLayout","TickLayout","i128","TickArrayLayout","TICK_ARRAY_SIZE","OperationLayout","FETCH_TICKARRAY_COUNT","TickQuery","connection","programId","poolId","tickCurrent","tickSpacing","tickArrayBitmapArray","__async","tickArrayBitmap","TickUtils","tickArraysToFetch","currentTickArrayStartIndex","startIndexArray","i","tickArrayAddress","getPdaTickArrayAddress","fetchedTickArrays","getMultipleAccountsInfo","TickArrayLayout","tickArrayCache","_info","__spreadProps","__spreadValues","tickIndex","zeroForOne","nextTick","tickArrayStartTickIndex","MIN_TICK_ARRAY_START_INDEX","MAX_TICK_ARRAY_START_INDEX","cachedTickArray","_nextTick","_tickArrayAddress","_tickArrayStartTickIndex","tickArray","nextInitializedTick","TICK_ARRAY_SIZE","tickInArray","startIndex","tickPositionInArray","MathUtil","a","b","denominator","numerator","result","ZERO","ONE","num","decimalPlaces","Decimal","BN","n0","n1","Q128","mulRightShift","val","mulBy","signedRightShift","signedLeftShift","shiftBy","bitWidth","twosN0","twoN0","SqrtPriceMath","sqrtPriceX64","decimalsA","decimalsB","price","liquidity","amountIn","zeroForOne","amountOut","amount","add","liquidityLeftShift","U64Resolution","numerator1","amountMulSqrtPrice","deltaY","amountDivLiquidity","tick","MIN_TICK","MAX_TICK","tickAbs","ratio","MaxUint128","MAX_SQRT_PRICE_X64","MIN_SQRT_PRICE_X64","msb","adjustedMsb","log2pIntegerX32","bit","precision","log2pFractionX64","r","BIT_PRECISION","rMoreThanTwo","log2pFractionX32","logbpX64","LOG_B_2_X32","tickLow","LOG_B_P_ERR_MARGIN_LOWER_X64","tickHigh","LOG_B_P_ERR_MARGIN_UPPER_X64","TickMath","tickSpacing","mintDecimalsA","mintDecimalsB","LiquidityMath","x","y","sqrtPriceX64A","sqrtPriceX64B","roundUp","numerator2","Q64","amountA","MaxU64","amountB","sqrtPriceCurrentX64","liquidity0","liquidity1","amountMax","amountSlippage","coefficient","amount0Slippage","amount1Slippage","SwapMath","programId","poolId","tickArrayCache","fee","currentTick","currentSqrtPriceX64","amountSpecified","lastSavedTickArrayStartIndex","sqrtPriceLimitX64","baseInput","state","loopCount","step","nextInitTick","tickArrayAddress","tickAarrayStartIndex","TickQuery","targetPrice","liquidityNet","NEGATIVE_ONE","sqrtPriceX64Current","sqrtPriceX64Target","amountRemaining","feeRate","swapStep","amountRemainingSubtractFee","FEE_RATE_DENOMINATOR","reachTargetPrice"]}