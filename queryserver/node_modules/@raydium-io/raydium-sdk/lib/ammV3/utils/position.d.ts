import BN__default from 'bn.js';
import { AmmV3PoolInfo, AmmV3PoolPersonalPosition, AmmV3PoolRewardInfo } from '../ammV3.js';
import { Tick } from './tick.js';
import '@solana/web3.js';
import 'decimal.js';
import '../../base/base.js';
import '../../entity/bignumber.js';
import '../../spl/layout.js';
import '../../marshmallow/index.js';
import '../../marshmallow/buffer-layout.js';
import '../../entity/amount.js';
import '../../entity/constant.js';
import '../../entity/currency.js';
import '../../common/pubkey.js';
import '@solana/spl-token';
import '../../entity/fraction.js';
import '../../entity/percent.js';
import '../../entity/price.js';

declare class PositionUtils {
    static getfeeGrowthInside(poolState: AmmV3PoolInfo, tickLowerState: Tick, tickUpperState: Tick): {
        feeGrowthInsideX64A: BN__default;
        feeGrowthInsideBX64: BN__default;
    };
    static GetPositionFees(ammPool: AmmV3PoolInfo, positionState: AmmV3PoolPersonalPosition, tickLowerState: Tick, tickUpperState: Tick): {
        tokenFeeAmountA: BN__default;
        tokenFeeAmountB: BN__default;
    };
    static GetPositionRewards(ammPool: AmmV3PoolInfo, positionState: AmmV3PoolPersonalPosition, tickLowerState: Tick, tickUpperState: Tick): BN__default[];
    static getRewardGrowthInside(tickCurrentIndex: number, tickLowerState: Tick, tickUpperState: Tick, rewardInfos: AmmV3PoolRewardInfo[]): BN__default[];
}

export { PositionUtils };
