{"version":3,"sources":["../../src/route/index.ts","../../src/route/id.ts","../../src/route/route.ts","../../src/base/base.ts","../../src/entity/amount.ts","../../src/common/convert-json.ts","../../src/common/pubkey.ts","../../src/common/logger.ts","../../src/version.ts","../../src/common/inspect.ts","../../src/common/lodash.ts","../../src/common/web3.ts","../../src/entity/bignumber.ts","../../src/entity/constant.ts","../../src/token/sol.ts","../../src/token/mainnet.ts","../../src/token/devnet.ts","../../src/token/testnet.ts","../../src/token/util.ts","../../src/entity/currency.ts","../../src/entity/fraction.ts","../../src/entity/to-format.ts","../../src/entity/percent.ts","../../src/entity/price.ts","../../src/marshmallow/index.ts","../../src/marshmallow/buffer-layout.ts","../../src/spl/layout.ts","../../src/spl/spl.ts","../../src/ammV3/utils/pda.ts","../../src/base/util.ts","../../src/liquidity/id.ts","../../src/liquidity/layout.ts","../../src/liquidity/liquidity.ts","../../src/serum/id.ts","../../src/serum/layout.ts","../../src/serum/serum.ts","../../src/liquidity/stable.ts"],"sourcesContent":["export * from \"./id\";\nexport * from \"./route\";\nexport * from \"./type\";\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { LiquidityVersion } from \"../liquidity\";\n\nimport { RouteVersion } from \"./type\";\n\n/* ================= program public keys ================= */\nexport const _ROUTE_PROGRAM_ID_V1 = \"routeUGWgWzqBWFcrCfv8tritsqukccJPu3q5GPP3xS\";\nexport const ROUTE_PROGRAM_ID_V1 = new PublicKey(_ROUTE_PROGRAM_ID_V1);\n\n// route program id string => route version\nexport const ROUTE_PROGRAMID_TO_VERSION: {\n  [key: string]: RouteVersion;\n} = {\n  [_ROUTE_PROGRAM_ID_V1]: 1,\n};\n\n// route version => route program id\nexport const ROUTE_VERSION_TO_PROGRAMID: { [key in RouteVersion]?: PublicKey } & {\n  [K: number]: PublicKey;\n} = {\n  1: ROUTE_PROGRAM_ID_V1,\n};\n\n// route version => serum version\nexport const ROUTE_VERSION_TO_LIQUIDITY_VERSION: {\n  [key in RouteVersion]?: LiquidityVersion;\n} & {\n  [K: number]: LiquidityVersion;\n} = {\n  1: 4,\n};\n","import { Connection, PublicKey, Signer, Transaction, TransactionInstruction } from \"@solana/web3.js\";\nimport { intersection, xor } from \"lodash\";\n\nimport { Base, TokenAccount, UnsignedTransactionAndSigners } from \"../base\";\nimport {\n  AccountMeta, AccountMetaReadonly, findProgramAddress, Logger, SYSTEM_PROGRAM_ID, TOKEN_PROGRAM_ID,\n} from \"../common\";\nimport {\n  BigNumberish, Currency, CurrencyAmount, parseBigNumberish, Percent, Price, Token, TokenAmount,\n} from \"../entity\";\nimport { Liquidity, LiquidityPoolInfo, LiquidityPoolKeys, SwapSide } from \"../liquidity\";\nimport { ModelDataPubkey } from \"../liquidity/stable\";\nimport { struct, u64, u8 } from \"../marshmallow\";\n\nimport {\n  ROUTE_PROGRAM_ID_V1, ROUTE_PROGRAMID_TO_VERSION, ROUTE_VERSION_TO_LIQUIDITY_VERSION, ROUTE_VERSION_TO_PROGRAMID,\n} from \"./id\";\n\nconst logger = Logger.from(\"Route\");\n\n/* ================= user keys ================= */\n/**\n * Full user keys that build transaction need\n */\nexport interface RouteUserKeys {\n  inTokenAccount: PublicKey;\n  outTokenAccount: PublicKey;\n  middleTokenAccount: PublicKey;\n  middleStatusAccount: PublicKey;\n  owner: PublicKey;\n}\n\n/* ================= make instruction and transaction ================= */\nexport interface RouteSwapInstructionParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  userKeys: RouteUserKeys;\n  amountIn: BigNumberish;\n  amountOut: BigNumberish;\n  fixedSide: SwapSide;\n}\n\nexport interface RouteSwapInFixedInInstructionParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  userKeys: Omit<RouteUserKeys, \"outTokenAccount\">;\n  amountIn: BigNumberish;\n  amountOut: BigNumberish;\n}\n\nexport interface RouteSwapOutFixedInInstructionParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  userKeys: Omit<RouteUserKeys, \"inTokenAccount\">;\n}\n\nexport interface RouteSwapTransactionParams {\n  connection: Connection;\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    // dont support payer, txn size limited\n  };\n  amountIn: CurrencyAmount | TokenAmount;\n  amountOut: CurrencyAmount | TokenAmount;\n  fixedSide: SwapSide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface RouteComputeAmountOutParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  fromPoolInfo: LiquidityPoolInfo;\n  toPoolInfo: LiquidityPoolInfo;\n  amountIn: CurrencyAmount | TokenAmount;\n  currencyOut: Currency | Token;\n  slippage: Percent;\n}\n\nexport class Route extends Base {\n  /* ================= get version and program id ================= */\n  static getProgramId(version: number) {\n    const programId = ROUTE_VERSION_TO_PROGRAMID[version];\n    logger.assertArgument(!!programId, \"invalid version\", \"version\", version);\n\n    return programId;\n  }\n\n  static getVersion(programId: PublicKey) {\n    const programIdString = programId.toBase58();\n\n    const version = ROUTE_PROGRAMID_TO_VERSION[programIdString];\n    logger.assertArgument(!!version, \"invalid program id\", \"programId\", programIdString);\n\n    return version;\n  }\n\n  static getLiquidityVersion(version: number) {\n    const liquidityVersion = ROUTE_VERSION_TO_LIQUIDITY_VERSION[version];\n    logger.assertArgument(!!liquidityVersion, \"invalid version\", \"version\", version);\n\n    return liquidityVersion;\n  }\n\n  /* ================= get key ================= */\n  static getAssociatedMiddleStatusAccount({\n    programId,\n    fromPoolId,\n    middleMint,\n    owner,\n  }: {\n    programId: PublicKey;\n    fromPoolId: PublicKey;\n    middleMint: PublicKey;\n    owner: PublicKey;\n  }) {\n    const { publicKey } = findProgramAddress(\n      [fromPoolId.toBuffer(), middleMint.toBuffer(), owner.toBuffer()],\n      programId,\n    );\n    return publicKey;\n  }\n\n  /* ================= make instruction and transaction ================= */\n  static makeSwapInstruction(params: RouteSwapInstructionParams) {\n    const { fixedSide } = params;\n\n    if (fixedSide === \"in\") {\n      return [this.makeSwapInFixedInInstruction(params), this.makeSwapOutFixedInInstruction(params)];\n    }\n\n    return logger.throwArgumentError(\"invalid params\", \"params\", params);\n  }\n\n  static makeSwapInFixedInInstruction({\n    fromPoolKeys,\n    toPoolKeys,\n    userKeys,\n    amountIn,\n    amountOut,\n  }: RouteSwapInFixedInInstructionParams) {\n    const LAYOUT = struct([u8(\"instruction\"), u64(\"amountIn\"), u64(\"amountOut\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n\n    let keys;\n\n    if (fromPoolKeys.version === 4) {\n      LAYOUT.encode(\n        {\n          instruction: 0,\n          amountIn: parseBigNumberish(amountIn),\n          amountOut: parseBigNumberish(amountOut),\n        },\n        data,\n      );\n      keys = [\n        // system\n        AccountMetaReadonly(SYSTEM_PROGRAM_ID, false),\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMetaReadonly(fromPoolKeys.programId, false),\n        AccountMeta(fromPoolKeys.id, false),\n        AccountMetaReadonly(toPoolKeys.id, false),\n        AccountMetaReadonly(fromPoolKeys.authority, false),\n        AccountMeta(fromPoolKeys.openOrders, false),\n        AccountMeta(fromPoolKeys.baseVault, false),\n        AccountMeta(fromPoolKeys.quoteVault, false),\n        // serum\n        AccountMetaReadonly(fromPoolKeys.marketProgramId, false),\n        AccountMeta(fromPoolKeys.marketId, false),\n        AccountMeta(fromPoolKeys.marketBids, false),\n        AccountMeta(fromPoolKeys.marketAsks, false),\n        AccountMeta(fromPoolKeys.marketEventQueue, false),\n        AccountMeta(fromPoolKeys.marketBaseVault, false),\n        AccountMeta(fromPoolKeys.marketQuoteVault, false),\n        AccountMetaReadonly(fromPoolKeys.marketAuthority, false),\n        // user\n        AccountMeta(userKeys.inTokenAccount, false),\n        AccountMeta(userKeys.middleTokenAccount, false),\n        AccountMeta(userKeys.middleStatusAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n      ];\n    } else {\n      LAYOUT.encode(\n        {\n          instruction: 2,\n          amountIn: parseBigNumberish(amountIn),\n          amountOut: parseBigNumberish(amountOut),\n        },\n        data,\n      );\n      keys = [\n        // system\n        AccountMetaReadonly(SYSTEM_PROGRAM_ID, false),\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMetaReadonly(fromPoolKeys.programId, false),\n        AccountMeta(fromPoolKeys.id, false),\n        AccountMetaReadonly(toPoolKeys.id, false),\n        AccountMetaReadonly(fromPoolKeys.authority, false),\n        AccountMeta(fromPoolKeys.openOrders, false),\n        AccountMeta(fromPoolKeys.baseVault, false),\n        AccountMeta(fromPoolKeys.quoteVault, false),\n\n        AccountMetaReadonly(ModelDataPubkey, false),\n        // serum\n        AccountMetaReadonly(fromPoolKeys.marketProgramId, false),\n        AccountMeta(fromPoolKeys.marketId, false),\n        AccountMeta(fromPoolKeys.marketBids, false),\n        AccountMeta(fromPoolKeys.marketAsks, false),\n        AccountMeta(fromPoolKeys.marketEventQueue, false),\n        AccountMeta(fromPoolKeys.id, false),\n        AccountMeta(fromPoolKeys.id, false),\n        AccountMeta(fromPoolKeys.id, false),\n        // user\n        AccountMeta(userKeys.inTokenAccount, false),\n        AccountMeta(userKeys.middleTokenAccount, false),\n        AccountMeta(userKeys.middleStatusAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n      ];\n    }\n\n    return new TransactionInstruction({\n      programId: ROUTE_PROGRAM_ID_V1,\n      keys,\n      data,\n    });\n  }\n\n  static makeSwapOutFixedInInstruction({ fromPoolKeys, toPoolKeys, userKeys }: RouteSwapOutFixedInInstructionParams) {\n    const LAYOUT = struct([u8(\"instruction\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n\n    let keys;\n\n    if (toPoolKeys.version === 4) {\n      LAYOUT.encode(\n        {\n          instruction: 1,\n        },\n        data,\n      );\n      keys = [\n        // system\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMetaReadonly(toPoolKeys.programId, false),\n        AccountMetaReadonly(fromPoolKeys.id, false),\n        AccountMeta(toPoolKeys.id, false),\n        AccountMetaReadonly(toPoolKeys.authority, false),\n        AccountMeta(toPoolKeys.openOrders, false),\n        AccountMeta(toPoolKeys.baseVault, false),\n        AccountMeta(toPoolKeys.quoteVault, false),\n        // serum\n        AccountMetaReadonly(toPoolKeys.marketProgramId, false),\n        AccountMeta(toPoolKeys.marketId, false),\n        AccountMeta(toPoolKeys.marketBids, false),\n        AccountMeta(toPoolKeys.marketAsks, false),\n        AccountMeta(toPoolKeys.marketEventQueue, false),\n        AccountMeta(toPoolKeys.marketBaseVault, false),\n        AccountMeta(toPoolKeys.marketQuoteVault, false),\n        AccountMetaReadonly(toPoolKeys.marketAuthority, false),\n        // user\n        AccountMeta(userKeys.middleTokenAccount, false),\n        AccountMeta(userKeys.outTokenAccount, false),\n        AccountMeta(userKeys.middleStatusAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n      ];\n    } else {\n      LAYOUT.encode(\n        {\n          instruction: 3,\n        },\n        data,\n      );\n      keys = [\n        // system\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMetaReadonly(toPoolKeys.programId, false),\n        AccountMetaReadonly(fromPoolKeys.id, false),\n        AccountMeta(toPoolKeys.id, false),\n        AccountMetaReadonly(toPoolKeys.authority, false),\n        AccountMeta(toPoolKeys.openOrders, false),\n        AccountMeta(toPoolKeys.baseVault, false),\n        AccountMeta(toPoolKeys.quoteVault, false),\n\n        AccountMetaReadonly(ModelDataPubkey, false),\n        // serum\n        AccountMetaReadonly(toPoolKeys.marketProgramId, false),\n        AccountMeta(toPoolKeys.marketId, false),\n        AccountMeta(toPoolKeys.marketBids, false),\n        AccountMeta(toPoolKeys.marketAsks, false),\n        AccountMeta(toPoolKeys.marketEventQueue, false),\n        AccountMeta(toPoolKeys.id, false),\n        AccountMeta(toPoolKeys.id, false),\n        AccountMeta(toPoolKeys.id, false),\n        // user\n        AccountMeta(userKeys.middleTokenAccount, false),\n        AccountMeta(userKeys.outTokenAccount, false),\n        AccountMeta(userKeys.middleStatusAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n      ];\n    }\n\n    return new TransactionInstruction({\n      programId: ROUTE_PROGRAM_ID_V1,\n      keys,\n      data,\n    });\n  }\n\n  static async makeSwapTransaction(params: RouteSwapTransactionParams) {\n    const { connection, fromPoolKeys, toPoolKeys, userKeys, amountIn, amountOut, fixedSide, config } = params;\n    const { tokenAccounts, owner } = userKeys;\n\n    logger.debug(\"amountIn:\", amountIn);\n    logger.debug(\"amountOut:\", amountOut);\n    logger.assertArgument(\n      !amountIn.isZero() && !amountOut.isZero(),\n      \"amounts must greater than zero\",\n      \"currencyAmounts\",\n      {\n        amountIn: amountIn.toFixed(),\n        amountOut: amountOut.toFixed(),\n      },\n    );\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    // handle currency in & out (convert SOL to WSOL)\n    const tokenIn = amountIn instanceof TokenAmount ? amountIn.token : Token.WSOL;\n    const tokenOut = amountOut instanceof TokenAmount ? amountOut.token : Token.WSOL;\n\n    const tokenAccountIn = this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenIn.mint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    const tokenAccountOut = this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenOut.mint,\n      owner,\n    });\n\n    const fromPoolMints = [fromPoolKeys.baseMint.toBase58(), fromPoolKeys.quoteMint.toBase58()];\n    const toPoolMints = [toPoolKeys.baseMint.toBase58(), toPoolKeys.quoteMint.toBase58()];\n    const intersectionMints = intersection(fromPoolMints, toPoolMints);\n    const _middleMint = intersectionMints[0];\n    const middleMint = new PublicKey(_middleMint);\n    const tokenAccountMiddle = this._selectTokenAccount({\n      tokenAccounts,\n      mint: middleMint,\n      owner,\n    });\n\n    const [amountInRaw, amountOutRaw] = [amountIn.raw, amountOut.raw];\n\n    const setupInstructions: TransactionInstruction[] = [];\n    const setupSigners: Signer[] = [];\n    const swapInstructions: TransactionInstruction[] = [];\n\n    const _tokenAccountIn = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: amountInRaw,\n      mint: tokenIn.mint,\n      tokenAccount: tokenAccountIn,\n      owner,\n      frontInstructions: setupInstructions,\n      signers: setupSigners,\n      bypassAssociatedCheck,\n    });\n    const _tokenAccountOut = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: tokenOut.mint,\n      tokenAccount: tokenAccountOut,\n      owner,\n      frontInstructions: setupInstructions,\n      signers: setupSigners,\n      bypassAssociatedCheck,\n    });\n    const _tokenAccountMiddle = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: 0,\n      mint: middleMint,\n      tokenAccount: tokenAccountMiddle,\n      owner,\n      frontInstructions: setupInstructions,\n      signers: setupSigners,\n      bypassAssociatedCheck,\n    });\n\n    swapInstructions.push(\n      ...this.makeSwapInstruction({\n        fromPoolKeys,\n        toPoolKeys,\n        userKeys: {\n          inTokenAccount: _tokenAccountIn,\n          outTokenAccount: _tokenAccountOut,\n          middleTokenAccount: _tokenAccountMiddle,\n          middleStatusAccount: this.getAssociatedMiddleStatusAccount({\n            programId: ROUTE_PROGRAM_ID_V1,\n            fromPoolId: fromPoolKeys.id,\n            middleMint,\n            owner,\n          }),\n          owner,\n        },\n        amountIn: amountInRaw,\n        amountOut: amountOutRaw,\n        fixedSide,\n      }),\n    );\n\n    let setupTransaction: UnsignedTransactionAndSigners | null = null;\n    let swapTransaction: UnsignedTransactionAndSigners | null = null;\n\n    if (setupInstructions.length > 0) {\n      setupTransaction = {\n        transaction: new Transaction().add(...setupInstructions),\n        signers: setupSigners,\n      };\n    }\n    if (swapInstructions.length > 0) {\n      swapTransaction = {\n        transaction: new Transaction().add(...swapInstructions),\n        signers: [],\n      };\n    }\n\n    return { setupTransaction, swapTransaction };\n  }\n\n  // static makeSwapInFixedOutInstruction() {}\n\n  // static makeSwapOutFixedOutInstruction() {}\n\n  /* ================= compute data ================= */\n  static computeAmountOut({\n    fromPoolKeys,\n    toPoolKeys,\n    fromPoolInfo,\n    toPoolInfo,\n    amountIn,\n    currencyOut,\n    slippage,\n  }: RouteComputeAmountOutParams) {\n    const { swap: fromPoolSwapEnabled } = Liquidity.getEnabledFeatures(fromPoolInfo);\n    const { swap: toPoolSwapEnabled } = Liquidity.getEnabledFeatures(toPoolInfo);\n    logger.assertArgument(fromPoolSwapEnabled && toPoolSwapEnabled, \"pools swap not enabled\", \"pools\", {\n      fromPoolKeys,\n      toPoolKeys,\n      fromPoolInfo,\n      toPoolInfo,\n    });\n\n    const tokenIn = amountIn instanceof TokenAmount ? amountIn.token : Token.WSOL;\n    const tokenOut = currencyOut instanceof Token ? currencyOut : Token.WSOL;\n\n    logger.assertArgument(\n      Liquidity.includesToken(tokenIn, fromPoolKeys) && Liquidity.includesToken(tokenOut, toPoolKeys),\n      \"pools cannot be routed\",\n      \"pools\",\n      {\n        fromPoolKeys,\n        toPoolKeys,\n      },\n    );\n\n    const fromPoolMints = [fromPoolKeys.baseMint.toBase58(), fromPoolKeys.quoteMint.toBase58()];\n    const toPoolMints = [toPoolKeys.baseMint.toBase58(), toPoolKeys.quoteMint.toBase58()];\n    const mints = [...fromPoolMints, ...toPoolMints];\n    const decimals = [\n      fromPoolInfo.baseDecimals,\n      fromPoolInfo.quoteDecimals,\n      toPoolInfo.baseDecimals,\n      toPoolInfo.quoteDecimals,\n    ];\n    const mintIn = tokenIn.mint.toBase58();\n    const mintOut = tokenOut.mint.toBase58();\n\n    const xorMints = xor(fromPoolMints, toPoolMints);\n    logger.assertArgument(\n      xorMints.length === 2 && xorMints.includes(mintIn) && xorMints.includes(mintOut),\n      \"xor tokens not match\",\n      \"pools\",\n      {\n        fromPoolKeys,\n        toPoolKeys,\n      },\n    );\n\n    const intersectionMints = intersection(fromPoolMints, toPoolMints);\n    logger.assertArgument(intersectionMints.length === 1, \"cannot found middle token of two pools\", \"pools\", {\n      fromPoolKeys,\n      toPoolKeys,\n    });\n\n    const _middleMint = intersectionMints[0];\n    const index = mints.indexOf(_middleMint);\n    // logger.assertArgument(index !== -1, \"cannot found middle token\", \"pools\", {\n    //   fromPoolKeys,\n    //   toPoolKeys,\n    // });\n    const middleMintDecimals = decimals[index];\n    const middleMint = new PublicKey(_middleMint);\n    const middleToken = new Token(middleMint, middleMintDecimals);\n\n    logger.debug(\"from pool:\", fromPoolKeys);\n    logger.debug(\"to pool:\", toPoolKeys);\n    logger.debug(\"intersection mints:\", intersectionMints);\n    logger.debug(\"xor mints:\", xorMints);\n    logger.debug(\"middleMint:\", _middleMint);\n\n    // TODO slippage and amount out\n    const {\n      // amountOut: middleAmountOut,\n      minAmountOut: minMiddleAmountOut,\n      priceImpact: firstPriceImpact,\n      fee: firstFee,\n    } = Liquidity.computeAmountOut({\n      poolKeys: fromPoolKeys,\n      poolInfo: fromPoolInfo,\n      amountIn,\n      currencyOut: middleToken,\n      slippage,\n    });\n    const {\n      amountOut,\n      minAmountOut,\n      priceImpact: secondPriceImpact,\n      fee: secondFee,\n    } = Liquidity.computeAmountOut({\n      poolKeys: toPoolKeys,\n      poolInfo: toPoolInfo,\n      amountIn: minMiddleAmountOut,\n      currencyOut,\n      slippage,\n    });\n\n    let executionPrice: Price | null = null;\n    const amountInRaw = amountIn.raw;\n    const amountOutRaw = amountOut.raw;\n    const currencyIn = amountIn instanceof TokenAmount ? amountIn.token : amountIn.currency;\n    if (!amountInRaw.isZero() && !amountOutRaw.isZero()) {\n      executionPrice = new Price(currencyIn, amountInRaw, currencyOut, amountOutRaw);\n      logger.debug(\"executionPrice:\", `1 ${currencyIn.symbol} ≈ ${executionPrice.toFixed()} ${currencyOut.symbol}`);\n      logger.debug(\n        \"executionPrice invert:\",\n        `1 ${currencyOut.symbol} ≈ ${executionPrice.invert().toFixed()} ${currencyIn.symbol}`,\n      );\n    }\n\n    return {\n      // middleAmountOut,\n      // minMiddleAmountOut,\n      amountOut,\n      minAmountOut,\n      executionPrice,\n      priceImpact: firstPriceImpact.add(secondPriceImpact),\n      fee: [firstFee, secondFee],\n    };\n  }\n\n  // static computeAmountIn() {}\n}\n","import { AccountLayout, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport {\n  Connection, Keypair, PublicKey, Signer, SystemProgram, Transaction, TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport { BigNumberish, Token } from \"../entity\";\nimport { Spl, SplAccount } from \"../spl\";\n\nexport interface TokenAccount {\n  pubkey: PublicKey;\n  accountInfo: SplAccount;\n}\n\nexport interface SelectTokenAccountParams {\n  tokenAccounts: TokenAccount[];\n  mint: PublicKey;\n  owner: PublicKey;\n  config?: { associatedOnly?: boolean };\n}\n\nexport interface HandleTokenAccountParams {\n  connection: Connection;\n  side: \"in\" | \"out\";\n  amount: BigNumberish;\n  mint: PublicKey;\n  tokenAccount: PublicKey | null;\n  owner: PublicKey;\n  payer?: PublicKey;\n  frontInstructions: TransactionInstruction[];\n  endInstructions?: TransactionInstruction[];\n  signers: Signer[];\n  bypassAssociatedCheck: boolean;\n}\n\nexport interface SelectOrCreateTokenAccountParams {\n  mint: PublicKey,\n  tokenAccounts: TokenAccount[]\n\n  owner: PublicKey\n\n  createInfo?: {\n    connection: Connection,\n    payer: PublicKey\n    amount?: BigNumberish\n\n    frontInstructions: TransactionInstruction[];\n    endInstructions?: TransactionInstruction[];\n    signers: Signer[];\n  }\n\n  associatedOnly: boolean\n}\n\nexport interface UnsignedTransactionAndSigners {\n  transaction: Transaction;\n  signers: Signer[];\n}\n\nexport class Base {\n  static _selectTokenAccount(params: SelectTokenAccountParams) {\n    const { tokenAccounts, mint, owner, config } = params;\n\n    const { associatedOnly } = {\n      // default\n      ...{ associatedOnly: true },\n      // custom\n      ...config,\n    };\n\n    const _tokenAccounts = tokenAccounts\n      // filter by mint\n      .filter(({ accountInfo }) => accountInfo.mint.equals(mint))\n      // sort by balance\n      .sort((a, b) => (a.accountInfo.amount.lt(b.accountInfo.amount) ? 1 : -1));\n\n    const ata = Spl.getAssociatedTokenAccount({ mint, owner });\n\n    for (const tokenAccount of _tokenAccounts) {\n      const { pubkey } = tokenAccount;\n\n      if (associatedOnly) {\n        // return ata only\n        if (ata.equals(pubkey)) return pubkey;\n      } else {\n        // return the first account\n        return pubkey;\n      }\n    }\n\n    return null;\n  }\n\n  static async _handleTokenAccount(params: HandleTokenAccountParams) {\n    const {\n      connection,\n      side,\n      amount,\n      mint,\n      tokenAccount,\n      owner,\n      payer = owner,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    } = params;\n\n    const ata = Spl.getAssociatedTokenAccount({ mint, owner });\n\n    if (Token.WSOL.mint.equals(mint)) {\n      const newTokenAccount = await Spl.insertCreateWrappedNativeAccountInstructions({\n        connection,\n        owner,\n        payer,\n        instructions: frontInstructions,\n        signers,\n        amount,\n      });\n      // if no endInstructions provide, no need to close\n      if (endInstructions) {\n        endInstructions.push(Spl.makeCloseAccountInstruction({ tokenAccount: newTokenAccount, owner, payer }));\n      }\n\n      return newTokenAccount;\n    } else if (!tokenAccount || (side === \"out\" && !ata.equals(tokenAccount) && !bypassAssociatedCheck)) {\n      frontInstructions.push(\n        Spl.makeCreateAssociatedTokenAccountInstruction({\n          mint,\n          associatedAccount: ata,\n          owner,\n          payer,\n        }),\n      );\n\n      return ata;\n    }\n\n    return tokenAccount;\n  }\n\n  static async _selectOrCreateTokenAccount(params: SelectOrCreateTokenAccountParams) {\n    const { mint, tokenAccounts, createInfo, associatedOnly, owner } = params\n    const ata = Spl.getAssociatedTokenAccount({ mint, owner });\n    const accounts = tokenAccounts.filter((i) => i.accountInfo.mint.equals(mint) && (!associatedOnly || i.pubkey.equals(ata))).sort((a, b) => (a.accountInfo.amount.lt(b.accountInfo.amount) ? 1 : -1))\n    // find token or don't need create\n    if (createInfo === undefined || accounts.length > 0) {\n      return accounts.length > 0 ? accounts[0].pubkey : undefined\n    }\n\n    if (associatedOnly) {\n      createInfo.frontInstructions.push(\n        Spl.makeCreateAssociatedTokenAccountInstruction({\n          mint,\n          associatedAccount: ata,\n          owner,\n          payer: createInfo.payer,\n        }),\n      );\n\n      if (mint.equals(Token.WSOL.mint)) {\n        const newTokenAccount = await Spl.insertCreateWrappedNativeAccountInstructions({\n          connection: createInfo.connection,\n          owner,\n          payer: createInfo.payer,\n          instructions: createInfo.frontInstructions,\n          signers: createInfo.signers,\n          amount: createInfo.amount ?? 0,\n        });\n        if (createInfo.endInstructions) {\n          createInfo.endInstructions.push(Spl.makeCloseAccountInstruction({ tokenAccount: newTokenAccount, owner, payer: createInfo.payer }));\n        }\n\n        if (createInfo.amount) {\n          createInfo.frontInstructions.push(\n            Spl.makeTransferInstruction({\n              source: newTokenAccount,\n              destination: ata,\n              owner,\n              amount: createInfo.amount,\n            })\n          )\n        }\n      }\n\n      if (createInfo.endInstructions) {\n        createInfo.endInstructions.push(Spl.makeCloseAccountInstruction({ tokenAccount: ata, owner, payer: createInfo.payer }));\n      }\n\n      return ata\n    } else {\n      if (mint.equals(Token.WSOL.mint)) {\n        const newTokenAccount = await Spl.insertCreateWrappedNativeAccountInstructions({\n          connection: createInfo.connection,\n          owner,\n          payer: createInfo.payer,\n          instructions: createInfo.frontInstructions,\n          signers: createInfo.signers,\n          amount: createInfo.amount ?? 0,\n        });\n        if (createInfo.endInstructions) {\n          createInfo.endInstructions.push(Spl.makeCloseAccountInstruction({ tokenAccount: newTokenAccount, owner, payer: createInfo.payer }));\n        }\n        return newTokenAccount\n      } else {\n        const newTokenAccount = Keypair.generate()\n        const balanceNeeded = await createInfo.connection.getMinimumBalanceForRentExemption(AccountLayout.span)\n\n        const createAccountIns = SystemProgram.createAccount({\n          fromPubkey: owner,\n          newAccountPubkey: newTokenAccount.publicKey,\n          lamports: balanceNeeded,\n          space: AccountLayout.span,\n          programId: TOKEN_PROGRAM_ID,\n        })\n\n        const initAccountIns = Spl.createInitAccountInstruction(\n          TOKEN_PROGRAM_ID,\n          mint,\n          newTokenAccount.publicKey,\n          owner,\n        )\n        createInfo.frontInstructions.push(createAccountIns, initAccountIns)\n        createInfo.signers.push(newTokenAccount)\n        if (createInfo.endInstructions) {\n          createInfo.endInstructions.push(Spl.makeCloseAccountInstruction({ tokenAccount: newTokenAccount.publicKey, owner, payer: createInfo.payer }))\n        }\n        return newTokenAccount.publicKey\n      }\n    }\n  }\n}\n","import _Big from \"big.js\";\nimport BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { Rounding, TEN } from \"./constant\";\nimport { Currency, currencyEquals, Token } from \"./currency\";\nimport { Fraction } from \"./fraction\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/amount\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nexport function splitNumber(num: string, decimals: number) {\n  let integral = \"0\";\n  let fractional = \"0\";\n\n  if (num.includes(\".\")) {\n    const splited = num.split(\".\");\n    if (splited.length === 2) {\n      [integral, fractional] = splited;\n      fractional = fractional.padEnd(decimals, \"0\");\n    } else {\n      return logger.throwArgumentError(\"invalid number string\", \"num\", num);\n    }\n  } else {\n    integral = num;\n  }\n\n  // fix decimals is 0\n  return [integral, fractional.slice(0, decimals) || fractional];\n}\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency;\n\n  public constructor(currency: Currency, amount: BigNumberish, isRaw = true) {\n    let parsedAmount = new BN(0);\n    const multiplier = TEN.pow(new BN(currency.decimals));\n\n    if (isRaw) {\n      parsedAmount = parseBigNumberish(amount);\n    } else {\n      let integralAmount = new BN(0);\n      let fractionalAmount = new BN(0);\n\n      // parse fractional string\n      if (typeof amount === \"string\" || typeof amount === \"number\" || typeof amount === \"bigint\") {\n        const [integral, fractional] = splitNumber(amount.toString(), currency.decimals);\n\n        integralAmount = parseBigNumberish(integral);\n        fractionalAmount = parseBigNumberish(fractional);\n      }\n      // else {\n      //   integralAmount = parseBigNumberish(amount);\n      // }\n\n      integralAmount = integralAmount.mul(multiplier);\n      parsedAmount = integralAmount.add(fractionalAmount);\n    }\n\n    super(parsedAmount, multiplier);\n    this.currency = currency;\n  }\n\n  public get raw() {\n    return this.numerator;\n  }\n\n  public isZero() {\n    return this.raw.isZero();\n  }\n\n  /**\n   * a greater than b\n   */\n  public gt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"gt currency not equals\");\n\n    return this.raw.gt(other.raw);\n  }\n\n  /**\n   * a less than b\n   */\n  public lt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"lt currency not equals\");\n\n    return this.raw.lt(other.raw);\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"add currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.add(other.raw));\n  }\n\n  public sub(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"sub currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.sub(other.raw));\n  }\n\n  public toSignificant(\n    significantDigits = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding);\n  }\n\n  /**\n   * To fixed\n   *\n   * @example\n   * ```\n   * 1 -> 1.000000000\n   * 1.234 -> 1.234000000\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toFixed(\n    decimalPlaces = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    logger.assert(decimalPlaces <= this.currency.decimals, \"decimals overflow\");\n\n    return super.toFixed(decimalPlaces, format, rounding);\n  }\n\n  /**\n   * To exact\n   *\n   * @example\n   * ```\n   * 1 -> 1\n   * 1.234 -> 1.234\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toExact(format: object = { groupSeparator: \"\" }): string {\n    Big.DP = this.currency.decimals;\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format);\n  }\n}\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token;\n\n  public constructor(token: Token, amount: BigNumberish, isRaw = true) {\n    super(token, amount, isRaw);\n    this.token = token;\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"add token not equals\");\n\n    return new TokenAmount(this.token, this.raw.add(other.raw));\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"sub token not equals\");\n\n    return new TokenAmount(this.token, this.raw.sub(other.raw));\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\nimport { BN } from \"bn.js\";\n\nimport { Currency, CurrencyAmount, Fraction, Percent, Price, TokenAmount } from \"../entity\";\n\nimport { validateAndParsePublicKey } from \"./pubkey\";\n\ntype Primitive = boolean | number | string | null | undefined | PublicKey;\n\n/**\n *\n * @example\n * ```typescript\n * interface A {\n *   keyA: string;\n *   keyB: string;\n *   map: {\n *     hello: string;\n *     i: number;\n *   };\n *   list: (string | number)[];\n *   keyC: number;\n * }\n *\n * type WrappedA = ReplaceType<A, string, boolean> // {\n *   keyA: boolean;\n *   keyB: boolean;\n *   map: {\n *     hello: boolean;\n *     i: number;\n *   };\n *   list: (number | boolean)[];\n *   keyC: number;\n * }\n * ```\n */\nexport type ReplaceType<Old, From, To> = {\n  [T in keyof Old]: Old[T] extends From // to avoid case: Old[T] is an Object,\n    ? Exclude<Old[T], From> | To // when match,  directly replace\n    : Old[T] extends Primitive // judge whether need recursively replace\n    ? From extends Old[T] // it's an Object\n      ? Exclude<Old[T], From> | To // directly replace\n      : Old[T] // stay same\n    : ReplaceType<Old[T], From, To>; // recursively replace\n};\n\nconst baseInnerObjects = [TokenAmount, PublicKey, Fraction, BN, Currency, CurrencyAmount, Price, Percent];\n\nfunction notInnerObject(v: unknown): v is Record<string, any> {\n  return typeof v === \"object\" && v !== null && !baseInnerObjects.some((o) => typeof o === \"object\" && v instanceof o);\n}\n\nexport function jsonInfo2PoolKeys<T>(jsonInfo: T): ReplaceType<T, string, PublicKey> {\n  // @ts-expect-error no need type for inner code\n  return typeof jsonInfo === \"string\"\n    ? validateAndParsePublicKey(jsonInfo)\n    : Array.isArray(jsonInfo)\n    ? jsonInfo.map((k) => jsonInfo2PoolKeys(k))\n    : notInnerObject(jsonInfo)\n    ? Object.fromEntries(Object.entries(jsonInfo).map(([k, v]) => [k, jsonInfo2PoolKeys(v)]))\n    : jsonInfo;\n}\n\nexport function poolKeys2JsonInfo<T>(jsonInfo: T): ReplaceType<T, PublicKey, string> {\n  // @ts-expect-error no need type for inner code\n  return jsonInfo instanceof PublicKey\n    ? jsonInfo.toBase58()\n    : Array.isArray(jsonInfo)\n    ? jsonInfo.map((k) => poolKeys2JsonInfo(k))\n    : notInnerObject(jsonInfo)\n    ? Object.fromEntries(Object.entries(jsonInfo).map(([k, v]) => [k, poolKeys2JsonInfo(v)]))\n    : jsonInfo;\n}\n","import { PublicKey, SystemProgram } from \"@solana/web3.js\";\n\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/pubkey\");\n\n/* ================= global public keys ================= */\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nexport { SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY } from \"@solana/web3.js\";\n\nexport const SYSTEM_PROGRAM_ID = SystemProgram.programId;\nexport const MEMO_PROGRAM_ID = new PublicKey(\"Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo\");\nexport const RENT_PROGRAM_ID = new PublicKey('SysvarRent111111111111111111111111111111111')\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s')\n\n/* ================= validate public key ================= */\nexport type PublicKeyish = PublicKey | string;\n\nexport function validateAndParsePublicKey(publicKey: PublicKeyish) {\n  if (publicKey instanceof PublicKey) {\n    return publicKey;\n  }\n\n  if (typeof publicKey === \"string\") {\n    try {\n      const key = new PublicKey(publicKey);\n      return key;\n    } catch {\n      return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n    }\n  }\n\n  return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n}\n\nexport function findProgramAddress(seeds: Array<Buffer | Uint8Array>, programId: PublicKey) {\n  const [publicKey, nonce] = PublicKey.findProgramAddressSync(seeds, programId);\n  return { publicKey, nonce };\n}\n\nexport function AccountMeta(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: true,\n    isSigner,\n  };\n}\n\nexport function AccountMetaReadonly(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: false,\n    isSigner,\n  };\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { version } from \"../version\";\n\n// https://github.com/DABH/colors.js\nimport \"@colors/colors\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [name: string]: number } = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };\nconst _moduleLogLevel: { [name: string]: number } = {};\n\nlet _globalLogger: Logger;\n\nfunction _checkNormalize(): string {\n  try {\n    const missing: Array<string> = [];\n\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n\n  return \"\";\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n  DEBUG = \"DEBUG\",\n  INFO = \"INFO\",\n  WARNING = \"WARNING\",\n  ERROR = \"ERROR\",\n  OFF = \"OFF\",\n}\n\nexport enum ErrorCode {\n  ///////////////////\n  // Generic Errors\n\n  // Unknown Error\n  UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n  // Not Implemented\n  NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n  // Unsupported Operation\n  //   - operation\n  UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  NETWORK_ERROR = \"NETWORK_ERROR\",\n\n  // Some sort of bad response from the server\n  RPC_ERROR = \"RPC_ERROR\",\n\n  // Timeout\n  TIMEOUT = \"TIMEOUT\",\n\n  ///////////////////\n  // Operational  Errors\n\n  // Buffer Overrun\n  BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n  ///////////////////\n  // Argument Errors\n\n  // Missing new operator to an object\n  //  - name: The name of the class\n  MISSING_NEW = \"MISSING_NEW\",\n\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n  ///////////////////\n  // Blockchain Errors\n\n  // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n}\n\nconst HEX = \"0123456789abcdef\";\n\nfunction perfectDisplay(value: any, deeping = false) {\n  let _value = value;\n\n  try {\n    if (value instanceof Uint8Array) {\n      let hex = \"\";\n      for (let i = 0; i < value.length; i++) {\n        hex += HEX[value[i] >> 4];\n        hex += HEX[value[i] & 0x0f];\n      }\n      _value = `Uint8Array(0x${hex})`;\n    } else if (value instanceof PublicKey) {\n      _value = `PublicKey(${value.toBase58()})`;\n    } else if (value instanceof Object && !deeping) {\n      const obj = {};\n      Object.entries(value).forEach(([k, v]) => {\n        obj[k] = perfectDisplay(v, true);\n      });\n      _value = JSON.stringify(obj);\n    } else if (!deeping) {\n      _value = JSON.stringify(value);\n    }\n  } catch (error) {\n    _value = JSON.stringify(value.toString());\n  }\n\n  return _value;\n}\n\nexport class Logger {\n  readonly version: string = version;\n  readonly moduleName: string;\n\n  static errors = ErrorCode;\n\n  static levels = LogLevel;\n\n  constructor(moduleName: string) {\n    this.moduleName = moduleName;\n  }\n\n  _log(logLevel: LogLevel, args: Array<any>): void {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    const _logLevel = _moduleLogLevel[this.moduleName] || LogLevels[\"default\"];\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  debug(...args: Array<any>): void {\n    this._log(Logger.levels.DEBUG, [\"[DEBUG]\".blue, ...args]);\n  }\n\n  info(...args: Array<any>): void {\n    this._log(Logger.levels.INFO, [\"[INFO]\".green, ...args]);\n  }\n\n  warn(...args: Array<any>): void {\n    this._log(Logger.levels.WARNING, [\"[WARN]\".yellow, ...args]);\n  }\n\n  makeError(message: string, code?: ErrorCode, params?: any): Error {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails: Array<string> = [];\n    Object.entries(params).forEach(([key, value]) => {\n      messageDetails.push(`${key}=${perfectDisplay(value)})`);\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`module=${this.moduleName}`);\n    messageDetails.push(`version=${this.version}`);\n\n    const reason = message;\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n\n    // @TODO: Any??\n    const error: any = new Error(message);\n    error.reason = reason;\n    error.code = code;\n\n    Object.entries(params).forEach(([key, value]) => {\n      error[key] = value;\n    });\n\n    return error;\n  }\n\n  throwError(message: string, code?: ErrorCode, params?: any): never {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message: string, name: string, value: any): never {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value,\n    });\n  }\n\n  assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition: any, message: string, name: string, value: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message?: string): void {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError,\n      });\n    }\n  }\n\n  checkSafeUint53(value: number, message?: string): void {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value,\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value,\n      });\n    }\n  }\n\n  checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n  }\n\n  checkNew(target: any, kind: any): void {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  checkAbstract(target: any, kind: any): void {\n    if (target === kind) {\n      this.throwError(\n        \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n        Logger.errors.UNSUPPORTED_OPERATION,\n        { name: target.name, operation: \"new\" },\n      );\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  static globalLogger(): Logger {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship: boolean, permanent?: boolean): void {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(moduleName: string, logLevel: \"DEBUG\" | \"INFO\" | \"WARNING\" | \"ERROR\" | \"OFF\"): void {\n    const level = LogLevels[logLevel.toLowerCase()];\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n    _moduleLogLevel[moduleName] = level;\n  }\n\n  static from(version: string): Logger {\n    return new Logger(version);\n  }\n}\n","export const version = \"1.1.0-beta.6\";\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nexport function inspectPublicKey() {\n  // @ts-ignore\n  PublicKey.prototype.inspect = function () {\n    return `<PublicKey: ${this.toString()}>`;\n  };\n}\n\nexport function inspectBN() {\n  // @ts-ignore\n  BN.prototype.inspect = function () {\n    // @ts-ignore\n    return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n  };\n}\n\nexport function inspectAll() {\n  inspectPublicKey();\n  inspectBN();\n}\n","/**\n * https://youmightnotneed.com/lodash/\n */\n\nexport function chunkArray<T>(arr: T[], chunkSize = 1, cache: T[][] = []): T[][] {\n  const tmp = [...arr];\n  if (chunkSize <= 0) return cache;\n  while (tmp.length) cache.push(tmp.splice(0, chunkSize));\n  return cache;\n}\n\nexport function intersection<T>(arr: T[], ...args: T[][]) {\n  return arr.filter((item) => args.every((arr) => arr.includes(item)));\n}\n\nexport function xor<T>(arr: T[], ...args: T[][]) {\n  return arr.filter((item) => args.every((arr) => !arr.includes(item)));\n}\n\nexport function uniq<T>(arr: T[]) {\n  return [...new Set(arr)];\n}\n","// import BN from 'bn.js';\n\n// import { Spl, SPL_ACCOUNT_LAYOUT } from '../spl';\n// import { TOKEN_PROGRAM_ID } from './id';\n\nimport {\n  AccountInfo, Commitment, Connection, Keypair, PublicKey, Signer, SimulatedTransactionResponse, Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport { chunkArray } from \"./lodash\";\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/web3\");\n\ninterface MultipleAccountsJsonRpcResponse {\n  jsonrpc: string;\n  id: string;\n  error?: {\n    code: number;\n    message: string;\n  };\n  result: {\n    context: { slot: number };\n    value: { data: Array<string>; executable: boolean; lamports: number; owner: string; rentEpoch: number }[];\n  };\n}\n\nexport interface GetMultipleAccountsInfoConfig {\n  batchRequest?: boolean;\n  commitment?: Commitment;\n}\n\n// export async function batchGetMultipleAccountsInfo() {}\n\nexport async function getMultipleAccountsInfo(\n  connection: Connection,\n  publicKeys: PublicKey[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<(AccountInfo<Buffer> | null)[]> {\n  const { batchRequest, commitment } = {\n    // default\n    ...{\n      batchRequest: false,\n    },\n    // custom\n    ...config,\n  };\n\n  const chunkedKeys = chunkArray(publicKeys, 100);\n  let results: (AccountInfo<Buffer> | null)[][] = new Array(chunkedKeys.length).fill([]);\n\n  if (batchRequest) {\n    const batch = chunkedKeys.map((keys) => {\n      const args = connection._buildArgs([keys.map((key) => key.toBase58())], commitment, \"base64\");\n      return {\n        methodName: \"getMultipleAccounts\",\n        args,\n      };\n    });\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const unsafeResponse: MultipleAccountsJsonRpcResponse[] = await connection._rpcBatchRequest(batch);\n    results = unsafeResponse.map((unsafeRes: MultipleAccountsJsonRpcResponse) => {\n      if (unsafeRes.error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: unsafeRes.error.message,\n        });\n      }\n\n      return unsafeRes.result.value.map((accountInfo) => {\n        if (accountInfo) {\n          const { data, executable, lamports, owner, rentEpoch } = accountInfo;\n\n          if (data.length !== 2 && data[1] !== \"base64\") {\n            return logger.throwError(\"info must be base64 encoded\", Logger.errors.RPC_ERROR);\n          }\n\n          return {\n            data: Buffer.from(data[0], \"base64\"),\n            executable,\n            lamports,\n            owner: new PublicKey(owner),\n            rentEpoch,\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n  } else {\n    try {\n      results = (await Promise.all(\n        chunkedKeys.map((keys) => connection.getMultipleAccountsInfo(keys, commitment)),\n      )) as (AccountInfo<Buffer> | null)[][];\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n  }\n\n  return results.flat();\n}\n\nexport async function getMultipleAccountsInfoWithCustomFlags<T extends { pubkey: PublicKey }>(\n  connection: Connection,\n  publicKeysWithCustomFlag: T[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<({ accountInfo: AccountInfo<Buffer> | null } & T)[]> {\n  const multipleAccountsInfo = await getMultipleAccountsInfo(\n    connection,\n    publicKeysWithCustomFlag.map((o) => o.pubkey),\n    config,\n  );\n\n  return publicKeysWithCustomFlag.map((o, idx) => ({ ...o, accountInfo: multipleAccountsInfo[idx] }));\n}\n\nexport interface GetTokenAccountsByOwnerConfig {\n  commitment?: Commitment;\n}\n\n// export async function getTokenAccountsByOwner(\n//   connection: Connection,\n//   owner: PublicKey,\n//   config?: GetTokenAccountsByOwnerConfig\n// ) {\n//   const defaultConfig = {};\n//   const customConfig = { ...defaultConfig, ...config };\n\n//   const solReq = connection.getAccountInfo(owner, customConfig.commitment);\n//   const tokenReq = connection.getTokenAccountsByOwner(\n//     owner,\n//     {\n//       programId: TOKEN_PROGRAM_ID\n//     },\n//     customConfig.commitment\n//   );\n\n//   const [solResp, tokenResp] = await Promise.all([solReq, tokenReq]);\n\n//   const accounts: {\n//     publicKey?: PublicKey;\n//     mint?: PublicKey;\n//     isAssociated?: boolean;\n//     amount: BN;\n//     isNative: boolean;\n//   }[] = [];\n\n//   for (const { pubkey, account } of tokenResp.value) {\n//     // double check layout length\n//     if (account.data.length !== SPL_ACCOUNT_LAYOUT.span) {\n//       return logger.throwArgumentError('invalid token account layout length', 'publicKey', pubkey);\n//     }\n\n//     const { mint, amount } = SPL_ACCOUNT_LAYOUT.decode(account.data);\n//     const associatedTokenAddress = await Spl.getAssociatedTokenAddress({ mint, owner });\n\n//     accounts.push({\n//       publicKey: pubkey,\n//       mint,\n//       isAssociated: associatedTokenAddress.equals(pubkey),\n//       amount,\n//       isNative: false\n//     });\n//   }\n\n//   if (solResp) {\n//     accounts.push({\n//       amount: new BN(solResp.lamports),\n//       isNative: true\n//     });\n//   }\n\n//   return accounts;\n// }\n\n/**\n * Forecast transaction size\n */\nexport function forecastTransactionSize(instructions: TransactionInstruction[], signers: PublicKey[]) {\n  if (instructions.length < 1) {\n    return logger.throwArgumentError(\"no instructions provided\", \"instructions\", instructions);\n  }\n  if (signers.length < 1) {\n    return logger.throwArgumentError(\"no signers provided\", \"signers\", signers);\n  }\n\n  const transaction = new Transaction({\n    recentBlockhash: \"11111111111111111111111111111111\",\n    feePayer: signers[0],\n  });\n\n  transaction.add(...instructions);\n\n  try {\n    transaction.serialize({ verifySignatures: false });\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Simulates multiple instruction\n */\nexport async function simulateMultipleInstruction(\n  connection: Connection,\n  instructions: TransactionInstruction[],\n  keyword: string,\n  batchRequest = true\n) {\n  const feePayer = new PublicKey(\"RaydiumSimuLateTransaction11111111111111111\");\n\n  const transactions: Transaction[] = [];\n\n  let transaction = new Transaction();\n  transaction.feePayer = feePayer\n\n  for (const instruction of instructions) {\n    if (!forecastTransactionSize([...transaction.instructions, instruction], [feePayer])) {\n      transactions.push(transaction);\n      transaction = new Transaction();\n      transaction.feePayer = feePayer\n    }\n    transaction.add(instruction);\n  }\n  if (transaction.instructions.length > 0) {\n    transactions.push(transaction);\n  }\n\n  let results: SimulatedTransactionResponse[] = [];\n\n  try {\n    results = await simulateTransaction(connection, transactions, batchRequest)\n    if (results.find(i => i.err !== null)) throw Error('rpc simulateTransaction error')\n  } catch (error) {\n    if (error instanceof Error) {\n      return logger.throwError(\"failed to simulate for instructions\", Logger.errors.RPC_ERROR, {\n        message: error.message,\n      });\n    }\n  }\n\n  const logs: string[] = [];\n  for (const result of results) {\n    logger.debug(\"simulate result:\", result);\n\n    if (result.logs) {\n      const filteredLog = result.logs.filter((log) => log && log.includes(keyword));\n      logger.debug(\"filteredLog:\", logs);\n\n      logger.assertArgument(filteredLog.length !== 0, \"simulate log not match keyword\", \"keyword\", keyword);\n\n      logs.push(...filteredLog);\n    }\n  }\n\n  return logs;\n}\n\nexport function parseSimulateLogToJson(log: string, keyword: string) {\n  const results = log.match(/{[\"\\w:,]+}/g);\n  if (!results || results.length !== 1) {\n    return logger.throwArgumentError(\"simulate log fail to match json\", \"keyword\", keyword);\n  }\n\n  return results[0];\n}\n\nexport function parseSimulateValue(log: string, key: string) {\n  const reg = new RegExp(`\"${key}\":(\\\\d+)`, \"g\");\n\n  const results = reg.exec(log);\n  if (!results || results.length !== 2) {\n    return logger.throwArgumentError(\"simulate log fail to match key\", \"key\", key);\n  }\n\n  return results[1];\n}\n\nexport async function simulateTransaction(connection: Connection, transactions: Transaction[], batchRequest?: boolean) {\n  let results: any[] = []\n  if (batchRequest) {\n    const getLatestBlockhash = await connection.getLatestBlockhash()\n\n    const encodedTransactions: string[] = []\n    for (const transaction of transactions) {\n      transaction.recentBlockhash = getLatestBlockhash.blockhash\n      transaction.lastValidBlockHeight = getLatestBlockhash.lastValidBlockHeight\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const message = transaction._compile();\n      const signData = message.serialize();\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const wireTransaction = transaction._serialize(signData);\n      const encodedTransaction = wireTransaction.toString('base64');\n\n      encodedTransactions.push(encodedTransaction)\n    }\n\n    const batch = encodedTransactions.map((keys) => {\n      const args = connection._buildArgs([keys], undefined, \"base64\");\n      return {\n        methodName: \"simulateTransaction\",\n        args,\n      };\n    });\n\n    const reqData: { methodName: string; args: any[]; }[][] = []\n    const itemReqIndex = 20\n    for (let i = 0; i < Math.ceil(batch.length / itemReqIndex); i++) {\n      reqData.push(batch.slice(i * itemReqIndex, (i + 1) * itemReqIndex))\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    results = await (await Promise.all(reqData.map(async (i) => (await connection._rpcBatchRequest(i)).map(ii => ii.result.value)))).flat()\n  } else {\n    try {\n      results = (await Promise.all(\n        transactions.map(async (transaction) =>\n          await (await connection.simulateTransaction(transaction)).value\n        )));\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n  }\n\n  return results\n}\n\nexport function splitTxAndSigners({ instructions, signers, payer }: {\n  instructions: TransactionInstruction[],\n  signers: (Signer | Keypair)[],\n  payer: PublicKey\n}) {\n  const signerKey: { [key: string]: Signer } = {}\n  for (const item of signers) signerKey[item.publicKey.toString()] = item\n\n  const transactions: { transaction: Transaction, signer: (Keypair | Signer)[] }[] = []\n\n  let itemIns: TransactionInstruction[] = []\n\n  for (const item of instructions) {\n    const _itemIns = [...itemIns, item]\n    const _signerStrs = new Set<string>(_itemIns.map(i => i.keys.filter(ii => ii.isSigner).map(ii => ii.pubkey.toString())).flat())\n    const _signer = [..._signerStrs.values()].map(i => new PublicKey(i))\n\n    if (forecastTransactionSize(_itemIns, [payer, ..._signer])) {\n      itemIns.push(item)\n    } else {\n      transactions.push({\n        transaction: new Transaction().add(...itemIns),\n        signer: [..._signerStrs.values()].map(i => signerKey[i]).filter(i => i !== undefined)\n      })\n\n      itemIns = [item]\n    }\n  }\n\n  if (itemIns.length > 0) {\n    const _signerStrs = new Set<string>(itemIns.map(i => i.keys.filter(ii => ii.isSigner).map(ii => ii.pubkey.toString())).flat())\n    transactions.push({\n      transaction: new Transaction().add(...itemIns),\n      signer: [..._signerStrs.values()].map(i => signerKey[i]).filter(i => i !== undefined)\n    })\n  }\n\n  return transactions\n}","import BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { TEN } from \"./constant\";\n\nconst logger = Logger.from(\"entity/bignumber\");\n\nexport type BigNumberish = BN | string | number | bigint;\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\nexport function parseBigNumberish(value: BigNumberish) {\n  // BN\n  if (value instanceof BN) {\n    return value;\n  }\n\n  // string\n  if (typeof value === \"string\") {\n    if (value.match(/^-?[0-9]+$/)) {\n      return new BN(value);\n    }\n\n    return logger.throwArgumentError(\"invalid BigNumberish string\", \"value\", value);\n  }\n\n  // number\n  if (typeof value === \"number\") {\n    if (value % 1) {\n      return logger.throwArgumentError(\"BigNumberish number underflow\", \"value\", value);\n    }\n\n    if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n      return logger.throwArgumentError(\"BigNumberish number overflow\", \"value\", value);\n    }\n\n    return new BN(String(value));\n  }\n\n  // bigint\n  if (typeof value === \"bigint\") {\n    return new BN(value.toString());\n  }\n\n  return logger.throwArgumentError(\"invalid BigNumberish value\", \"value\", value);\n}\n\nexport function tenExponentiate(shift: BigNumberish) {\n  return TEN.pow(parseBigNumberish(shift));\n}\n\n// round up\nexport function divCeil(a: BN, b: BN): BN {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const dm = a.divmod(b);\n\n  // Fast case - exact division\n  if (dm.mod.isZero()) return dm.div;\n\n  // Round up\n  return dm.div.isNeg() ? dm.div.isubn(1) : dm.div.iaddn(1);\n}\n","import BN from \"bn.js\";\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP,\n}\n\nexport const ZERO = new BN(0);\nexport const ONE = new BN(1);\nexport const TWO = new BN(2);\nexport const THREE = new BN(3);\nexport const FIVE = new BN(5);\nexport const TEN = new BN(10);\nexport const _100 = new BN(100);\nexport const _1000 = new BN(1000);\nexport const _10000 = new BN(10000);\n","import { NativeTokenInfo, SplTokenInfo } from \"./type\";\n\nexport const SOL: NativeTokenInfo = {\n  symbol: \"SOL\",\n  name: \"Solana\",\n  decimals: 9,\n};\n\nexport const WSOL: SplTokenInfo = {\n  symbol: \"WSOL\",\n  name: \"Wrapped SOL\",\n  mint: \"So11111111111111111111111111111111111111112\",\n  decimals: 9,\n  extensions: {\n    coingeckoId: \"solana\",\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const MAINNET_SPL_TOKENS: SplTokens = {\n  WSOL: {\n    ...WSOL,\n  },\n  BTC: {\n    symbol: \"BTC\",\n    name: \"Bitcoin\",\n    mint: \"9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bitcoin\",\n    },\n  },\n  ETH: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    mint: \"2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ethereum\",\n    },\n  },\n  USDT: {\n    symbol: \"USDT\",\n    name: \"Tether\",\n    mint: \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  WUSDT: {\n    symbol: \"WUSDT\",\n    name: \"Wrapped USDT\",\n    mint: \"BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  USDC: {\n    symbol: \"USDC\",\n    name: \"USD Coin\",\n    mint: \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  WUSDC: {\n    symbol: \"WUSDC\",\n    name: \"Wrapped USDC\",\n    mint: \"BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  YFI: {\n    symbol: \"YFI\",\n    name: \"YFI\",\n    mint: \"3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"yearn-finance\",\n    },\n  },\n  LINK: {\n    symbol: \"LINK\",\n    name: \"Chainlink\",\n    mint: \"CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"chainlink\",\n    },\n  },\n  XRP: {\n    symbol: \"XRP\",\n    name: \"XRP\",\n    mint: \"Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ripple\",\n    },\n  },\n  SUSHI: {\n    symbol: \"SUSHI\",\n    name: \"SUSHI\",\n    mint: \"AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"sushi\",\n    },\n  },\n  ALEPH: {\n    symbol: \"ALEPH\",\n    name: \"ALEPH\",\n    mint: \"CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"aleph\",\n    },\n  },\n  SXP: {\n    symbol: \"SXP\",\n    name: \"SXP\",\n    mint: \"SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swipe\",\n    },\n  },\n  HGET: {\n    symbol: \"HGET\",\n    name: \"HGET\",\n    mint: \"BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"hedget\",\n    },\n  },\n  CREAM: {\n    symbol: \"CREAM\",\n    name: \"CREAM\",\n    mint: \"5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cream-2\",\n    },\n  },\n  UNI: {\n    symbol: \"UNI\",\n    name: \"UNI\",\n    mint: \"DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"uniswap\",\n    },\n  },\n  SRM: {\n    symbol: \"SRM\",\n    name: \"Serum\",\n    mint: \"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"serum\",\n    },\n  },\n  FTT: {\n    symbol: \"FTT\",\n    name: \"FTX Token\",\n    mint: \"AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ftx-token\",\n    },\n  },\n  MSRM: {\n    symbol: \"MSRM\",\n    name: \"MegaSerum\",\n    mint: \"MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"megaserum\",\n    },\n  },\n  TOMO: {\n    symbol: \"TOMO\",\n    name: \"TOMO\",\n    mint: \"GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tomochain\",\n    },\n  },\n  KARMA: {\n    symbol: \"KARMA\",\n    name: \"KARMA\",\n    mint: \"EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"karma-dao\",\n    },\n  },\n  LUA: {\n    symbol: \"LUA\",\n    name: \"LUA\",\n    mint: \"EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"lua-token\",\n    },\n  },\n  MATH: {\n    symbol: \"MATH\",\n    name: \"MATH\",\n    mint: \"GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"math\",\n    },\n  },\n  KEEP: {\n    symbol: \"KEEP\",\n    name: \"KEEP\",\n    mint: \"GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"keep-network\",\n    },\n  },\n  SWAG: {\n    symbol: \"SWAG\",\n    name: \"SWAG\",\n    mint: \"9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swag-finance\",\n    },\n  },\n  FIDA: {\n    symbol: \"FIDA\",\n    name: \"Bonfida\",\n    mint: \"EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bonfida\",\n    },\n  },\n  KIN: {\n    symbol: \"KIN\",\n    name: \"Kin\",\n    mint: \"kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6\",\n    decimals: 5,\n    extensions: {\n      coingeckoId: \"kin\",\n    },\n  },\n  MAPS: {\n    symbol: \"MAPS\",\n    name: \"MAPS\",\n    mint: \"MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"maps\",\n    },\n  },\n  OXY: {\n    symbol: \"OXY\",\n    name: \"Oxygen\",\n    mint: \"z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"oxygen\",\n    },\n  },\n  RAY: {\n    symbol: \"RAY\",\n    name: \"Raydium\",\n    mint: \"4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"raydium\",\n    },\n  },\n  xCOPE: {\n    symbol: \"xCOPE\",\n    name: \"xCOPE\",\n    mint: \"3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  COPE: {\n    symbol: \"COPE\",\n    name: \"Cope\",\n    mint: \"8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  STEP: {\n    symbol: \"STEP\",\n    name: \"Step Finance\",\n    mint: \"StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"step-finance\",\n    },\n  },\n  MEDIA: {\n    symbol: \"MEDIA\",\n    name: \"Media Network\",\n    mint: \"ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"media-network\",\n    },\n  },\n  ROPE: {\n    symbol: \"ROPE\",\n    name: \"Rope Token\",\n    mint: \"8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"rope-token\",\n    },\n  },\n  MER: {\n    symbol: \"MER\",\n    name: \"Mercurial\",\n    mint: \"MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mercurial\",\n    },\n  },\n  TULIP: {\n    symbol: \"TULIP\",\n    name: \"Tulip Protocol\",\n    mint: \"TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solfarm\",\n    },\n  },\n  SNY: {\n    symbol: \"SNY\",\n    name: \"SNY\",\n    mint: \"4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"synthetify-token\",\n    },\n  },\n  SLRS: {\n    symbol: \"SLRS\",\n    name: \"SLRS\",\n    mint: \"SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solrise-finance\",\n    },\n  },\n  WOO: {\n    symbol: \"WOO\",\n    name: \"WOO Network\",\n    mint: \"E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woo-network\",\n    },\n  },\n  BOP: {\n    symbol: \"BOP\",\n    name: \"Boring Protocol\",\n    mint: \"BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"boring-protocol\",\n    },\n  },\n  SAMO: {\n    symbol: \"SAMO\",\n    name: \"Samoyedcoin\",\n    mint: \"7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"samoyedcoin\",\n    },\n  },\n  renBTC: {\n    symbol: \"renBTC\",\n    name: \"renBTC\",\n    mint: \"CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"renbtc\",\n    },\n  },\n  renDOGE: {\n    symbol: \"renDOGE\",\n    name: \"renDOGE\",\n    mint: \"ArUkYE2XDKzqy77PRRGjo4wREWwqk6RXTfM9NeqzPvjU\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"rendoge\",\n    },\n  },\n  LIKE: {\n    symbol: \"LIKE\",\n    name: \"Only1\",\n    mint: \"3bRTivrVsitbmCTGtqwp7hxXPsybkjn4XLNtPsHqa3zR\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"only1\",\n    },\n  },\n  DXL: {\n    symbol: \"DXL\",\n    name: \"Dexlab\",\n    mint: \"GsNzxJfFn6zQdJGeYsupJWzUAm57Ba7335mfhWvFiE9Z\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"dexlab\",\n    },\n  },\n  mSOL: {\n    symbol: \"mSOL\",\n    name: \"Marinade staked SOL\",\n    mint: \"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"msol\",\n    },\n  },\n  PAI: {\n    symbol: \"PAI\",\n    name: \"Parrot USD\",\n    mint: \"Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-usd\",\n    },\n  },\n  PORT: {\n    symbol: \"PORT\",\n    name: \"Port Finance\",\n    mint: \"PoRTjZMPXb9T7dyU7tpLEZRQj7e6ssfAE62j2oQuc6y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"port-finance\",\n    },\n  },\n  MNGO: {\n    symbol: \"MNGO\",\n    name: \"Mango\",\n    mint: \"MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mango-markets\",\n    },\n  },\n  CRP: {\n    symbol: \"CRP\",\n    name: \"CropperFinance\",\n    mint: \"DubwWZNWiNGMMeeQHPnMATNj77YZPZSAz2WVR5WjLJqz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cropperfinance\",\n    },\n  },\n  ATLAS: {\n    symbol: \"ATLAS\",\n    name: \"Star Atlas\",\n    mint: \"ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas\",\n    },\n  },\n  POLIS: {\n    symbol: \"POLIS\",\n    name: \"Star Atlas DAO\",\n    mint: \"poLisWXnNRwC6oBu1vHiuKQzFjGL4XDSu4g9qjz9qVk\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas-dao\",\n    },\n  },\n  GRAPE: {\n    symbol: \"GRAPE\",\n    name: \"Grape Protocol\",\n    mint: \"8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"grape-2\",\n    },\n  },\n  GENE: {\n    symbol: \"GENE\",\n    name: \"Genopets\",\n    mint: \"GENEtH5amGSi8kHAtQoezp1XEXwZJ8vcuePYnXdKrMYz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genopets\",\n    },\n  },\n  DFL: {\n    symbol: \"DFL\",\n    name: \"DeFi Land\",\n    mint: \"DFL1zNkaGPWm1BqAVqRjCZvHmwTFrEaJtbzJWgseoNJh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"defi-land\",\n    },\n  },\n  CHEEMS: {\n    symbol: \"CHEEMS\",\n    name: \"Cheems\",\n    mint: \"3FoUAsGDbvTD6YZ4wVKJgTB76onJUKz7GPEBNiR5b8wc\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"cheems\",\n    },\n  },\n  stSOL: {\n    symbol: \"stSOL\",\n    name: \"Lido Staked SOL\",\n    mint: \"7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"lido-staked-sol\",\n    },\n  },\n  LARIX: {\n    symbol: \"LARIX\",\n    name: \"Larix\",\n    mint: \"Lrxqnh6ZHKbGy3dcrCED43nsoLkM1LTzU2jRfWe8qUC\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"larix\",\n    },\n  },\n  RIN: {\n    symbol: \"RIN\",\n    name: \"Aldrin\",\n    mint: \"E5ndSkaB17Dm7CsD22dvcjfrYSDLCxFcMd6z8ddCk5wp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aldrin\",\n    },\n  },\n  APEX: {\n    symbol: \"APEX\",\n    name: \"ApeXit Finance\",\n    mint: \"51tMb3zBKDiQhNwGqpgwbavaGH54mk8fXFzxTc1xnasg\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"apexit-finance\",\n    },\n  },\n  MNDE: {\n    symbol: \"MNDE\",\n    name: \"Marinade\",\n    mint: \"MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"marinade\",\n    },\n  },\n  LIQ: {\n    symbol: \"LIQ\",\n    name: \"LIQ Protocol\",\n    mint: \"4wjPQJ6PrkC4dHhYghwJzGBVP78DkBzA2U3kHoFNBuhj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"liq-protocol\",\n    },\n  },\n  WAG: {\n    symbol: \"WAG\",\n    name: \"Waggle Network\",\n    mint: \"5tN42n9vMi6ubp67Uy4NnmM5DMZYN8aS8GeB3bEDHr6E\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"waggle-network\",\n    },\n  },\n  wLDO: {\n    symbol: \"wLDO\",\n    name: \"wLDO\",\n    mint: \"HZRCwxP2Vq9PCpPXooayhJ2bxTpo5xfpQrwB1svh332p\",\n    decimals: 8,\n    extensions: {},\n  },\n  SLIM: {\n    symbol: \"SLIM\",\n    name: \"Solanium\",\n    mint: \"xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solanium\",\n    },\n  },\n  PRT: {\n    symbol: \"PRT\",\n    name: \"Parrot Protocol\",\n    mint: \"PRT88RkA4Kg5z7pKnezeNH4mafTvtQdfFgpQTGRjz44\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-protocol\",\n    },\n  },\n  SBR: {\n    symbol: \"SBR\",\n    name: \"SBR\",\n    mint: \"Saber2gLauYim4Mvftnrasomsv6NvAuncvMEZwcLpD1\",\n    decimals: 6,\n    extensions: {},\n  },\n  FAB: {\n    symbol: \"FAB\",\n    name: \"Fabric\",\n    mint: \"EdAhkbj5nF9sRM7XN7ewuW8C9XEUMs8P7cnoQ57SYE96\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"fabric\",\n    },\n  },\n  ABR: {\n    symbol: \"ABR\",\n    name: \"Allbridge\",\n    mint: \"a11bdAAuV8iB2fu7X6AxAvDTo1QZ8FXB3kk5eecdasp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"allbridge\",\n    },\n  },\n  IVN: {\n    symbol: \"IVN\",\n    name: \"Investin\",\n    mint: \"iVNcrNE9BRZBC9Aqf753iZiZfbszeAVUoikgT9yvr2a\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"investin\",\n    },\n  },\n  CYS: {\n    symbol: \"CYS\",\n    name: \"Cyclos\",\n    mint: \"BRLsMczKuaR5w9vSubF4j8HwEGGprVAyyVgS4EX7DKEg\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cyclos\",\n    },\n  },\n  FRKT: {\n    symbol: \"FRKT\",\n    name: \"FRAKT Token\",\n    mint: \"ErGB9xa24Szxbk1M28u2Tx8rKPqzL6BroNkkzk5rG4zj\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"frakt-token\",\n    },\n  },\n  AURY: {\n    symbol: \"AURY\",\n    name: \"Aurory\",\n    mint: \"AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aurory\",\n    },\n  },\n  SYP: {\n    symbol: \"SYP\",\n    name: \"Sypool\",\n    mint: \"FnKE9n6aGjQoNWRBZXy4RW6LZVao7qwBonUbiD7edUmZ\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sypool\",\n    },\n  },\n  WOOF: {\n    symbol: \"WOOF\",\n    name: \"WOOF\",\n    mint: \"9nEqaUcb16sQ3Tn1psbkWqyhPdLmfHWjKGymREjsAgTE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woof-token\",\n    },\n  },\n  ORCA: {\n    symbol: \"ORCA\",\n    name: \"Orca\",\n    mint: \"orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"orca\",\n    },\n  },\n  SLND: {\n    symbol: \"SLND\",\n    name: \"Solend\",\n    mint: \"SLNDpmoWTVADgEdndyvWzroNL7zSi1dF9PC3xHGtPwp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solend\",\n    },\n  },\n  weWETH: {\n    symbol: \"weWETH\",\n    name: \"weWETH\",\n    mint: \"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\",\n    decimals: 8,\n    extensions: {},\n  },\n  weUNI: {\n    symbol: \"weUNI\",\n    name: \"weUNI\",\n    mint: \"8FU95xFJhUUkyyCLU13HSzDLs7oC4QZdXQHL6SCeab36\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSUSHI: {\n    symbol: \"weSUSHI\",\n    name: \"weSUSHI\",\n    mint: \"ChVzxWRmrTeSgwd3Ui3UumcN8KX7VK3WaD4KGeSKpypj\",\n    decimals: 8,\n    extensions: {},\n  },\n  GOFX: {\n    symbol: \"GOFX\",\n    name: \"GooseFX\",\n    mint: \"GFX1ZjR2P15tmrSwow6FjyDYcEkoFb4p4gJCpLBjaxHD\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"goosefx\",\n    },\n  },\n  IN: {\n    symbol: \"IN\",\n    name: \"Invictus\",\n    mint: \"inL8PMVd6iiW3RCBJnr5AsrRN6nqr4BTrcNuQWQSkvY\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"invictus\",\n    },\n  },\n  weDYDX: {\n    symbol: \"weDYDX\",\n    name: \"weDYDX\",\n    mint: \"4Hx6Bj56eGyw8EJrrheM6LBQAvVYRikYCWsALeTrwyRU\",\n    decimals: 8,\n    extensions: {},\n  },\n  STARS: {\n    symbol: \"STARS\",\n    name: \"StarLaunch\",\n    mint: \"HCgybxq5Upy8Mccihrp7EsmwwFqYZtrHrsmsKwtGXLgW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"starlaunch\",\n    },\n  },\n  weAXS: {\n    symbol: \"weAXS\",\n    name: \"weAXS\",\n    mint: \"HysWcbHiYY9888pHbaqhwLYZQeZrcQMXKQWRqS7zcPK5\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSHIB: {\n    symbol: \"weSHIB\",\n    name: \"weSHIB\",\n    mint: \"CiKu4eHsVrc1eueVQeHn7qhXTcVu95gSQmBpX4utjL9z\",\n    decimals: 8,\n    extensions: {},\n  },\n  OXS: {\n    symbol: \"OXS\",\n    name: \"Oxbull Solana\",\n    mint: \"4TGxgCSJQx2GQk9oHZ8dC5m3JNXTYZHjXumKAW3vLnNx\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"oxbull-solana\",\n    },\n  },\n  CWAR: {\n    symbol: \"CWAR\",\n    name: \"Cryowar\",\n    mint: \"HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cryowar-token\",\n    },\n  },\n  UPS: {\n    symbol: \"UPS\",\n    name: \"UPFI Network\",\n    mint: \"EwJN2GqUGXXzYmoAciwuABtorHczTA5LqbukKXV1viH7\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"upfi-network\",\n    },\n  },\n  weSAND: {\n    symbol: \"weSAND\",\n    name: \"weSAND\",\n    mint: \"49c7WuCZkQgc3M4qH8WuEUNXfgwupZf1xqWkDQ7gjRGt\",\n    decimals: 8,\n    extensions: {},\n  },\n  weMANA: {\n    symbol: \"weMANA\",\n    name: \"weMANA\",\n    mint: \"7dgHoN8wBZCc5wbnQ2C47TDnBMAxG4Q5L3KjP67z8kNi\",\n    decimals: 8,\n    extensions: {},\n  },\n  CAVE: {\n    symbol: \"CAVE\",\n    name: \"Crypto Cavemen\",\n    mint: \"4SZjjNABoqhbd4hnapbvoEPEqT8mnNkfbEoAwALf1V8t\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cave\",\n    },\n  },\n  JSOL: {\n    symbol: \"JSOL\",\n    name: \"JPool\",\n    mint: \"7Q2afV64in6N6SeZsAAB81TJzwDoD6zpqmHkzi9Dcavn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"jpool\",\n    },\n  },\n  APT: {\n    symbol: \"APT\",\n    name: \"Apricot\",\n    mint: \"APTtJyaRX5yGTsJU522N4VYWg3vCvSb65eam5GrPT5Rt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"apricot\",\n    },\n  },\n  SONAR: {\n    symbol: \"SONAR\",\n    name: \"SonarWatch\",\n    mint: \"sonarX4VtVkQemriJeLm6CKeW3GDMyiBnnAEMw1MRAE\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sonarwatch\",\n    },\n  },\n  SHILL: {\n    symbol: \"SHILL\",\n    name: \"SHILL Token\",\n    mint: \"6cVgJUqo4nmvQpbgrDZwyfd6RwWw5bfnCamS3M9N1fd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"shill-token\",\n    },\n  },\n  TTT: {\n    symbol: \"TTT\",\n    name: \"TabTrader\",\n    mint: \"FNFKRV3V8DtA3gVJN6UshMiLGYA8izxFwkNWmJbFjmRj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tabtrader\",\n    },\n  },\n  BOKU: {\n    symbol: \"BOKU\",\n    name: \"Boryoku Dragonz\",\n    mint: \"CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"boku\",\n    },\n  },\n  MIMO: {\n    symbol: \"MIMO\",\n    name: \"Million Monke\",\n    mint: \"9TE7ebz1dsFo1uQ2T4oYAKSm39Y6fWuHrd6Uk6XaiD16\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"million-monke\",\n    },\n  },\n  wbWBNB: {\n    symbol: \"wbWBNB\",\n    name: \"wbWBNB\",\n    mint: \"9gP2kCy3wA1ctvYWQk75guqXuHfrEomqydHLtcTCqiLa\",\n    decimals: 8,\n    extensions: {},\n  },\n  wePEOPLE: {\n    symbol: \"wePEOPLE\",\n    name: \"wePEOPLE\",\n    mint: \"CobcsUrt3p91FwvULYKorQejgsm5HoQdv5T8RUZ6PnLA\",\n    decimals: 8,\n    extensions: {},\n  },\n  XTAG: {\n    symbol: \"XTAG\",\n    name: \"xHashtag\",\n    mint: \"5gs8nf4wojB5EXgDUWNLwXpknzgV2YWDhveAeBZpVLbp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"xhashtag\",\n    },\n  },\n  KKO: {\n    symbol: \"KKO\",\n    name: \"Kineko\",\n    mint: \"kiNeKo77w1WBEzFFCXrTDRWGRWGP8yHvKC9rX6dqjQh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"kineko\",\n    },\n  },\n  VI: {\n    symbol: \"VI\",\n    name: \"Vybit\",\n    mint: \"7zBWymxbZt7PVHQzfi3i85frc1YRiQc23K7bh3gos8ZC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"vybit\",\n    },\n  },\n  SOLC: {\n    symbol: \"SOLC\",\n    name: \"Solcubator\",\n    mint: \"Bx1fDtvTN6NvE4kjdPHQXtmGSg582bZx9fGy4DQNMmAT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solcubator\",\n    },\n  },\n  STR: {\n    symbol: \"STR\",\n    name: \"Solster\",\n    mint: \"9zoqdwEBKWEi9G5Ze8BSkdmppxGgVv1Kw4LuigDiNr9m\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solster\",\n    },\n  },\n  SPWN: {\n    symbol: \"SPWN\",\n    name: \"Bitspawn\",\n    mint: \"5U9QqCPhqXAJcEv9uyzFJd5zhN93vuPk1aNNkXnUfPnt\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"bitspawn\",\n    },\n  },\n  ISOLA: {\n    symbol: \"ISOLA\",\n    name: \"Intersola\",\n    mint: \"333iHoRM2Awhf9uVZtSyTfU8AekdGrgQePZsKMFPgKmS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"intersola\",\n    },\n  },\n  RUN: {\n    symbol: \"RUN\",\n    name: \"Run\",\n    mint: \"6F9XriABHfWhit6zmMUYAQBSy6XK5VF1cHXuW5LDpRtC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"run\",\n    },\n  },\n  REAL: {\n    symbol: \"REAL\",\n    name: \"Realy Metaverse\",\n    mint: \"AD27ov5fVU2XzwsbvnFvb1JpCBaCB5dRXrczV9CqSVGb\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"realy-metaverse\",\n    },\n  },\n  CRWNY: {\n    symbol: \"CRWNY\",\n    name: \"CRWNY\",\n    mint: \"CRWNYkqdgvhGGae9CKfNka58j6QQkaD5bLhKXvUYqnc1\",\n    decimals: 6,\n    extensions: {},\n  },\n  BLOCK: {\n    symbol: \"BLOCK\",\n    name: \"Blockasset\",\n    mint: \"NFTUkR4u7wKxy9QLaX2TGvd9oZSWoMo4jqSJqdMb7Nk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"blockasset\",\n    },\n  },\n  SOLAR: {\n    symbol: \"SOLAR\",\n    name: \"Solar\",\n    mint: \"2wmKXX1xsxLfrvjEPrt2UHiqj8Gbzwxvffr9qmNjsw8g\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solar\",\n    },\n  },\n  BASIS: {\n    symbol: \"BASIS\",\n    name: \"basis.markets\",\n    mint: \"Basis9oJw9j8cw53oMV7iqsgo6ihi9ALw4QR31rcjUJa\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"basis-markets\",\n    },\n  },\n  SOLX: {\n    symbol: \"SOLX\",\n    name: \"Soldex\",\n    mint: \"CH74tuRLTYcxG7qNJCsV9rghfLXJCQJbsu7i52a8F1Gn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"soldex\",\n    },\n  },\n  CHICKS: {\n    symbol: \"CHICKS\",\n    name: \"SolChicks Token\",\n    mint: \"cxxShYRVcepDudXhe7U62QHvw8uBJoKFifmzggGKVC2\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solchicks-token\",\n    },\n  },\n  GST: {\n    symbol: \"GST\",\n    name: \"GST\",\n    mint: \"AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"gst\",\n    },\n  },\n  MBS: {\n    symbol: \"MBS\",\n    name: \"MonkeyBall\",\n    mint: \"Fm9rHUTF5v3hwMLbStjZXqNBBoZyGriQaFM6sTFz3K8A\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"monkeyball\",\n    },\n  },\n  PRISM: {\n    symbol: \"PRISM\",\n    name: \"Prism\",\n    mint: \"PRSMNsEPqhGVCH1TtWiJqPjJyh2cKrLostPZTNy1o5x\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"prism\",\n    },\n  },\n  MEAN: {\n    symbol: \"MEAN\",\n    name: \"Meanfi\",\n    mint: \"MEANeD3XDdUmNMsRGjASkSWdC8prLYsoRJ61pPeHctD\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"meanfi\",\n    },\n  },\n  TINY: {\n    symbol: \"TINY\",\n    name: \"Tiny Colony\",\n    mint: \"HKfs24UEDQpHS5hUyKYkHd9q7GY5UQ679q2bokeL2whu\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tiny-colony\",\n    },\n  },\n  SHDW: {\n    symbol: \"SHDW\",\n    name: \"GenesysGo Shadow\",\n    mint: \"SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genesysgo-shadow\",\n    },\n  },\n  SCY: {\n    symbol: \"SCY\",\n    name: \"Synchrony\",\n    mint: \"SCYfrGCw8aDiqdgcpdGjV6jp4UVVQLuphxTDLNWu36f\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"synchrony\",\n    },\n  },\n  SLC: {\n    symbol: \"SLC\",\n    name: \"Solice\",\n    mint: \"METAmTMXwdb8gYzyCPfXXFmZZw4rUsXX58PNsDg7zjL\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solice\",\n    },\n  },\n};\n\nexport const MAINNET_LP_TOKENS: LpTokens = {\n  FIDA_RAY_V4: {\n    symbol: \"FIDA-RAY\",\n    name: \"FIDA-RAY V4 LP\",\n    mint: \"DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv\",\n\n    base: MAINNET_SPL_TOKENS.FIDA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.FIDA.decimals,\n\n    version: 4,\n  },\n  OXY_RAY_V4: {\n    symbol: \"OXY-RAY\",\n    name: \"OXY-RAY V4 LP\",\n    mint: \"FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb\",\n\n    base: MAINNET_SPL_TOKENS.OXY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.OXY.decimals,\n\n    version: 4,\n  },\n  MAPS_RAY_V4: {\n    symbol: \"MAPS-RAY\",\n    name: \"MAPS-RAY V4 LP\",\n    mint: \"CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP\",\n\n    base: MAINNET_SPL_TOKENS.MAPS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MAPS.decimals,\n\n    version: 4,\n  },\n  KIN_RAY_V4: {\n    symbol: \"KIN-RAY\",\n    name: \"KIN-RAY V4 LP\",\n    mint: \"CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW\",\n\n    base: MAINNET_SPL_TOKENS.KIN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    // mistake, a special one\n    decimals: 6,\n\n    version: 4,\n  },\n  RAY_USDT_V4: {\n    symbol: \"RAY-USDT\",\n    name: \"RAY-USDT V4 LP\",\n    mint: \"C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  SOL_USDC_V4: {\n    symbol: \"SOL-USDC\",\n    name: \"SOL-USDC V4 LP\",\n    mint: \"8HoQnePLqPj4M7PUDzfw8e3Ymdwgc7NLGnaTUapubyvu\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDC_V4: {\n    symbol: \"YFI-USDC\",\n    name: \"YFI-USDC V4 LP\",\n    mint: \"865j7iMmRRycSYUXzJ33ZcvLiX9JHvaLidasCyUyKaRE\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDC_V4: {\n    symbol: \"SRM-USDC\",\n    name: \"SRM-USDC V4 LP\",\n    mint: \"9XnZd82j34KxNLgQfz29jGbYdxsYznTWRpvZE3SRE7JG\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDC_V4: {\n    symbol: \"FTT-USDC\",\n    name: \"FTT-USDC V4 LP\",\n    mint: \"75dCoKfUHLUuZ4qEh46ovsxfgWhB4icc3SintzWRedT9\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDC_V4: {\n    symbol: \"BTC-USDC\",\n    name: \"BTC-USDC V4 LP\",\n    mint: \"2hMdRdVWZqetQsaHG8kQjdZinEMBz75vsoWTCob1ijXu\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDC_V4: {\n    symbol: \"SUSHI-USDC\",\n    name: \"SUSHI-USDC V4 LP\",\n    mint: \"2QVjeR9d2PbSf8em8NE8zWd8RYHjFtucDUdDgdbDD2h2\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDC_V4: {\n    symbol: \"TOMO-USDC\",\n    name: \"TOMO-USDC V4 LP\",\n    mint: \"CHyUpQFeW456zcr5XEh4RZiibH8Dzocs6Wbgz9aWpXnQ\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDC_V4: {\n    symbol: \"LINK-USDC\",\n    name: \"LINK-USDC V4 LP\",\n    mint: \"BqjoYjqKrXtfBKXeaWeAT5sYCy7wsAYf3XjgDWsHSBRs\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDC_V4: {\n    symbol: \"ETH-USDC\",\n    name: \"ETH-USDC V4 LP\",\n    mint: \"13PoKid6cZop4sj2GfoBeujnGfthUbTERdE5tpLCDLEY\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  xCOPE_USDC_V4: {\n    symbol: \"xCOPE-USDC\",\n    name: \"xCOPE-USDC V4 LP\",\n    mint: \"2Vyyeuyd15Gp8aH6uKE72c4hxc8TVSLibxDP9vzspQWG\",\n\n    base: MAINNET_SPL_TOKENS.xCOPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.xCOPE.decimals,\n\n    version: 4,\n  },\n  SOL_USDT_V4: {\n    symbol: \"SOL-USDT\",\n    name: \"SOL-USDT V4 LP\",\n    mint: \"Epm4KfTj4DMrvqn6Bwg2Tr2N8vhQuNbuK8bESFp4k33K\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDT_V4: {\n    symbol: \"YFI-USDT\",\n    name: \"YFI-USDT V4 LP\",\n    mint: \"FA1i7fej1pAbQbnY8NbyYUsTrWcasTyipKreDgy1Mgku\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDT_V4: {\n    symbol: \"SRM-USDT\",\n    name: \"SRM-USDT V4 LP\",\n    mint: \"HYSAu42BFejBS77jZAZdNAWa3iVcbSRJSzp3wtqCbWwv\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDT_V4: {\n    symbol: \"FTT-USDT\",\n    name: \"FTT-USDT V4 LP\",\n    mint: \"2cTCiUnect5Lap2sk19xLby7aajNDYseFhC9Pigou11z\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDT_V4: {\n    symbol: \"BTC-USDT\",\n    name: \"BTC-USDT V4 LP\",\n    mint: \"DgGuvR9GSHimopo3Gc7gfkbKamLKrdyzWkq5yqA6LqYS\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDT_V4: {\n    symbol: \"SUSHI-USDT\",\n    name: \"SUSHI-USDT V4 LP\",\n    mint: \"Ba26poEYDy6P2o95AJUsewXgZ8DM9BCsmnU9hmC9i4Ki\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDT_V4: {\n    symbol: \"TOMO-USDT\",\n    name: \"TOMO-USDT V4 LP\",\n    mint: \"D3iGro1vn6PWJXo9QAPj3dfta6dKkHHnmiiym2EfsAmi\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDT_V4: {\n    symbol: \"LINK-USDT\",\n    name: \"LINK-USDT V4 LP\",\n    mint: \"Dr12Sgt9gkY8WU5tRkgZf1TkVWJbvjYuPAhR3aDCwiiX\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDT_V4: {\n    symbol: \"ETH-USDT\",\n    name: \"ETH-USDT V4 LP\",\n    mint: \"nPrB78ETY8661fUgohpuVusNCZnedYCgghzRJzxWnVb\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  YFI_SRM_V4: {\n    symbol: \"YFI-SRM\",\n    name: \"YFI-SRM V4 LP\",\n    mint: \"EGJht91R7dKpCj8wzALkjmNdUUUcQgodqWCYweyKcRcV\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  FTT_SRM_V4: {\n    symbol: \"FTT-SRM\",\n    name: \"FTT-SRM V4 LP\",\n    mint: \"AsDuPg9MgPtt3jfoyctUCUgsvwqAN6RZPftqoeiPDefM\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_SRM_V4: {\n    symbol: \"BTC-SRM\",\n    name: \"BTC-SRM V4 LP\",\n    mint: \"AGHQxXb3GSzeiLTcLtXMS2D5GGDZxsB2fZYZxSB5weqB\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_SRM_V4: {\n    symbol: \"SUSHI-SRM\",\n    name: \"SUSHI-SRM V4 LP\",\n    mint: \"3HYhUnUdV67j1vn8fu7ExuVGy5dJozHEyWvqEstDbWwE\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_SRM_V4: {\n    symbol: \"TOMO-SRM\",\n    name: \"TOMO-SRM V4 LP\",\n    mint: \"GgH9RnKrQpaMQeqmdbMvs5oo1A24hERQ9wuY2pSkeG7x\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_SRM_V4: {\n    symbol: \"LINK-SRM\",\n    name: \"LINK-SRM V4 LP\",\n    mint: \"GXN6yJv12o18skTmJXaeFXZVY1iqR18CHsmCT8VVCmDD\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_SRM_V4: {\n    symbol: \"ETH-SRM\",\n    name: \"ETH-SRM V4 LP\",\n    mint: \"9VoY3VERETuc2FoadMSYYizF26mJinY514ZpEzkHMtwG\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  SRM_SOL_V4: {\n    symbol: \"SRM-SOL\",\n    name: \"SRM-SOL V4 LP\",\n    mint: \"AKJHspCwDhABucCxNLXUSfEzb7Ny62RqFtC9uNjJi4fq\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  STEP_USDC_V4: {\n    symbol: \"STEP-USDC\",\n    name: \"STEP-USDC V4 LP\",\n    mint: \"3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC\",\n\n    base: MAINNET_SPL_TOKENS.STEP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STEP.decimals,\n\n    version: 4,\n  },\n  MEDIA_USDC_V4: {\n    symbol: \"MEDIA-USDC\",\n    name: \"MEDIA-USDC V4 LP\",\n    mint: \"A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  ROPE_USDC_V4: {\n    symbol: \"ROPE-USDC\",\n    name: \"ROPE-USDC V4 LP\",\n    mint: \"Cq4HyW5xia37tKejPF2XfZeXQoPYW6KfbPvxvw5eRoUE\",\n\n    base: MAINNET_SPL_TOKENS.ROPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ROPE.decimals,\n\n    version: 4,\n  },\n  MER_USDC_V4: {\n    symbol: \"MER-USDC\",\n    name: \"MER-USDC V4 LP\",\n    mint: \"3H9NxvaZoxMZZDZcbBDdWMKbrfNj7PCF5sbRwDr7SdDW\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  COPE_USDC_V4: {\n    symbol: \"COPE-USDC\",\n    name: \"COPE-USDC V4 LP\",\n    mint: \"Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ALEPH_USDC_V4: {\n    symbol: \"ALEPH-USDC\",\n    name: \"ALEPH-USDC V4 LP\",\n    mint: \"iUDasAP2nXm5wvTukAHEKSdSXn8vQkRtaiShs9ceGB7\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_USDC_V4: {\n    symbol: \"TULIP-USDC\",\n    name: \"TULIP-USDC V4 LP\",\n    mint: \"2doeZGLJyACtaG9DCUyqMLtswesfje1hjNA11hMdj6YU\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  WOO_USDC_V4: {\n    symbol: \"WOO-USDC\",\n    name: \"WOO-USDC V4 LP\",\n    mint: \"7cu42ao8Jgrd5A3y3bNQsCxq5poyGZNmTydkGfJYQfzh\",\n\n    base: MAINNET_SPL_TOKENS.WOO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOO.decimals,\n\n    version: 4,\n  },\n  SNY_USDC_V4: {\n    symbol: \"SNY-USDC\",\n    name: \"SNY-USDC V4 LP\",\n    mint: \"G8qcfeFqxwbCqpxv5LpLWxUCd1PyMB5nWb5e5YyxLMKg\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  BOP_RAY_V4: {\n    symbol: \"BOP-RAY\",\n    name: \"BOP-RAY V4 LP\",\n    mint: \"9nQPYJvysyfnXhQ6nkK5V7sZG26hmDgusfdNQijRk5LD\",\n\n    base: MAINNET_SPL_TOKENS.BOP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.BOP.decimals,\n\n    version: 4,\n  },\n  SLRS_USDC_V4: {\n    symbol: \"SLRS-USDC\",\n    name: \"SLRS-USDC V4 LP\",\n    mint: \"2Xxbm1hdv5wPeen5ponDSMT3VqhGMTQ7mH9stNXm9shU\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  SAMO_RAY_V4: {\n    symbol: \"SAMO-RAY\",\n    name: \"SAMO-RAY V4 LP\",\n    mint: \"HwzkXyX8B45LsaHXwY8su92NoRBS5GQC32HzjQRDqPnr\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  renBTC_USDC_V4: {\n    symbol: \"renBTC-USDC\",\n    name: \"renBTC-USDC V4 LP\",\n    mint: \"CTEpsih91ZLo5gunvryLpJ3pzMjmt5jbS6AnSQrzYw7V\",\n\n    base: MAINNET_SPL_TOKENS.renBTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renBTC.decimals,\n\n    version: 4,\n  },\n  renDOGE_USDC_V4: {\n    symbol: \"renDOGE-USDC\",\n    name: \"renDOGE-USDC V4 LP\",\n    mint: \"Hb8KnZNKvRxu7pgMRWJgoMSMcepfvNiBFFDDrdf9o3wA\",\n\n    base: MAINNET_SPL_TOKENS.renDOGE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renDOGE.decimals,\n\n    version: 4,\n  },\n  RAY_USDC_V4: {\n    symbol: \"RAY-USDC\",\n    name: \"RAY-USDC V4 LP\",\n    mint: \"FbC6K13MzHvN42bXrtGaWsvZY9fxrackRSZcBGfjPc7m\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SRM_V4: {\n    symbol: \"RAY-SRM\",\n    name: \"RAY-SRM V4 LP\",\n    mint: \"7P5Thr9Egi2rvMmEuQkLn8x8e8Qro7u2U7yLD2tU2Hbe\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_ETH_V4: {\n    symbol: \"RAY-ETH\",\n    name: \"RAY-ETH V4 LP\",\n    mint: \"mjQH33MqZv5aKAbKHi8dG3g3qXeRQqq1GFcXceZkNSr\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.ETH,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SOL_V4: {\n    symbol: \"RAY-SOL\",\n    name: \"RAY-SOL V4 LP\",\n    mint: \"89ZKE4aoyfLBe2RuV6jM3JGNhaV18Nxh8eNtjRcndBip\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  DXL_USDC_V4: {\n    symbol: \"DXL-USDC\",\n    name: \"DXL-USDC V4 LP\",\n    mint: \"4HFaSvfgskipvrzT1exoVKsUZ174JyExEsA8bDfsAdY5\",\n\n    base: MAINNET_SPL_TOKENS.DXL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DXL.decimals,\n\n    version: 4,\n  },\n  LIKE_USDC_V4: {\n    symbol: \"LIKE-USDC\",\n    name: \"LIKE-USDC V4 LP\",\n    mint: \"cjZmbt8sJgaoyWYUttomAu5LJYU44ZrcKTbzTSEPDVw\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  mSOL_USDC_V4: {\n    symbol: \"mSOL-USDC\",\n    name: \"mSOL-USDC V4 LP\",\n    mint: \"4xTpJ4p76bAeggXoYywpCCNKfJspbuRzZ79R7pRhbqSf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  mSOL_SOL_V4: {\n    symbol: \"mSOL-SOL\",\n    name: \"mSOL-SOL V4 LP\",\n    mint: \"5ijRoAHVgd5T5CNtK5KDRUBZ7Bffb69nktMj5n6ks6m4\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MER_PAI_V4: {\n    symbol: \"MER-PAI\",\n    name: \"MER-PAI V4 LP\",\n    mint: \"DU5RT2D9EviaSmX6Ta8MZwMm85HwSEqGMRdqUiuCGfmD\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.PAI,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  PORT_USDC_V4: {\n    symbol: \"PORT-USDC\",\n    name: \"PORT-USDC V4 LP\",\n    mint: \"9tmNtbUCrLS15qC4tEfr5NNeqcqpZ4uiGgi2vS5CLQBS\",\n\n    base: MAINNET_SPL_TOKENS.PORT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PORT.decimals,\n\n    version: 4,\n  },\n  MNGO_USDC_V4: {\n    symbol: \"MNGO-USDC\",\n    name: \"MNGO-USDC V4 LP\",\n    mint: \"DkiqCQ792n743xjWQVCbBUaVtkdiuvQeYndM53ReWnCC\",\n\n    base: MAINNET_SPL_TOKENS.MNGO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MNGO.decimals,\n\n    version: 4,\n  },\n  ATLAS_USDC_V4: {\n    symbol: \"ATLAS-USDC\",\n    name: \"ATLAS-USDC V4 LP\",\n    mint: \"9shGU9f1EsxAbiR567MYZ78WUiS6ZNCYbHe53WUULQ7n\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_USDC_V4: {\n    symbol: \"POLIS-USDC\",\n    name: \"POLIS-USDC V4 LP\",\n    mint: \"8MbKSBpyXs8fVneKgt71jfHrn5SWtX8n4wMLpiVfF9So\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ATLAS_RAY_V4: {\n    symbol: \"ATLAS-RAY\",\n    name: \"ATLAS-RAY V4 LP\",\n    mint: \"418MFhkaYQtbn529wmjLLqL6uKxDz7j4eZBaV1cobkyd\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_RAY_V4: {\n    symbol: \"POLIS-RAY\",\n    name: \"POLIS-RAY V4 LP\",\n    mint: \"9ysGKUH6WqzjQEUT4dxqYCUaFNVK9QFEa24pGzjFq8xg\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ALEPH_RAY_V4: {\n    symbol: \"ALEPH-RAY\",\n    name: \"ALEPH-RAY V4 LP\",\n    mint: \"n76skjqv4LirhdLok2zJELXNLdRpYDgVJQuQFbamscy\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_RAY_V4: {\n    symbol: \"TULIP-RAY\",\n    name: \"TULIP-RAY V4 LP\",\n    mint: \"3AZTviji5qduMG2s4FfWGR3SSQmNUCyx8ao6UKCPg3oJ\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  SLRS_RAY_V4: {\n    symbol: \"SLRS-RAY\",\n    name: \"SLRS-RAY V4 LP\",\n    mint: \"2pk78vsKT3jfJAcN2zbpMUnrR57SZrxHqaZYyFgp92mM\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  MER_RAY_V4: {\n    symbol: \"MER-RAY\",\n    name: \"MER-RAY V4 LP\",\n    mint: \"214hxy3AbKoaEKgqcg2aC1cP5R67cGGAyDEg5GDwC7Ub\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  MEDIA_RAY_V4: {\n    symbol: \"MEDIA-RAY\",\n    name: \"MEDIA-RAY V4 LP\",\n    mint: \"9Aseg5A1JD1yCiFFdDaNNxCiJ7XzrpZFmcEmLjXFdPaH\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  SNY_RAY_V4: {\n    symbol: \"SNY-RAY\",\n    name: \"SNY-RAY V4 LP\",\n    mint: \"2k4quTuuLUxrSEhFH99qcoZzvgvVEc3b5sz3xz3qstfS\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  LIKE_RAY_V4: {\n    symbol: \"LIKE-RAY\",\n    name: \"LIKE-RAY V4 LP\",\n    mint: \"7xqDycbFSCpUpzkYapFeyPJWPwEpV7zdWbYf2MVHTNjv\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  COPE_RAY_V4: {\n    symbol: \"COPE-RAY\",\n    name: \"COPE-RAY V4 LP\",\n    mint: \"A7GCVHA8NSsbdFscHdoNU41tL1TRKNmCH4K94CgcLK9F\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ETH_SOL_V4: {\n    symbol: \"ETH-SOL\",\n    name: \"ETH-SOL V4 LP\",\n    mint: \"GKfgC86iJoMjwAtcyiLu6nWnjggqUXsDQihXkP14fDez\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  stSOL_USDC_V4: {\n    symbol: \"stSOL-USDC\",\n    name: \"stSOL-USDC V4 LP\",\n    mint: \"HDUJMwYZkjUZre63xUeDhdCi8c6LgUDiBqxmP3QC3VPX\",\n\n    base: MAINNET_SPL_TOKENS.stSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.stSOL.decimals,\n\n    version: 4,\n  },\n  GRAPE_USDC_V4: {\n    symbol: \"GRAPE-USDC\",\n    name: \"GRAPE-USDC V4 LP\",\n    mint: \"A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt\",\n\n    base: MAINNET_SPL_TOKENS.GRAPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GRAPE.decimals,\n\n    version: 4,\n  },\n  LARIX_USDC_V4: {\n    symbol: \"LARIX-USDC\",\n    name: \"LARIX-USDC V4 LP\",\n    mint: \"7yieit4YsNsZ9CAK8H5ZEMvvk35kPEHHeXwp6naoWU9V\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  RIN_USDC_V4: {\n    symbol: \"RIN-USDC\",\n    name: \"RIN-USDC V4 LP\",\n    mint: \"GfCWfrZez7BDmCSEeMERVDVUaaM2TEreyYUgb2cpuS3w\",\n\n    base: MAINNET_SPL_TOKENS.RIN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RIN.decimals,\n\n    version: 4,\n  },\n  APEX_USDC_V4: {\n    symbol: \"APEX-USDC\",\n    name: \"APEX-USDC V4 LP\",\n    mint: \"444cVqYyDxJNo6FqiMb9qQWFUd7tYzFRdDuJRFrSAGnU\",\n\n    base: MAINNET_SPL_TOKENS.APEX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APEX.decimals,\n\n    version: 4,\n  },\n  mSOL_RAY_V4: {\n    symbol: \"mSOL-RAY\",\n    name: \"mSOL-RAY V4 LP\",\n    mint: \"De2EHBAdkgfc72DpShqDGG42cV3iDWh8wvvZdPsiEcqP\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MNDE_mSOL_V4: {\n    symbol: \"MNDE-mSOL\",\n    name: \"MNDE-mSOL V4 LP\",\n    mint: \"4bh8XCzTHSbqbWN8o1Jn4ueBdz1LvJFoEasN6K6CQ8Ny\",\n\n    base: MAINNET_SPL_TOKENS.MNDE,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.MNDE.decimals,\n\n    version: 4,\n  },\n  LARIX_RAY_V4: {\n    symbol: \"LARIX-RAY\",\n    name: \"LARIX-RAY V4 LP\",\n    mint: \"ZRDfSLgWGeaYSmhdPvFNKQQhDcYdZQaue2N8YDmHX4q\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  LIQ_USDC_V4: {\n    symbol: \"LIQ-USDC\",\n    name: \"LIQ-USDC V4 LP\",\n    mint: \"GWpD3eTfhJB5KDCcnE85dBQrjAk2CsrgDF9b52R9CrjV\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  WAG_USDC_V4: {\n    symbol: \"WAG-USDC\",\n    name: \"WAG-USDC V4 LP\",\n    mint: \"4yykyPugitUVRewNPXXCviRvxGfsfsRMoP32z3b6FmUC\",\n\n    base: MAINNET_SPL_TOKENS.WAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WAG.decimals,\n\n    version: 4,\n  },\n  ETH_mSOL_V4: {\n    symbol: \"ETH-mSOL\",\n    name: \"ETH-mSOL V4 LP\",\n    mint: \"HYv3grQfi8QbV7nG7EFgNK1aJSrsJ7HynXJKJVPLL2Uh\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  mSOL_USDT_V4: {\n    symbol: \"mSOL-USDT\",\n    name: \"mSOL-USDT V4 LP\",\n    mint: \"69NCmEW9mGpiWLjAcAWHq51k4ionJZmzgRfRT3wQaCCf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  BTC_mSOL_V4: {\n    symbol: \"BTC-mSOL\",\n    name: \"BTC-mSOL V4 LP\",\n    mint: \"92bcERNtUmuaJ6mwLSxYHZYSph37jdKxRdoYNxpcYNPp\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SLIM_SOL_V4: {\n    symbol: \"SLIM-SOL\",\n    name: \"SLIM-SOL V4 LP\",\n    mint: \"9X4EK8E59VAVi6ChnNvvd39m6Yg9RtkBbAPq1mDVJT57\",\n\n    base: MAINNET_SPL_TOKENS.SLIM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SLIM.decimals,\n\n    version: 4,\n  },\n  AURY_USDC_V4: {\n    symbol: \"AURY-USDC\",\n    name: \"AURY-USDC V4 LP\",\n    mint: \"Gub5dvTy4nzP82qpmpNkBxmRqjtqRddBTBqHSdNcf2oS\",\n\n    base: MAINNET_SPL_TOKENS.AURY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.AURY.decimals,\n\n    version: 4,\n  },\n  PRT_SOL_V4: {\n    symbol: \"PRT-SOL\",\n    name: \"PRT-SOL V4 LP\",\n    mint: \"EcJ8Wgwt1AzSPiDpVr6aaSur8TKAsNTPmmzRACeqT68Z\",\n\n    base: MAINNET_SPL_TOKENS.PRT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.PRT.decimals,\n\n    version: 4,\n  },\n  LIQ_RAY_V4: {\n    symbol: \"LIQ-RAY\",\n    name: \"LIQ-RAY V4 LP\",\n    mint: \"49YUsDrThJosHSagCn1F59Uc9NRxbr9thVrZikUnQDXy\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  SYP_SOL_V4: {\n    symbol: \"SYP-SOL\",\n    name: \"SYP-SOL V4 LP\",\n    mint: \"KHV6dfj2bDntzJ9z1S26cDfqWfUZdJRFmteLR6LxHwW\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_RAY_V4: {\n    symbol: \"SYP-RAY\",\n    name: \"SYP-RAY V4 LP\",\n    mint: \"FT2KZqxxM8F2h9pZtTF4PyjK88bM4YbuBzd7ZPwQ5wMB\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_USDC_V4: {\n    symbol: \"SYP-USDC\",\n    name: \"SYP-USDC V4 LP\",\n    mint: \"2xJGuLAivAR1WkARRA6zP1v4jaA9jV2Qis8JfMNvrVyZ\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  FAB_USDC_V4: {\n    symbol: \"FAB-USDC\",\n    name: \"FAB-USDC V4 LP\",\n    mint: \"5rTCvZq6BcApsC3VV1EEUuTJfaVd8uYhcGjwTy1By6P8\",\n\n    base: MAINNET_SPL_TOKENS.FAB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FAB.decimals,\n\n    version: 4,\n  },\n  WOOF_RAY_V4: {\n    symbol: \"WOOF-RAY\",\n    name: \"WOOF-RAY V4 LP\",\n    mint: \"H2FAnazDaGFutcmnrwDxhmdncR1Bd7GG4mhPCSUiamDX\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  WOOF_USDC_V4: {\n    symbol: \"WOOF-USDC\",\n    name: \"WOOF-USDC V4 LP\",\n    mint: \"EFSu5TMc1ijRevaYCxUkS7uGvbhsymDHEaTK3UVdNE3q\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  SLND_USDC_V4: {\n    symbol: \"SLND-USDC\",\n    name: \"SLND-USDC V4 LP\",\n    mint: \"EunE9uDh2cGsyJcsGuGKc6wte7kBn8iye2gzC4w2ePHn\",\n\n    base: MAINNET_SPL_TOKENS.SLND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLND.decimals,\n\n    version: 4,\n  },\n  FRKT_SOL_V4: {\n    symbol: \"FRKT-SOL\",\n    name: \"FRKT-SOL V4 LP\",\n    mint: \"HYUKXgpjaxMXHttyrFYtv3z2rdhZ1U9QDH8zEc8BooQC\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  weWETH_SOL_V4: {\n    symbol: \"weWETH-SOL\",\n    name: \"weWETH-SOL V4 LP\",\n    mint: \"3hbozt2Por7bcrGod8N7kEeJNMocFFjCJrQR16TQGBrE\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weWETH_USDC_V4: {\n    symbol: \"weWETH-USDC\",\n    name: \"weWETH-USDC V4 LP\",\n    mint: \"3529SBnMCDW3S3xQ52aABbRHo7PcHvpQA4no8J12L5eK\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weUNI_USDC_V4: {\n    symbol: \"weUNI-USDC\",\n    name: \"weUNI-USDC V4 LP\",\n    mint: \"EEC4QnT41py39QaYnzQnoYQEtDUDNa6Se8SBDgfPSN2a\",\n\n    base: MAINNET_SPL_TOKENS.weUNI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weUNI.decimals,\n\n    version: 4,\n  },\n  weSUSHI_USDC_V4: {\n    symbol: \"weSUSHI-USDC\",\n    name: \"weSUSHI-USDC V4 LP\",\n    mint: \"3wVrtQZsiDNp5yTPyfEzQHPU6iuJoMmpnWg6CTt4V8sR\",\n\n    base: MAINNET_SPL_TOKENS.weSUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSUSHI.decimals,\n\n    version: 4,\n  },\n  CYS_USDC_V4: {\n    symbol: \"CYS-USDC\",\n    name: \"CYS-USDC V4 LP\",\n    mint: \"GfV3QDzzdVUwCNSdfn6PjhmyJvjw18tn51RingWZYwk3\",\n\n    base: MAINNET_SPL_TOKENS.CYS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CYS.decimals,\n\n    version: 4,\n  },\n  SAMO_USDC_V4: {\n    symbol: \"SAMO-USDC\",\n    name: \"SAMO-USDC V4 LP\",\n    mint: \"B2PjGEP3vPf1999fUD14pYdxvSDRVBk43hxB2rgthwEY\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  ABR_USDC_V4: {\n    symbol: \"ABR-USDC\",\n    name: \"ABR-USDC V4 LP\",\n    mint: \"ECHfxkf5zjjZFTX95QfFahNyzG7feyEKcfTdjsdrMSGU\",\n\n    base: MAINNET_SPL_TOKENS.ABR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ABR.decimals,\n\n    version: 4,\n  },\n  IN_USDC_V4: {\n    symbol: \"IN-USDC\",\n    name: \"IN-USDC V4 LP\",\n    mint: \"GbmJtVgg9fRmmmjKUYGMZeSt8wZ47cDDXasg5Y3iF4kz\",\n\n    base: MAINNET_SPL_TOKENS.IN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.IN.decimals,\n\n    version: 4,\n  },\n  weDYDX_USDC_V4: {\n    symbol: \"weDYDX-USDC\",\n    name: \"weDYDX-USDC V4 LP\",\n    mint: \"BjkkMZnnzmgLqzGErzDbkk15ozv48iVKQuunpeM2Hqnk\",\n\n    base: MAINNET_SPL_TOKENS.weDYDX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weDYDX.decimals,\n\n    version: 4,\n  },\n  STARS_USDC_V4: {\n    symbol: \"STARS-USDC\",\n    name: \"STARS-USDC V4 LP\",\n    mint: \"FJ68q7NChhETcGVdinMbM2FF1Cy79dpmUi6HC83K55Hv\",\n\n    base: MAINNET_SPL_TOKENS.STARS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STARS.decimals,\n\n    version: 4,\n  },\n  weAXS_USDC_V4: {\n    symbol: \"weAXS-USDC\",\n    name: \"weAXS-USDC V4 LP\",\n    mint: \"6PSoJQ7myQ1BJtbQC6oiWR8HSecQGyoWsPYTZRJo2ci3\",\n\n    base: MAINNET_SPL_TOKENS.weAXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weAXS.decimals,\n\n    version: 4,\n  },\n  weSHIB_USDC_V4: {\n    symbol: \"weSHIB-USDC\",\n    name: \"weSHIB-USDC V4 LP\",\n    mint: \"AcjX5pmTMGSgxkdxc3r82r6WMKBvS6eQXXFz5ck5KKUa\",\n\n    base: MAINNET_SPL_TOKENS.weSHIB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSHIB.decimals,\n\n    version: 4,\n  },\n  SBR_USDC_V4: {\n    symbol: \"SBR-USDC\",\n    name: \"SBR-USDC V4 LP\",\n    mint: \"9FC8xTFRbgTpuZZYAYnZLxgnQ8r7FwfSBM1SWvGwgF7s\",\n\n    base: MAINNET_SPL_TOKENS.SBR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SBR.decimals,\n\n    version: 4,\n  },\n  OXS_USDC_V4: {\n    symbol: \"OXS-USDC\",\n    name: \"OXS-USDC V4 LP\",\n    mint: \"et9pdjWm97rbmsJoN183GkFV5qzTGru79GE1Zhe7NTU\",\n\n    base: MAINNET_SPL_TOKENS.OXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.OXS.decimals,\n\n    version: 4,\n  },\n  CWAR_USDC_V4: {\n    symbol: \"CWAR-USDC\",\n    name: \"CWAR-USDC V4 LP\",\n    mint: \"HjR23bxn2gtRDB2P1Tm3DLepAPPZgazsWJpLG9wqjnYR\",\n\n    base: MAINNET_SPL_TOKENS.CWAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CWAR.decimals,\n\n    version: 4,\n  },\n  UPS_USDC_V4: {\n    symbol: \"UPS-USDC\",\n    name: \"UPS-USDC V4 LP\",\n    mint: \"9hSUZdREEsbaYaKY4FouvXr7xyAqtpdHRDoYCb6Mb28a\",\n\n    base: MAINNET_SPL_TOKENS.UPS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.UPS.decimals,\n\n    version: 4,\n  },\n  weSAND_USDC_V4: {\n    symbol: \"weSAND-USDC\",\n    name: \"weSAND-USDC V4 LP\",\n    mint: \"3dADrQa7utyiCsaFeVk9r7oebW1WheowhKo5soBYKBVT\",\n\n    base: MAINNET_SPL_TOKENS.weSAND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSAND.decimals,\n\n    version: 4,\n  },\n  weMANA_USDC_V4: {\n    symbol: \"weMANA-USDC\",\n    name: \"weMANA-USDC V4 LP\",\n    mint: \"HpUkVAPRJ5zNRuJ1ZwMXEhbMHL3gSuPb2QuSER9YUd3a\",\n\n    base: MAINNET_SPL_TOKENS.weMANA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weMANA.decimals,\n\n    version: 4,\n  },\n  CAVE_USDC_V4: {\n    symbol: \"CAVE-USDC\",\n    name: \"CAVE-USDC V4 LP\",\n    mint: \"5Gba1k3fU7Vh7UtAiBmie9vhQNNq1JfEwgn1DPGZ7NKQ\",\n\n    base: MAINNET_SPL_TOKENS.CAVE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CAVE.decimals,\n\n    version: 4,\n  },\n  GENE_USDC_V4: {\n    symbol: \"GENE-USDC\",\n    name: \"GENE-USDC V4 LP\",\n    mint: \"7GKvfHEXenNiWYbJBKae89mdaMPr5gGMYwZmyC8gBNVG\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  GENE_RAY_V4: {\n    symbol: \"GENE-RAY\",\n    name: \"GENE-RAY V4 LP\",\n    mint: \"3HzXnc1qZ8mGqun18Ck3KA616XnZNqF1RWbgYE2nGRMA\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  APT_USDC_V4: {\n    symbol: \"APT-USDC\",\n    name: \"APT-USDC V4 LP\",\n    mint: \"Hk8mDAJFq4E9kF3DtNgPFwzbo5kbeiusNFJgWmo3LoQ5\",\n\n    base: MAINNET_SPL_TOKENS.APT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APT.decimals,\n\n    version: 4,\n  },\n  GOFX_USDC_V4: {\n    symbol: \"GOFX-USDC\",\n    name: \"GOFX-USDC V4 LP\",\n    mint: \"4svqAwrLPGRDCQuuieYTmtLXF75wiahjeK2rEN9tY1YL\",\n\n    base: MAINNET_SPL_TOKENS.GOFX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GOFX.decimals,\n\n    version: 4,\n  },\n  SONAR_USDC_V4: {\n    symbol: \"SONAR-USDC\",\n    name: \"SONAR-USDC V4 LP\",\n    mint: \"2tAcfqJ1YYjpGLqwh76kyNt9VaNFDd4fJySfH6SmWfKt\",\n\n    base: MAINNET_SPL_TOKENS.SONAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SONAR.decimals,\n\n    version: 4,\n  },\n  JSOL_SOL_V4: {\n    symbol: \"JSOL-SOL\",\n    name: \"JSOL-SOL V4 LP\",\n    mint: \"61z37rpHsU6d3Fq5sUjJ85K6tXGzkoYKDAG3kPJQNDRo\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  JSOL_USDC_V4: {\n    symbol: \"JSOL-USDC\",\n    name: \"JSOL-USDC V4 LP\",\n    mint: \"3JZqf2VPNxj1kDZQsfzC7myM6spsGQbGuFv1gVfdYosN\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  SHILL_USDC_V4: {\n    symbol: \"SHILL-USDC\",\n    name: \"SHILL-USDC V4 LP\",\n    mint: \"CnUhYBtQEbSBZ76bgxAouVCTCb8rofZzwerVF5z5LREJ\",\n\n    base: MAINNET_SPL_TOKENS.SHILL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SHILL.decimals,\n\n    version: 4,\n  },\n  DFL_USDC_V4: {\n    symbol: \"DFL-USDC\",\n    name: \"DFL-USDC V4 LP\",\n    mint: \"Fffijd6UVJdQeLVXhenS8YcsnMUdWJqpbBeH42LFkXgS\",\n\n    base: MAINNET_SPL_TOKENS.DFL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DFL.decimals,\n\n    version: 4,\n  },\n  BOKU_USDC_V4: {\n    symbol: \"BOKU-USDC\",\n    name: \"BOKU-USDC V4 LP\",\n    mint: \"8jjQn5Yagb6Nm2WGAxPW1bcGqrTWpg5adf6QukXEarcP\",\n\n    base: MAINNET_SPL_TOKENS.BOKU,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BOKU.decimals,\n\n    version: 4,\n  },\n  MIMO_SOL_V4: {\n    symbol: \"MIMO-SOL\",\n    name: \"MIMO-SOL V4 LP\",\n    mint: \"HUJ1opSk8AiPfDT47r7n4hTiK2EXgrR3Msy7T8q1BywS\",\n\n    base: MAINNET_SPL_TOKENS.MIMO,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.MIMO.decimals,\n\n    version: 4,\n  },\n  wbWBNB_USDC_V4: {\n    symbol: \"wbWBNB-USDC\",\n    name: \"wbWBNB-USDC V4 LP\",\n    mint: \"FEsEfEJJSfiMQcshUgZ5UigfytfGRQ3z5puyF6DXDp9C\",\n\n    base: MAINNET_SPL_TOKENS.wbWBNB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wbWBNB.decimals,\n\n    version: 4,\n  },\n  wePEOPLE_USDC_V4: {\n    symbol: \"wePEOPLE-USDC\",\n    name: \"wePEOPLE-USDC V4 LP\",\n    mint: \"3e5ZCKi4etorpV4pv1fSckP5iJD67xcUkx3RtFCZhbzD\",\n\n    base: MAINNET_SPL_TOKENS.wePEOPLE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wePEOPLE.decimals,\n\n    version: 4,\n  },\n  ISOLA_USDT_V4: {\n    symbol: \"ISOLA-USDT\",\n    name: \"ISOLA-USDT V4 LP\",\n    mint: \"H8s1wQsZpRK61pyLF3XwyQc6E8vNUnwRDhy3TBDCDENQ\",\n\n    base: MAINNET_SPL_TOKENS.ISOLA,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ISOLA.decimals,\n\n    version: 4,\n  },\n  SPWN_USDC_V4: {\n    symbol: \"SPWN-USDC\",\n    name: \"SPWN-USDC V4 LP\",\n    mint: \"B5uyCAQcX6nAjZypLgiivbEKabSptgUb8JK9tkaSnqdW\",\n\n    base: MAINNET_SPL_TOKENS.SPWN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SPWN.decimals,\n\n    version: 4,\n  },\n  STR_USDC_V4: {\n    symbol: \"STR-USDC\",\n    name: \"STR-USDC V4 LP\",\n    mint: \"8uDVKmVwNmbXHDB7rNKqtpcT9VAsFHTJ5pPYxjyoBbNg\",\n\n    base: MAINNET_SPL_TOKENS.STR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STR.decimals,\n\n    version: 4,\n  },\n  SOLC_USDT_V4: {\n    symbol: \"SOLC-USDT\",\n    name: \"SOLC-USDT V4 LP\",\n    mint: \"2g9JzTWycLzK4KEBBHsponAtZRee2ii63bRrJ8tefEyt\",\n\n    base: MAINNET_SPL_TOKENS.SOLC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SOLC.decimals,\n\n    version: 4,\n  },\n  VI_USDC_V4: {\n    symbol: \"VI-USDC\",\n    name: \"VI-USDC V4 LP\",\n    mint: \"3MwHyHCRfVqtH3ABFtdKXdY9dwemr9GGxQFaBkeq6NjY\",\n\n    base: MAINNET_SPL_TOKENS.VI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.VI.decimals,\n\n    version: 4,\n  },\n  KKO_USDC_V4: {\n    symbol: \"KKO-USDC\",\n    name: \"KKO-USDC V4 LP\",\n    mint: \"7xr1Doc1NiMWbUg99YVFqQSLfYXNzo6YvacXUsSgBMNW\",\n\n    base: MAINNET_SPL_TOKENS.KKO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.KKO.decimals,\n\n    version: 4,\n  },\n  XTAG_USDC_V4: {\n    symbol: \"XTAG-USDC\",\n    name: \"XTAG-USDC V4 LP\",\n    mint: \"GCEQbLg4ik5YJ4CMcbtuVqEc4sjLdSGy34rFk1CtGjdg\",\n\n    base: MAINNET_SPL_TOKENS.XTAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.XTAG.decimals,\n\n    version: 4,\n  },\n  TTT_USDC_V4: {\n    symbol: \"TTT-USDC\",\n    name: \"TTT-USDC V4 LP\",\n    mint: \"84fmrerHGohoRf4iLPDQ1KG4CjSjCRksYWGzjWfCRM8a\",\n\n    base: MAINNET_SPL_TOKENS.TTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TTT.decimals,\n\n    version: 4,\n  },\n  RUN_USDC_V4: {\n    symbol: \"RUN-USDC\",\n    name: \"RUN-USDC V4 LP\",\n    mint: \"CjTLvvKSQdEujcSzeZRYgk4w1DpuXBbMppLHaxZyz11Y\",\n\n    base: MAINNET_SPL_TOKENS.RUN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RUN.decimals,\n\n    version: 4,\n  },\n  CRWNY_USDC_V4: {\n    symbol: \"CRWNY-USDC\",\n    name: \"CRWNY-USDC V4 LP\",\n    mint: \"H3D9Gyi4frRLW6bS9vBthDVDJyzyRJ6XhhpP6PJGWaDC\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  CRWNY_RAY_V4: {\n    symbol: \"CRWNY-RAY\",\n    name: \"CRWNY-RAY V4 LP\",\n    mint: \"5Cz9wGStNjiUg81q8t6sJJeckuT2C14CYSfyQbtYirSX\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  BLOCK_USDC_V4: {\n    symbol: \"BLOCK-USDC\",\n    name: \"BLOCK-USDC V4 LP\",\n    mint: \"8i44Y23GkkwDYZ5iSkVEqmrXUfwNmwo9grguTDWKM8wg\",\n\n    base: MAINNET_SPL_TOKENS.BLOCK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BLOCK.decimals,\n\n    version: 4,\n  },\n  REAL_USDC_V4: {\n    symbol: \"REAL-USDC\",\n    name: \"REAL-USDC V4 LP\",\n    mint: \"EN43tp8xdkcM8RYSJ4msFHMPTJRXKhUteVYBDJLwTvr3\",\n\n    base: MAINNET_SPL_TOKENS.REAL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.REAL.decimals,\n\n    version: 4,\n  },\n  FRKT_USDC_V4: {\n    symbol: \"FRKT-USDC\",\n    name: \"FRKT-USDC V4 LP\",\n    mint: \"7MgzqVTGeA4wENme81QPTrPy45NJMKVL9XGwxmNT87cG\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  MBS_USDC_V4: {\n    symbol: \"MBS-USDC\",\n    name: \"MBS-USDC V4 LP\",\n    mint: \"BAgSWaPZpsQKyZJdvB5KyvmCNj6hzczzentt5FhDCVHb\",\n\n    base: MAINNET_SPL_TOKENS.MBS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MBS.decimals,\n\n    version: 4,\n  },\n  PRISM_USDC_V4: {\n    symbol: \"PRISM-USDC\",\n    name: \"PRISM-USDC V4 LP\",\n    mint: \"3baYkTcudvSFMe25UpZcBfdp4FA5kL2E4pfaeJ8AiYJB\",\n\n    base: MAINNET_SPL_TOKENS.PRISM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PRISM.decimals,\n\n    version: 4,\n  },\n  CHICKS_USDC_V4: {\n    symbol: \"CHICKS-USDC\",\n    name: \"CHICKS-USDC V4 LP\",\n    mint: \"CPzmcw81a6PDasSXhVLfDRKuTJXZPUqocS9VFf5zCFhs\",\n\n    base: MAINNET_SPL_TOKENS.CHICKS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CHICKS.decimals,\n\n    version: 4,\n  },\n  MEAN_RAY_V4: {\n    symbol: \"MEAN-RAY\",\n    name: \"MEAN-RAY V4 LP\",\n    mint: \"H9wUyrxpAErmdNVPitpHSXgwoomoh91ggJKPWtQQoCn1\",\n\n    base: MAINNET_SPL_TOKENS.MEAN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEAN.decimals,\n\n    version: 4,\n  },\n  TINY_USDC_V4: {\n    symbol: \"TINY-USDC\",\n    name: \"TINY-USDC V4 LP\",\n    mint: \"Hho6ZzRDj49L4z6zog8nQZFaxMSz6FX6wNzVpMeAMen\",\n\n    base: MAINNET_SPL_TOKENS.TINY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TINY.decimals,\n\n    version: 4,\n  },\n  SCY_USDC_V4: {\n    symbol: \"SCY-USDC\",\n    name: \"SCY-USDC V4 LP\",\n    mint: \"EcYk7t6Vw59HDnY2u6H1KDPkk8juMeA1NpGpHiGk1LDf\",\n\n    base: MAINNET_SPL_TOKENS.SCY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SCY.decimals,\n\n    version: 4,\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const DEVNET_SPL_TOKENS: SplTokens = {\n  WSOL: { ...WSOL },\n};\n\nexport const DEVNET_LP_TOKENS: LpTokens = {\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const TESTNET_SPL_TOKENS: SplTokens = {\n  WSOL: { ...WSOL },\n};\n\nexport const TESTNET_LP_TOKENS: LpTokens = {\n};\n","import { Logger } from \"../common\";\n\nimport { LpTokenInfo, SplTokenInfo } from \"./type\";\n\nconst logger = Logger.from(\"token/util\");\n\n/**\n * Token list\n */\nexport class TokenList {\n  constructor(private tokenList: (SplTokenInfo | LpTokenInfo)[]) {}\n\n  /**\n   * Filter token by mint of token list.\n   *\n   * @param mint - Token's mint address\n   */\n  filterByMint = (mint: string) => {\n    return this.tokenList.filter((token) => token.mint === mint);\n  };\n\n  /**\n   * Filter unique token by mint of token list, must and can only have one result.\n   */\n  filterUniqueByMint = <T extends \"all\" | \"spl\" | \"lp\">(mint: string, tokenType: T | \"all\" | \"spl\" | \"lp\" = \"all\") => {\n    const result = this.tokenList.filter((token) => token.mint === mint);\n\n    if (result.length === 0) {\n      return logger.throwArgumentError(`No token found`, \"mint\", mint);\n    } else if (result.length > 1) {\n      return logger.throwArgumentError(`Multiple tokens found: ${result.length}`, \"mint\", mint);\n    }\n\n    const token = result[0];\n\n    if (tokenType === \"spl\" && \"version\" in token) {\n      return logger.throwArgumentError(\"invalid SPL token mint\", \"mint\", mint);\n    } else if (tokenType === \"lp\" && !(\"version\" in token)) {\n      return logger.throwArgumentError(\"invalid LP token mint\", \"mint\", mint);\n    }\n\n    return token as T extends \"all\" ? SplTokenInfo | LpTokenInfo : T extends \"spl\" ? SplTokenInfo : LpTokenInfo;\n  };\n\n  /**\n   * Get list of token list\n   */\n  getList = () => {\n    return this.tokenList;\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { PublicKeyish, validateAndParsePublicKey } from \"../common\";\nimport { SOL, WSOL } from \"../token\";\n\n/**\n * A currency is any fungible financial instrument on Solana, including SOL and all SPL tokens.\n *\n * The only instance of the base class `Currency` is SOL.\n */\nexport class Currency {\n  public readonly symbol?: string;\n  public readonly name?: string;\n\n  public readonly decimals: number;\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly SOL: Currency = new Currency(SOL.decimals, SOL.symbol, SOL.name);\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.SOL`.\n   * @param decimals - decimals of the currency\n   * @param symbol - symbol of the currency\n   * @param name - name of the currency\n   */\n  public constructor(decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    this.decimals = decimals;\n    this.symbol = symbol;\n    this.name = name;\n  }\n}\n\nexport function inspectCurrency() {\n  // @ts-ignore\n  Currency.prototype.inspect = function () {\n    return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n  };\n}\n\n/**\n * Represents an SPL token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly mint: PublicKey;\n\n  /**\n   * The only instance of the base class `Token`.\n   */\n  public static readonly WSOL: Token = new Token(WSOL.mint, WSOL.decimals, SOL.symbol, SOL.name);\n\n  public constructor(mint: PublicKeyish, decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    super(decimals, symbol, name);\n\n    this.mint = validateAndParsePublicKey(mint);\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same mint address.\n   * @param other - other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true;\n    }\n    return this.mint.equals(other.mint);\n  }\n}\n\nexport function inspectToken() {\n  // @ts-ignore\n  Token.prototype.inspect = function () {\n    return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n      this.symbol\n    }>`;\n  };\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB);\n  } else if (currencyA instanceof Token || currencyB instanceof Token) {\n    return false;\n  } else {\n    return currencyA === currencyB;\n  }\n}\n","import _Big from \"big.js\";\nimport BN from \"bn.js\";\nimport _Decimal from \"decimal.js-light\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { ONE, Rounding } from \"./constant\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/fraction\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nconst Decimal = toFormat(_Decimal);\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP,\n};\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: Big.roundDown,\n  [Rounding.ROUND_HALF_UP]: Big.roundHalfUp,\n  [Rounding.ROUND_UP]: Big.roundUp,\n};\n\nexport class Fraction {\n  public readonly numerator: BN;\n  public readonly denominator: BN;\n\n  public constructor(numerator: BigNumberish, denominator: BigNumberish = ONE) {\n    this.numerator = parseBigNumberish(numerator);\n    this.denominator = parseBigNumberish(denominator);\n  }\n\n  // performs floor division\n  public get quotient() {\n    return this.numerator.div(this.denominator);\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator);\n  }\n\n  // +\n  public add(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.add(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).add(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // -\n  public sub(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.sub(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).sub(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // ×\n  public mul(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.numerator), this.denominator.mul(otherParsed.denominator));\n  }\n\n  // ÷\n  public div(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.denominator), this.denominator.mul(otherParsed.numerator));\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`);\n    logger.assert(significantDigits > 0, `${significantDigits} is not positive.`);\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] });\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`);\n    logger.assert(decimalPlaces >= 0, `${decimalPlaces} is negative.`);\n\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n}\n","import Big, { BigConstructor, BigSource, RoundingMode } from \"big.js\";\nimport Decimal, { Config, Numeric } from \"decimal.js-light\";\nimport _toFarmat from \"toformat\";\n\ntype TakeStatic<T> = { [P in keyof T]: T[P] };\ninterface FormatOptions {\n  decimalSeparator?: string;\n  groupSeparator?: string;\n  groupSize?: number;\n  fractionGroupSeparator?: string;\n  fractionGroupSize?: number;\n}\ninterface WrappedBigConstructor extends TakeStatic<BigConstructor> {\n  new (value: BigSource): WrappedBig;\n  (value: BigSource): WrappedBig;\n  (): WrappedBigConstructor;\n\n  format: FormatOptions;\n}\nexport interface WrappedBig extends Big {\n  add(n: BigSource): WrappedBig;\n  abs(): WrappedBig;\n  div(n: BigSource): WrappedBig;\n  minus(n: BigSource): WrappedBig;\n  mod(n: BigSource): WrappedBig;\n  mul(n: BigSource): WrappedBig;\n  plus(n: BigSource): WrappedBig;\n  pow(exp: number): WrappedBig;\n  round(dp?: number, rm?: RoundingMode): WrappedBig;\n  sqrt(): WrappedBig;\n  sub(n: BigSource): WrappedBig;\n  times(n: BigSource): WrappedBig;\n  toFormat(): string;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\ntype DecimalConstructor = typeof Decimal;\ninterface WrappedDecimalConstructor extends TakeStatic<DecimalConstructor> {\n  new (value: Numeric): WrappedDecimal;\n  clone(config?: Config): WrappedDecimalConstructor;\n  config(config: Config): WrappedDecimal;\n  set(config: Config): WrappedDecimal;\n  format: FormatOptions;\n}\nexport interface WrappedDecimal extends Decimal {\n  absoluteValue(): WrappedDecimal;\n  abs(): WrappedDecimal;\n  dividedBy(y: Numeric): WrappedDecimal;\n  div(y: Numeric): WrappedDecimal;\n  dividedToIntegerBy(y: Numeric): WrappedDecimal;\n  idiv(y: Numeric): WrappedDecimal;\n  logarithm(base?: Numeric): WrappedDecimal;\n  log(base?: Numeric): WrappedDecimal;\n  minus(y: Numeric): WrappedDecimal;\n  sub(y: Numeric): WrappedDecimal;\n  modulo(y: Numeric): WrappedDecimal;\n  mod(y: Numeric): WrappedDecimal;\n  naturalExponetial(): WrappedDecimal;\n  exp(): WrappedDecimal;\n  naturalLogarithm(): WrappedDecimal;\n  ln(): WrappedDecimal;\n  negated(): WrappedDecimal;\n  neg(): WrappedDecimal;\n  plus(y: Numeric): WrappedDecimal;\n  add(y: Numeric): WrappedDecimal;\n  squareRoot(): WrappedDecimal;\n  sqrt(): WrappedDecimal;\n  times(y: Numeric): WrappedDecimal;\n  mul(y: Numeric): WrappedDecimal;\n  toWrappedDecimalPlaces(dp?: number, rm?: number): WrappedDecimal;\n  todp(dp?: number, rm?: number): WrappedDecimal;\n  toInteger(): WrappedDecimal;\n  toint(): WrappedDecimal;\n  toPower(y: Numeric): WrappedDecimal;\n  pow(y: Numeric): WrappedDecimal;\n  toSignificantDigits(sd?: number, rm?: number): WrappedDecimal;\n  tosd(sd?: number, rm?: number): WrappedDecimal;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\nconst toFormat: {\n  (fn: BigConstructor): WrappedBigConstructor;\n  (fn: DecimalConstructor): WrappedDecimalConstructor;\n} = _toFarmat;\nexport default toFormat;\n","import { _100, Rounding } from \"./constant\";\nimport { Fraction } from \"./fraction\";\n\nexport const _100_PERCENT = new Fraction(_100);\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits = 5, format?: object, rounding?: Rounding) {\n    return this.mul(_100_PERCENT).toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(decimalPlaces = 2, format?: object, rounding?: Rounding) {\n    return this.mul(_100_PERCENT).toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import { Logger } from \"../common\";\n\nimport { BigNumberish, tenExponentiate } from \"./bignumber\";\nimport { Rounding } from \"./constant\";\nimport { Currency, currencyEquals } from \"./currency\";\nimport { Fraction } from \"./fraction\";\n\nconst logger = Logger.from(\"entity/price\");\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Currency; // input i.e. denominator\n  public readonly quoteCurrency: Currency; // output i.e. numerator\n  // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n  public readonly scalar: Fraction;\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(\n    baseCurrency: Currency,\n    denominator: BigNumberish,\n    quoteCurrency: Currency,\n    numerator: BigNumberish,\n  ) {\n    super(numerator, denominator);\n\n    this.baseCurrency = baseCurrency;\n    this.quoteCurrency = quoteCurrency;\n    this.scalar = new Fraction(tenExponentiate(baseCurrency.decimals), tenExponentiate(quoteCurrency.decimals));\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  public get adjusted(): Fraction {\n    return super.mul(this.scalar);\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.numerator, this.baseCurrency, this.denominator);\n  }\n\n  public mul(other: Price): Price {\n    logger.assert(currencyEquals(this.quoteCurrency, other.baseCurrency), \"mul currency not equals\");\n\n    const fraction = super.mul(other);\n    return new Price(this.baseCurrency, fraction.denominator, other.quoteCurrency, fraction.numerator);\n  }\n\n  public toSignificant(significantDigits = this.quoteCurrency.decimals, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(decimalPlaces = this.quoteCurrency.decimals, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\nimport BN, { isBN } from \"bn.js\";\n\nimport {\n  bits, blob, Blob, Layout, offset as _offset, seq as _seq, Structure as _Structure, u32 as _u32, u8 as _u8, UInt,\n  union as _union, Union as _Union,\n} from \"./buffer-layout\";\n\nexport * from \"./buffer-layout\";\nexport { blob };\n\nexport class BNLayout<P extends string = \"\"> extends Layout<BN, P> {\n  blob: Layout<Buffer>;\n  signed: boolean;\n\n  constructor(span: number, signed: boolean, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends, but it desn't matter\n    super(span, property);\n    this.blob = blob(span);\n    this.signed = signed;\n  }\n\n  /** @override */\n  decode(b: Buffer, offset = 0) {\n    const num = new BN(this.blob.decode(b, offset), 10, \"le\");\n    if (this.signed) {\n      return num.fromTwos(this.span * 8).clone();\n    }\n    return num;\n  }\n\n  /** @override */\n  encode(src: BN, b: Buffer, offset = 0) {\n    if (typeof src === \"number\") src = new BN(src); // src will pass a number accidently in union\n    if (this.signed) {\n      src = src.toTwos(this.span * 8);\n    }\n    return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n  }\n}\n\nexport class WideBits<P extends string = \"\"> extends Layout<Record<string, boolean>, P> {\n  _lower: any;\n  _upper: any;\n  // TODO: unknown\n  constructor(property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(8, property);\n    this._lower = bits(_u32(), false);\n    this._upper = bits(_u32(), false);\n  }\n\n  addBoolean(property: string) {\n    if (this._lower.fields.length < 32) {\n      this._lower.addBoolean(property);\n    } else {\n      this._upper.addBoolean(property);\n    }\n  }\n\n  decode(b: Buffer, offset = 0): Record<string, boolean> {\n    const lowerDecoded = this._lower.decode(b, offset);\n    const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n    return { ...lowerDecoded, ...upperDecoded };\n  }\n\n  encode(src: any /* TEMP */, b: Buffer, offset = 0) {\n    return this._lower.encode(src, b, offset) + this._upper.encode(src, b, offset + this._lower.span);\n  }\n}\n\nexport function u8<P extends string = \"\">(property?: P): UInt<number, P> {\n  return new UInt(1, property);\n}\n\nexport function u32<P extends string = \"\">(property?: P): UInt<number, P> {\n  return new UInt(4, property);\n}\n\nexport function u64<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(8, false, property);\n}\n\nexport function u128<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(16, false, property);\n}\n\nexport function i64<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(8, true, property);\n}\n\nexport function i128<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(16, true, property);\n}\n\nexport class WrappedLayout<T, U, P extends string = \"\"> extends Layout<U, P> {\n  layout: Layout<T>;\n  decoder: (data: T) => U;\n  encoder: (src: U) => T;\n\n  constructor(layout: Layout<T>, decoder: (data: T) => U, encoder: (src: U) => T, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(layout.span, property);\n    this.layout = layout;\n    this.decoder = decoder;\n    this.encoder = encoder;\n  }\n\n  decode(b: Buffer, offset?: number): U {\n    return this.decoder(this.layout.decode(b, offset));\n  }\n\n  encode(src: U, b: Buffer, offset?: number): number {\n    return this.layout.encode(this.encoder(src), b, offset);\n  }\n\n  getSpan(b: Buffer, offset?: number): number {\n    return this.layout.getSpan(b, offset);\n  }\n}\n\nexport function publicKey<P extends string = \"\">(property?: P): Layout<PublicKey, P> {\n  return new WrappedLayout(\n    blob(32),\n    (b: Buffer) => new PublicKey(b),\n    (key: PublicKey) => key.toBuffer(),\n    property,\n  );\n}\n\nexport class OptionLayout<T, P> extends Layout<T | null, P> {\n  layout: Layout<T>;\n  discriminator: Layout<number>;\n\n  constructor(layout: Layout<T>, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(-1, property);\n    this.layout = layout;\n    this.discriminator = _u8();\n  }\n\n  encode(src: T | null, b: Buffer, offset = 0): number {\n    if (src === null || src === undefined) {\n      return this.discriminator.encode(0, b, offset);\n    }\n    this.discriminator.encode(1, b, offset);\n    return this.layout.encode(src, b, offset + 1) + 1;\n  }\n\n  decode(b: Buffer, offset = 0): T | null {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return null;\n    } else if (discriminator === 1) {\n      return this.layout.decode(b, offset + 1);\n    }\n    throw new Error(\"Invalid option \" + this.property);\n  }\n\n  getSpan(b: Buffer, offset = 0): number {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return 1;\n    } else if (discriminator === 1) {\n      return this.layout.getSpan(b, offset + 1) + 1;\n    }\n    throw new Error(\"Invalid option \" + this.property);\n  }\n}\n\nexport function option<T, P extends string = \"\">(layout: Layout<T>, property?: P): Layout<T | null, P> {\n  return new OptionLayout<T, P>(layout, property);\n}\n\nexport function bool<P extends string = \"\">(property?: P): Layout<boolean, P> {\n  return new WrappedLayout(_u8(), decodeBool, encodeBool, property);\n}\n\nexport function decodeBool(value: number): boolean {\n  if (value === 0) {\n    return false;\n  } else if (value === 1) {\n    return true;\n  }\n  throw new Error(\"Invalid bool: \" + value);\n}\n\nexport function encodeBool(value: boolean): number {\n  return value ? 1 : 0;\n}\n\nexport function vec<T, P extends string = \"\">(elementLayout: Layout<T>, property?: P): Layout<T[], P> {\n  const length = _u32(\"length\");\n  const layout: Layout<{ values: T[] }> = struct([\n    length,\n    seq(elementLayout, _offset(length, -length.span), \"values\"),\n  ]) as any; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ values }) => values,\n    (values) => ({ values }),\n    property,\n  );\n}\n\nexport function tagged<T, P extends string = \"\">(tag: BN, layout: Layout<T>, property?: P): Layout<T, P> {\n  const wrappedLayout: Layout<{ tag: BN; data: T }> = struct([u64(\"tag\"), layout.replicate(\"data\")]) as any; // Something I don't know\n\n  function decodeTag({ tag: receivedTag, data }: { tag: BN; data: T }) {\n    if (!receivedTag.eq(tag)) {\n      throw new Error(\"Invalid tag, expected: \" + tag.toString(\"hex\") + \", got: \" + receivedTag.toString(\"hex\"));\n    }\n    return data;\n  }\n\n  return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\n\nexport function vecU8<P extends string = \"\">(property?: P): Layout<Buffer, P> {\n  const length = _u32(\"length\");\n  const layout: Layout<{ data: Buffer }> = struct([length, blob(_offset(length, -length.span), \"data\")]) as any; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ data }) => data,\n    (data) => ({ data }),\n    property,\n  );\n}\n\nexport function str<P extends string = \"\">(property?: P): Layout<string, P> {\n  return new WrappedLayout(\n    vecU8(),\n    (data) => data.toString(\"utf-8\"),\n    (s) => Buffer.from(s, \"utf-8\"),\n    property,\n  );\n}\n\nexport interface EnumLayout<T, P extends string = \"\"> extends Layout<T, P> {\n  registry: Record<string, Layout<any>>;\n}\n\nexport function rustEnum<T, P extends string = \"\">(variants: Layout<any>[], property?: P): EnumLayout<T, P> {\n  const unionLayout = _union(_u8(), property);\n  variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n  return unionLayout as any; // ?why use UnionLayout? This must be a fault\n}\n\nexport function array<T, P extends string = \"\">(\n  elementLayout: Layout<T>,\n  length: number,\n  property?: P,\n): Layout<T[], P> {\n  const layout = struct([seq(elementLayout, length, \"values\")]) as any as Layout<{ values: T[] }>; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ values }) => values,\n    (values) => ({ values }),\n    property,\n  );\n}\n\nexport class Structure<T, P, D extends { [key: string]: any } = any> extends _Structure<T, P, D> {\n  /** @override */\n  decode(b: Buffer, offset?: number) {\n    return super.decode(b, offset);\n  }\n}\n\nexport function struct<T, P extends string = \"\">(\n  fields: T,\n  property?: P,\n  decodePrefixes?: boolean,\n): T extends Layout<infer Value, infer Property>[]\n  ? Structure<\n      Value,\n      P,\n      {\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\n          ? V\n          : any;\n      }\n    >\n  : any {\n  //@ts-expect-error this type is not quite satisfied the define, but, never no need to worry about.\n  return new Structure(fields, property, decodePrefixes);\n}\n\nexport type GetLayoutSchemaFromStructure<T extends Structure<any, any, any>> = T extends Structure<any, any, infer S>\n  ? S\n  : any;\nexport type GetStructureFromLayoutSchema<S extends { [key: string]: any } = any> = Structure<any, any, S>;\n\nexport class Union<Schema extends { [key: string]: any } = any> extends _Union<Schema> {\n  encodeInstruction(instruction: any): Buffer {\n    const instructionMaxSpan = Math.max(...Object.values(this.registry).map((r) => r.span));\n    const b = Buffer.alloc(instructionMaxSpan);\n    return b.slice(0, this.encode(instruction, b));\n  }\n\n  decodeInstruction(instruction: any) {\n    return this.decode(instruction);\n  }\n}\nexport function union<UnionSchema extends { [key: string]: any } = any>(\n  discr: any,\n  defaultLayout?: any,\n  property?: string,\n): Union<UnionSchema> {\n  return new Union(discr, defaultLayout, property);\n}\n\nclass Zeros extends Blob {\n  decode(b: Buffer, offset: number) {\n    const slice = super.decode(b, offset);\n    if (!slice.every((v) => v === 0)) {\n      throw new Error(\"nonzero padding bytes\");\n    }\n    return slice;\n  }\n}\n\nexport function zeros(length: number) {\n  return new Zeros(length);\n}\n\nexport function seq<T, P extends string = \"\", AnotherP extends string = \"\">(\n  elementLayout: Layout<T, P>,\n  count: number | BN | Layout<BN | number, P>,\n  property?: AnotherP,\n): Layout<T[], AnotherP> {\n  let parsedCount: number;\n  const superCount =\n    typeof count === \"number\"\n      ? count\n      : isBN(count)\n      ? count.toNumber()\n      : new Proxy(count as unknown as Layout<number> /* pretend to be Layout<number> */, {\n          get(target, property) {\n            if (!parsedCount) {\n              // get count in targetLayout. note that count may be BN\n              const countProperty = Reflect.get(target, \"count\");\n\n              // let targetLayout's  property:count be a number\n              parsedCount = isBN(countProperty) ? countProperty.toNumber() : countProperty;\n\n              // record the count\n              Reflect.set(target, \"count\", parsedCount);\n            }\n            return Reflect.get(target, property);\n          },\n          set(target, property, value) {\n            if (property === \"count\") {\n              parsedCount = value;\n            }\n            return Reflect.set(target, property, value);\n          },\n        });\n\n  // @ts-expect-error force type\n  return _seq(elementLayout, superCount, property);\n}\n","import {\n  bits as _bits, BitStructure as _BitStructure, blob as _blob, Blob as _Blob, cstr as _cstr, f32 as _f32,\n  f32be as _f32be, f64 as _f64, f64be as _f64be, greedy as _greedy, Layout as _Layout, ns64 as _ns64, ns64be as _ns64be,\n  nu64 as _nu64, nu64be as _nu64be, offset as _offset, s16 as _s16, s16be as _s16be, s24 as _s24, s24be as _s24be,\n  s32 as _s32, s32be as _s32be, s40 as _s40, s40be as _s40be, s48 as _s48, s48be as _s48be, s8 as _s8, seq as _seq,\n  struct as _struct, Structure as _Structure, u16 as _u16, u16be as _u16be, u24 as _u24, u24be as _u24be, u32 as _u32,\n  u32be as _u32be, u40 as _u40, u40be as _u40be, u48 as _u48, u48be as _u48be, u8 as _u8, UInt as _UInt,\n  union as _union, Union as _Union, unionLayoutDiscriminator as _unionLayoutDiscriminator, utf8 as _utf8,\n} from \"@solana/buffer-layout\";\n\n//#region ------------------- Layout -------------------\nexport interface Layout<T = any, P = \"\"> {\n  span: number;\n  property?: P;\n  decode(b: Buffer, offset?: number): T;\n  encode(src: T, b: Buffer, offset?: number): number;\n  getSpan(b: Buffer, offset?: number): number;\n  replicate<AP extends string>(name: AP): Layout<T, AP>;\n}\nexport interface LayoutConstructor {\n  new <T, P>(): Layout<T, P>; // for class extends syntex\n  new <T, P>(span?: T, property?: P): Layout<T, P>;\n  readonly prototype: Layout;\n}\nexport const Layout = _Layout as unknown as LayoutConstructor;\n//#endregion\n\n//#region ------------------- Structure -------------------\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface Structure<T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>\n  extends Layout<DecodeSchema, P> {\n  span: number;\n  decode(b: Buffer, offset?: number): DecodeSchema;\n  layoutFor<AP extends string>(property: AP): Layout<DecodeSchema[AP]>;\n  offsetOf<AP extends string>(property: AP): number;\n}\ninterface StructureConstructor {\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(): Structure<T, P, DecodeSchema>;\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(\n    fields: T,\n    property?: P,\n    decodePrefixes?: boolean,\n  ): Structure<T, P, DecodeSchema>;\n}\nexport const Structure = _Structure as unknown as StructureConstructor;\n//#endregion\n\n//#region ------------------- Union -------------------\nexport interface Union<UnionSchema extends { [key: string]: any } = any> extends Layout {\n  registry: object;\n  decode(b: Buffer, offset?: number): Partial<UnionSchema>;\n  addVariant(\n    variant: number,\n    layout: Structure<any, any, Partial<UnionSchema>> | Layout<any, keyof UnionSchema>,\n    property?: string,\n  ): any /* TEMP: code in Layout.js 1809 */;\n}\ninterface UnionConstructor {\n  new <UnionSchema extends { [key: string]: any } = any>(): Union<UnionSchema>;\n  new <UnionSchema extends { [key: string]: any } = any>(\n    discr: Layout<any, any>,\n    defaultLayout: Layout<any, any>,\n    property?: string,\n  ): Union<UnionSchema>;\n}\nexport const Union = _Union as unknown as UnionConstructor;\n//#endregion\n\n//#region ------------------- BitStructure -------------------\nexport type BitStructure<T = unknown /* TEMP */, P = \"\"> = Layout<T, P>;\ninterface BitStructureConstructor {\n  new (...params: any[]): BitStructure;\n}\nexport const BitStructure = _BitStructure as BitStructureConstructor;\n//#endregion\n\n//#region ------------------- UInt -------------------\nexport type UInt<T = any, P = \"\"> = Layout<T, P>;\ninterface UIntConstructor {\n  new <T, P>(span?: T, property?: P): UInt<T, P>;\n}\nexport const UInt = _UInt as UIntConstructor;\n//#endregion\n\n//#region ------------------- Blob -------------------\nexport type Blob<P extends string = \"\"> = Layout<Buffer, P>;\ninterface BlobConstructor {\n  new (...params: ConstructorParameters<LayoutConstructor>): Blob;\n}\nexport const Blob = _Blob as unknown as BlobConstructor;\n//#endregion\n\nexport const greedy = _greedy as <P extends string = \"\">(elementSpan?: number, property?: P) => Layout<number, P>;\nexport const u8 = _u8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u16 = _u16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u24 = _u24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u32 = _u32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u40 = _u40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u48 = _u48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const nu64 = _nu64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u16be = _u16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u24be = _u24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u32be = _u32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u40be = _u40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u48be = _u48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const nu64be = _nu64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s8 = _s8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s16 = _s16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s24 = _s24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s32 = _s32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s40 = _s40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s48 = _s48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const ns64 = _ns64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s16be = _s16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s24be = _s24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s32be = _s32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s40be = _s40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s48be = _s48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const ns64be = _ns64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f32 = _f32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f32be = _f32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f64 = _f64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f64be = _f64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const struct = _struct as <T, P extends string = \"\">(\n  fields: T,\n  property?: P,\n  decodePrefixes?: boolean,\n) => T extends Layout<infer Value, infer Property>[]\n  ? Structure<\n      Value,\n      P,\n      {\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\n          ? V\n          : any;\n      }\n    >\n  : any;\n\nexport const seq = _seq as unknown as <T, P>(\n  elementLayout: Layout<T, string>,\n  count: number | Layout<number, string>,\n  property?: P,\n) => Layout<T[]>;\nexport const union = _union as <UnionSchema extends { [key: string]: any } = any>(\n  discr: Layout<any, any>,\n  defaultLayout?: any,\n  property?: string,\n) => Union<UnionSchema>;\nexport const unionLayoutDiscriminator = _unionLayoutDiscriminator as <P extends string = \"\">(\n  layout: Layout<any, P>,\n  property?: P,\n) => any;\nexport const blob = _blob as unknown as <P extends string = \"\">(length: number | Layout<number, P>, property?: P) => Blob<P>;\nexport const cstr = _cstr as <P extends string = \"\">(property?: P) => Layout<string, P>;\nexport const utf8 = _utf8 as <P extends string = \"\">(maxSpan: number, property?: P) => Layout<string, P>;\nexport const bits = _bits as unknown as <T, P extends string = \"\">(\n  word: Layout<T>,\n  msb?: boolean,\n  property?: P,\n) => BitStructure<T, P>; // TODO: not quite sure\nexport const offset = _offset as unknown as <T, P extends string = \"\">(\n  layout: Layout<T, P>,\n  offset?: number,\n  property?: P,\n) => Layout<T, P>;\n\nexport type GetStructureSchema<T extends Structure> = T extends Structure<any, any, infer S> ? S : unknown;\n","import { GetStructureSchema, publicKey, struct, u32, u64, u8 } from \"../marshmallow\";\n\nexport const SPL_MINT_LAYOUT = struct([\n  u32(\"mintAuthorityOption\"),\n  publicKey(\"mintAuthority\"),\n  u64(\"supply\"),\n  u8(\"decimals\"),\n  u8(\"isInitialized\"),\n  u32(\"freezeAuthorityOption\"),\n  publicKey(\"freezeAuthority\"),\n]);\n\nexport type SplMintLayout = typeof SPL_MINT_LAYOUT;\n\nexport type SplMint = GetStructureSchema<SplMintLayout>;\n\n// 165 bytes\nexport const SPL_ACCOUNT_LAYOUT = struct([\n  publicKey(\"mint\"),\n  publicKey(\"owner\"),\n  u64(\"amount\"),\n  u32(\"delegateOption\"),\n  publicKey(\"delegate\"),\n  u8(\"state\"),\n  u32(\"isNativeOption\"),\n  u64(\"isNative\"),\n  u64(\"delegatedAmount\"),\n  u32(\"closeAuthorityOption\"),\n  publicKey(\"closeAuthority\"),\n]);\n\nexport type SplAccountLayout = typeof SPL_ACCOUNT_LAYOUT;\n\nexport type SplAccount = GetStructureSchema<SplAccountLayout>;\n","import {\n  createAssociatedTokenAccountInstruction, createCloseAccountInstruction, createInitializeAccountInstruction,\n  createInitializeMintInstruction, createMintToInstruction, createTransferInstruction,\n} from \"@solana/spl-token\";\nimport {\n  Commitment, Connection, Keypair, PublicKey, Signer, SystemProgram, TransactionInstruction,\n} from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { getATAAddress } from \"../ammV3/utils/pda\";\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID, SYSVAR_RENT_PUBKEY, TOKEN_PROGRAM_ID, validateAndParsePublicKey,\n} from \"../common\";\nimport { BigNumberish, parseBigNumberish } from \"../entity\";\nimport { u64, u8 } from \"../marshmallow\";\nimport { WSOL } from \"../token\";\n\nimport { SPL_ACCOUNT_LAYOUT } from \"./layout\";\n\n// https://github.com/solana-labs/solana-program-library/tree/master/token/js/client\nexport class Spl {\n  static getAssociatedTokenAccount({ mint, owner }: { mint: PublicKey; owner: PublicKey }) {\n    // return getAssociatedTokenAddress(ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, mint, owner, true);\n    return getATAAddress(owner, mint).publicKey\n  }\n\n  static makeCreateAssociatedTokenAccountInstruction({\n    mint,\n    associatedAccount,\n    owner,\n    payer,\n  }: {\n    mint: PublicKey;\n    associatedAccount: PublicKey;\n    owner: PublicKey;\n    payer: PublicKey;\n  }) {\n    return createAssociatedTokenAccountInstruction(\n      payer,\n      associatedAccount,\n      owner,\n      mint,\n    );\n  }\n\n  // https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js\n  static async makeCreateWrappedNativeAccountInstructions({\n    connection,\n    owner,\n    payer,\n    amount,\n    // baseRentExemption,\n    commitment,\n  }: {\n    connection: Connection;\n    owner: PublicKey;\n    payer: PublicKey;\n    amount: BigNumberish;\n    // baseRentExemption?: number;\n    commitment?: Commitment;\n  }) {\n    const instructions: TransactionInstruction[] = [];\n\n    // Allocate memory for the account\n    // baseRentExemption = getMinimumBalanceForRentExemption size is 0\n    // -X POST -H \"Content-Type: application/json\" -d '{\"jsonrpc\":\"2.0\", \"id\":1, \"method\":\"getMinimumBalanceForRentExemption\", \"params\":[0]}'\n    // baseRentExemption = perByteRentExemption * 128\n    // balanceNeeded = baseRentExemption / 128 * (dataSize + 128)\n    const balanceNeeded = await connection.getMinimumBalanceForRentExemption(SPL_ACCOUNT_LAYOUT.span, commitment);\n\n    // Create a new account\n    const lamports = parseBigNumberish(amount).add(new BN(balanceNeeded));\n    const newAccount = Keypair.generate();\n    instructions.push(\n      SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: lamports.toNumber(),\n        space: SPL_ACCOUNT_LAYOUT.span,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n    );\n\n    // * merge this instruction into SystemProgram.createAccount\n    // * will save transaction size ~17(441-424) bytes\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    // instructions.push(\n    //   SystemProgram.transfer({\n    //     fromPubkey: payer,\n    //     toPubkey: newAccount.publicKey,\n    //     lamports: parseBigNumberish(amount).toNumber(),\n    //   }),\n    // );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    instructions.push(\n      this.makeInitAccountInstruction({\n        mint: validateAndParsePublicKey(WSOL.mint),\n        tokenAccount: newAccount.publicKey,\n        owner,\n      }),\n    );\n\n    return { newAccount, instructions };\n  }\n\n  static async insertCreateWrappedNativeAccountInstructions({\n    connection,\n    owner,\n    payer,\n    amount,\n    instructions,\n    signers,\n    commitment,\n  }: {\n    connection: Connection;\n    owner: PublicKey;\n    payer: PublicKey;\n    amount: BigNumberish;\n    instructions: TransactionInstruction[];\n    signers: Signer[];\n    commitment?: Commitment;\n  }) {\n    const { newAccount, instructions: newInstructions } = await this.makeCreateWrappedNativeAccountInstructions({\n      connection,\n      owner,\n      payer,\n      amount,\n      commitment,\n    });\n\n    instructions.push(...newInstructions);\n    signers.push(newAccount);\n\n    return newAccount.publicKey;\n  }\n\n  static makeInitMintInstruction({\n    mint,\n    decimals,\n    mintAuthority,\n    freezeAuthority = null,\n  }: {\n    mint: PublicKey;\n    decimals: number;\n    mintAuthority: PublicKey;\n    freezeAuthority?: PublicKey | null;\n  }) {\n    return createInitializeMintInstruction(mint, decimals, mintAuthority, freezeAuthority);\n  }\n\n  static makeMintToInstruction({\n    mint,\n    dest,\n    authority,\n    amount,\n    multiSigners = [],\n  }: {\n    mint: PublicKey;\n    dest: PublicKey;\n    authority: PublicKey;\n    amount: BigNumberish;\n    multiSigners?: Signer[];\n  }) {\n    return createMintToInstruction(mint, dest, authority, BigInt(String(amount)), multiSigners);\n  }\n\n  static makeInitAccountInstruction({\n    mint,\n    tokenAccount,\n    owner,\n  }: {\n    mint: PublicKey;\n    tokenAccount: PublicKey;\n    owner: PublicKey;\n  }) {\n    return createInitializeAccountInstruction(tokenAccount, mint, owner);\n  }\n\n  static makeTransferInstruction({\n    source,\n    destination,\n    owner,\n    amount,\n    multiSigners = [],\n  }: {\n    source: PublicKey;\n    destination: PublicKey;\n    owner: PublicKey;\n    amount: BigNumberish;\n    multiSigners?: Signer[];\n  }) {\n    return createTransferInstruction(\n      source,\n      destination,\n      owner,\n      BigInt(String(amount)),\n      multiSigners\n    );\n  }\n\n  static makeCloseAccountInstruction({\n    tokenAccount,\n    owner,\n    payer,\n    multiSigners = [],\n  }: {\n    tokenAccount: PublicKey;\n    owner: PublicKey;\n    payer: PublicKey;\n    multiSigners?: Signer[];\n  }) {\n    return createCloseAccountInstruction(tokenAccount, payer, owner, multiSigners);\n  }\n\n  static createInitAccountInstruction(programId, mint, account, owner) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    const dataLayout = u8('instruction');\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(1, data);\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { findProgramAddress, METADATA_PROGRAM_ID, TOKEN_PROGRAM_ID } from \"../../common\";\n\nimport { i32ToBytes, u16ToBytes } from \"./util\";\n\nexport const AMM_CONFIG_SEED = Buffer.from(\"amm_config\", \"utf8\");\nexport const POOL_SEED = Buffer.from(\"pool\", \"utf8\");\nexport const POOL_VAULT_SEED = Buffer.from(\"pool_vault\", \"utf8\");\nexport const POOL_REWARD_VAULT_SEED = Buffer.from(\"pool_reward_vault\", \"utf8\");\nexport const POSITION_SEED = Buffer.from(\"position\", \"utf8\");\nexport const TICK_ARRAY_SEED = Buffer.from(\"tick_array\", \"utf8\");\nexport const OPERATION_SEED = Buffer.from(\"operation\", \"utf8\");\n\nexport function getPdaAmmConfigId(programId: PublicKey, index: number) {\n  return findProgramAddress(\n    [AMM_CONFIG_SEED, u16ToBytes(index)],\n    programId\n  )\n}\n\nexport function getPdaPoolId(\n  programId: PublicKey,\n  ammConfigId: PublicKey,\n  mintA: PublicKey,\n  mintB: PublicKey\n) {\n  return findProgramAddress(\n    [POOL_SEED, ammConfigId.toBuffer(), mintA.toBuffer(), mintB.toBuffer()],\n    programId\n  );\n}\n\nexport function getPdaPoolVaultId(\n  programId: PublicKey,\n  poolId: PublicKey,\n  vaultMint: PublicKey\n) {\n  return findProgramAddress(\n    [POOL_VAULT_SEED, poolId.toBuffer(), vaultMint.toBuffer()],\n    programId\n  );\n}\n\nexport function getPdaPoolRewardVaulId(\n  programId: PublicKey,\n  poolId: PublicKey,\n  rewardMint: PublicKey\n) {\n  return findProgramAddress(\n    [POOL_REWARD_VAULT_SEED, poolId.toBuffer(), rewardMint.toBuffer()],\n    programId\n  );\n}\n\nexport function getPdaTickArrayAddress(\n  programId: PublicKey,\n  poolId: PublicKey,\n  startIndex: number\n) {\n  return findProgramAddress(\n    [TICK_ARRAY_SEED, poolId.toBuffer(), i32ToBytes(startIndex)],\n    programId\n  );\n}\n\nexport function getPdaProtocolPositionAddress(\n  programId: PublicKey,\n  poolId: PublicKey,\n  tickLower: number,\n  tickUpper: number\n) {\n  return findProgramAddress(\n    [\n      POSITION_SEED,\n      poolId.toBuffer(),\n      i32ToBytes(tickLower),\n      i32ToBytes(tickUpper),\n    ],\n    programId\n  );\n}\n\nexport function getPdaPersonalPositionAddress(\n  programId: PublicKey,\n  nftMint: PublicKey\n) {\n  return findProgramAddress(\n    [POSITION_SEED, nftMint.toBuffer()],\n    programId\n  );\n}\n\nexport function getATAAddress(owner: PublicKey, mint: PublicKey) {\n  return findProgramAddress(\n    [owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\")\n  );\n}\n\nexport function getPdaMetadataKey(mint: PublicKey) {\n  return findProgramAddress(\n    [\n      Buffer.from('metadata', 'utf8'),\n      METADATA_PROGRAM_ID.toBuffer(),\n      mint.toBuffer(),\n    ],\n    METADATA_PROGRAM_ID\n  )\n}\n\nexport function getPdaOperationAccount(\n  programId: PublicKey,\n) {\n  return findProgramAddress(\n    [OPERATION_SEED],\n    programId\n  );\n}","import { PublicKey } from \"@solana/web3.js\";\nimport { BN } from \"bn.js\";\n\nimport { splitTxAndSigners } from \"../common\";\nimport { Spl } from \"../spl\";\nimport { WSOL } from \"../token\";\n\nimport { TokenAccount } from \"./base\";\n\nexport function unwarpSol({ ownerInfo, tokenAccounts }: {\n  ownerInfo: {\n    wallet: PublicKey,\n    payer: PublicKey\n  },\n  tokenAccounts: TokenAccount[],\n}) {\n  const WSOL_MINT = new PublicKey(WSOL.mint)\n  const instructionsInfo = tokenAccounts.filter(i => i.accountInfo.mint.equals(WSOL_MINT)).map(i => ({\n    amount: i.accountInfo.amount,\n    tx: Spl.makeCloseAccountInstruction({ tokenAccount: i.pubkey, owner: ownerInfo.wallet, payer: ownerInfo.payer })\n  }))\n  const transactions = splitTxAndSigners({ instructions: instructionsInfo.map(i => i.tx), signers: [], payer: ownerInfo.wallet })\n  const amount = instructionsInfo.map(i => i.amount).reduce((a, b) => a.add(b), new BN(0))\n\n  return { transactions, amount }\n}","import { PublicKey } from \"@solana/web3.js\";\n\nimport { SerumVersion } from \"../serum\";\n\nimport { LiquidityVersion } from \"./type\";\n\n/* ================= program public keys ================= */\nexport const _LIQUIDITY_PROGRAM_ID_V4 = \"675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8\";\nexport const LIQUIDITY_PROGRAM_ID_V4 = new PublicKey(_LIQUIDITY_PROGRAM_ID_V4);\n\nexport const _LIQUIDITY_PROGRAM_ID_V5 = \"5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h\";\nexport const LIQUIDITY_PROGRAM_ID_V5 = new PublicKey(_LIQUIDITY_PROGRAM_ID_V5);\n\n// liquidity program id string => liquidity version\nexport const LIQUIDITY_PROGRAMID_TO_VERSION: {\n  [key: string]: LiquidityVersion;\n} = {\n  [_LIQUIDITY_PROGRAM_ID_V4]: 4,\n  [_LIQUIDITY_PROGRAM_ID_V5]: 5,\n};\n\n// liquidity version => liquidity program id\nexport const LIQUIDITY_VERSION_TO_PROGRAMID: { [key in LiquidityVersion]?: PublicKey } & {\n  [K: number]: PublicKey;\n} = {\n  4: LIQUIDITY_PROGRAM_ID_V4,\n  5: LIQUIDITY_PROGRAM_ID_V5,\n};\n\n// liquidity version => serum version\nexport const LIQUIDITY_VERSION_TO_SERUM_VERSION: {\n  [key in LiquidityVersion]?: SerumVersion;\n} & {\n  [K: number]: SerumVersion;\n} = {\n  4: 3,\n  5: 3,\n};\n","import { GetStructureSchema, publicKey, seq, struct, u128, u64 } from \"../marshmallow\";\n\n/* ================= state layouts ================= */\nexport const LIQUIDITY_STATE_LAYOUT_V4 = struct([\n  u64(\"status\"),\n  u64(\"nonce\"),\n  u64(\"maxOrder\"),\n  u64(\"depth\"),\n  u64(\"baseDecimal\"),\n  u64(\"quoteDecimal\"),\n  u64(\"state\"),\n  u64(\"resetFlag\"),\n  u64(\"minSize\"),\n  u64(\"volMaxCutRatio\"),\n  u64(\"amountWaveRatio\"),\n  u64(\"baseLotSize\"),\n  u64(\"quoteLotSize\"),\n  u64(\"minPriceMultiplier\"),\n  u64(\"maxPriceMultiplier\"),\n  u64(\"systemDecimalValue\"),\n  u64(\"minSeparateNumerator\"),\n  u64(\"minSeparateDenominator\"),\n  u64(\"tradeFeeNumerator\"),\n  u64(\"tradeFeeDenominator\"),\n  u64(\"pnlNumerator\"),\n  u64(\"pnlDenominator\"),\n  u64(\"swapFeeNumerator\"),\n  u64(\"swapFeeDenominator\"),\n  u64(\"baseNeedTakePnl\"),\n  u64(\"quoteNeedTakePnl\"),\n  u64(\"quoteTotalPnl\"),\n  u64(\"baseTotalPnl\"),\n  u128(\"quoteTotalDeposited\"),\n  u128(\"baseTotalDeposited\"),\n  u128(\"swapBaseInAmount\"),\n  u128(\"swapQuoteOutAmount\"),\n  u64(\"swapBase2QuoteFee\"),\n  u128(\"swapQuoteInAmount\"),\n  u128(\"swapBaseOutAmount\"),\n  u64(\"swapQuote2BaseFee\"),\n  // amm vault\n  publicKey(\"baseVault\"),\n  publicKey(\"quoteVault\"),\n  // mint\n  publicKey(\"baseMint\"),\n  publicKey(\"quoteMint\"),\n  publicKey(\"lpMint\"),\n  // market\n  publicKey(\"openOrders\"),\n  publicKey(\"marketId\"),\n  publicKey(\"marketProgramId\"),\n  publicKey(\"targetOrders\"),\n  publicKey(\"withdrawQueue\"),\n  publicKey(\"lpVault\"),\n  publicKey(\"owner\"),\n  // true circulating supply without lock up\n  u64(\"lpReserve\"),\n  seq(u64(), 3, \"padding\"),\n]);\n\nexport type LiquidityStateLayoutV4 = typeof LIQUIDITY_STATE_LAYOUT_V4;\nexport type LiquidityStateV4 = GetStructureSchema<LiquidityStateLayoutV4>;\n\nexport const LIQUIDITY_STATE_LAYOUT_V5 = struct([\n  u64(\"accountType\"),\n  u64(\"status\"),\n  u64(\"nonce\"),\n  u64(\"maxOrder\"),\n  u64(\"depth\"),\n  u64(\"baseDecimal\"),\n  u64(\"quoteDecimal\"),\n  u64(\"state\"),\n  u64(\"resetFlag\"),\n  u64(\"minSize\"),\n  u64(\"volMaxCutRatio\"),\n  u64(\"amountWaveRatio\"),\n  u64(\"baseLotSize\"),\n  u64(\"quoteLotSize\"),\n  u64(\"minPriceMultiplier\"),\n  u64(\"maxPriceMultiplier\"),\n  u64(\"systemDecimalsValue\"),\n  u64(\"abortTradeFactor\"),\n  u64(\"priceTickMultiplier\"),\n  u64(\"priceTick\"),\n  // Fees\n  u64(\"minSeparateNumerator\"),\n  u64(\"minSeparateDenominator\"),\n  u64(\"tradeFeeNumerator\"),\n  u64(\"tradeFeeDenominator\"),\n  u64(\"pnlNumerator\"),\n  u64(\"pnlDenominator\"),\n  u64(\"swapFeeNumerator\"),\n  u64(\"swapFeeDenominator\"),\n  // OutPutData\n  u64(\"baseNeedTakePnl\"),\n  u64(\"quoteNeedTakePnl\"),\n  u64(\"quoteTotalPnl\"),\n  u64(\"baseTotalPnl\"),\n  u64(\"poolOpenTime\"),\n  u64(\"punishPcAmount\"),\n  u64(\"punishCoinAmount\"),\n  u64(\"orderbookToInitTime\"),\n  u128(\"swapBaseInAmount\"),\n  u128(\"swapQuoteOutAmount\"),\n  u128(\"swapQuoteInAmount\"),\n  u128(\"swapBaseOutAmount\"),\n  u64(\"swapQuote2BaseFee\"),\n  u64(\"swapBase2QuoteFee\"),\n\n  publicKey(\"baseVault\"),\n  publicKey(\"quoteVault\"),\n  publicKey(\"baseMint\"),\n  publicKey(\"quoteMint\"),\n  publicKey(\"lpMint\"),\n\n  publicKey(\"modelDataAccount\"),\n  publicKey(\"openOrders\"),\n  publicKey(\"marketId\"),\n  publicKey(\"marketProgramId\"),\n  publicKey(\"targetOrders\"),\n  publicKey(\"owner\"),\n  seq(u64(), 64, \"padding\"),\n]);\n\nexport type LiquidityStateLayoutV5 = typeof LIQUIDITY_STATE_LAYOUT_V5;\nexport type LiquidityStateV5 = GetStructureSchema<LiquidityStateLayoutV5>;\n\nexport type LiquidityState = LiquidityStateV4 | LiquidityStateV5;\nexport type LiquidityStateLayout = LiquidityStateLayoutV4 | LiquidityStateLayoutV5;\n\n/* ================= index ================= */\n// version => liquidity state layout\nexport const LIQUIDITY_VERSION_TO_STATE_LAYOUT: {\n  [version: number]: LiquidityStateLayout;\n} = {\n  4: LIQUIDITY_STATE_LAYOUT_V4,\n  5: LIQUIDITY_STATE_LAYOUT_V5,\n};\n","import {\n  AccountInfo, ComputeBudgetProgram, Connection, PublicKey, Signer, Transaction, TransactionInstruction,\n} from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { Base, TokenAccount } from \"../base\";\nimport {\n  AccountMeta, AccountMetaReadonly, findProgramAddress, getMultipleAccountsInfo, GetMultipleAccountsInfoConfig, Logger,\n  parseSimulateLogToJson, parseSimulateValue, simulateMultipleInstruction, SYSTEM_PROGRAM_ID, SYSVAR_RENT_PUBKEY,\n  TOKEN_PROGRAM_ID,\n} from \"../common\";\nimport {\n  BigNumberish, Currency, CurrencyAmount, divCeil, ONE, parseBigNumberish, Percent, Price, Token, TokenAmount, ZERO,\n} from \"../entity\";\nimport { struct, u64, u8 } from \"../marshmallow\";\nimport { Market } from \"../serum\";\nimport { Spl } from \"../spl\";\n\nimport {\n  LIQUIDITY_PROGRAMID_TO_VERSION, LIQUIDITY_VERSION_TO_PROGRAMID, LIQUIDITY_VERSION_TO_SERUM_VERSION,\n} from \"./id\";\nimport { LIQUIDITY_VERSION_TO_STATE_LAYOUT, LiquidityStateLayout, LiquidityStateV4 } from \"./layout\";\nimport {\n  formatLayout, getDxByDyBaseIn, getDyByDxBaseIn, getStablePrice, ModelDataPubkey, stableModelLayout,\n} from \"./stable\";\nimport { LiquidityPoolJsonInfo } from \"./type\";\n\nconst logger = Logger.from(\"Liquidity\");\n\nlet modelData: stableModelLayout = {\n  accountType: 0,\n  status: 0,\n  multiplier: 0,\n  validDataCount: 0,\n  DataElement: [],\n};\n\nexport async function initStableModelLayout(connection: Connection) {\n  if (modelData.validDataCount === 0) {\n    if (connection) {\n      const acc = await connection.getAccountInfo(ModelDataPubkey);\n      if (acc) modelData = formatLayout(acc?.data);\n    }\n  }\n}\n\n// buy: quote => base\n// sell: base => quote\n// export type TradeSide = \"buy\" | \"sell\";\n\nexport type SwapSide = \"in\" | \"out\";\nexport type LiquiditySide = \"a\" | \"b\";\n// for inner instruction\nexport type AmountSide = \"base\" | \"quote\";\n\n/* ================= pool keys ================= */\nexport type LiquidityPoolKeysV4 = {\n  [T in keyof LiquidityPoolJsonInfo]: string extends LiquidityPoolJsonInfo[T] ? PublicKey : LiquidityPoolJsonInfo[T];\n};\n\n/**\n * Full liquidity pool keys that build transaction need\n */\nexport type LiquidityPoolKeys = LiquidityPoolKeysV4;\n\nexport interface LiquidityAssociatedPoolKeysV4\n  extends Omit<\n  LiquidityPoolKeysV4,\n  \"marketBaseVault\" | \"marketQuoteVault\" | \"marketBids\" | \"marketAsks\" | \"marketEventQueue\"\n  > {\n  nonce: number;\n}\n\n/**\n * Associated liquidity pool keys\n * @remarks\n * without partial markets keys\n */\nexport type LiquidityAssociatedPoolKeys = LiquidityAssociatedPoolKeysV4;\n\nexport enum LiquidityPoolStatus {\n  Uninitialized,\n  Initialized,\n  Disabled,\n  RemoveLiquidityOnly,\n  LiquidityOnly,\n  OrderBook,\n  Swap,\n  WaitingForStart,\n}\n\n/* ================= pool info ================= */\n/**\n * Liquidity pool info\n * @remarks\n * same data type with layouts\n */\nexport interface LiquidityPoolInfo {\n  status: BN;\n  baseDecimals: number;\n  quoteDecimals: number;\n  lpDecimals: number;\n  baseReserve: BN;\n  quoteReserve: BN;\n  lpSupply: BN;\n  startTime: BN;\n}\n\n/* ================= user keys ================= */\n/**\n * Full user keys that build transaction need\n */\nexport interface LiquidityUserKeys {\n  baseTokenAccount: PublicKey;\n  quoteTokenAccount: PublicKey;\n  lpTokenAccount: PublicKey;\n  owner: PublicKey;\n}\n\n// liquidity class\n// export interface LiquidityLoadParams {\n//   connection: Connection;\n//   poolKeys: LiquidityPoolKeys;\n//   poolInfo?: LiquidityPoolInfo;\n// }\n\n// export type LiquidityConstructParams = Required<LiquidityLoadParams>;\n\n/* ================= make instruction and transaction ================= */\nexport interface LiquidityAddInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: LiquidityUserKeys;\n  baseAmountIn: BigNumberish;\n  quoteAmountIn: BigNumberish;\n  fixedSide: AmountSide;\n}\n\n/**\n * Add liquidity instruction params\n */\nexport type LiquidityAddInstructionParams = LiquidityAddInstructionParamsV4;\n\n/**\n * Add liquidity transaction params\n */\nexport interface LiquidityAddTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  amountInA: CurrencyAmount | TokenAmount;\n  amountInB: CurrencyAmount | TokenAmount;\n  fixedSide: LiquiditySide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface LiquidityRemoveInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: LiquidityUserKeys;\n  amountIn: BigNumberish;\n}\n\n/**\n * Remove liquidity instruction params\n */\nexport type LiquidityRemoveInstructionParams = LiquidityRemoveInstructionParamsV4;\n\n/**\n * Remove liquidity transaction params\n */\nexport interface LiquidityRemoveTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  amountIn: TokenAmount;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface LiquiditySwapFixedInInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  amountIn: BigNumberish;\n  // minimum amount out\n  minAmountOut: BigNumberish;\n}\n\nexport interface LiquiditySwapFixedOutInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  // maximum amount in\n  maxAmountIn: BigNumberish;\n  amountOut: BigNumberish;\n}\n\n/**\n * Swap instruction params\n */\nexport interface LiquiditySwapInstructionParams {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  amountIn: BigNumberish;\n  amountOut: BigNumberish;\n  fixedSide: SwapSide;\n}\n\n/**\n * Swap transaction params\n */\nexport interface LiquiditySwapTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  amountIn: CurrencyAmount | TokenAmount;\n  amountOut: CurrencyAmount | TokenAmount;\n  fixedSide: SwapSide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface LiquidityCreatePoolInstructionParamsV4 {\n  poolKeys: LiquidityAssociatedPoolKeysV4;\n  userKeys: {\n    payer: PublicKey;\n  };\n}\n\n/**\n * Create pool instruction params\n */\nexport type LiquidityCreatePoolInstructionParams = LiquidityCreatePoolInstructionParamsV4;\n\n/**\n * Create pool transaction params\n */\nexport type LiquidityCreatePoolTransactionParams = LiquidityCreatePoolInstructionParams;\n\nexport interface LiquidityInitPoolInstructionParamsV4 {\n  poolKeys: LiquidityAssociatedPoolKeysV4;\n  userKeys: {\n    lpTokenAccount: PublicKey;\n    payer: PublicKey;\n  };\n  startTime: BigNumberish;\n}\n\n/**\n * Init pool instruction params\n */\nexport type LiquidityInitPoolInstructionParams = LiquidityInitPoolInstructionParamsV4;\n\n/**\n * Init pool transaction params\n */\nexport interface LiquidityInitPoolTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityAssociatedPoolKeysV4;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  baseAmount: CurrencyAmount | TokenAmount;\n  quoteAmount: CurrencyAmount | TokenAmount;\n  startTime?: BigNumberish;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\n/* ================= fetch data ================= */\n/**\n * Fetch liquidity pool info params\n */\nexport interface LiquidityFetchInfoParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n}\n\n/**\n * Fetch liquidity multiple pool info params\n */\nexport interface LiquidityFetchMultipleInfoParams {\n  connection: Connection;\n  pools: LiquidityPoolKeys[];\n  config?: GetMultipleAccountsInfoConfig;\n}\n\n/* ================= compute data ================= */\nexport interface LiquidityComputeAnotherAmountParams {\n  poolKeys: LiquidityPoolKeys;\n  poolInfo: LiquidityPoolInfo;\n  amount: CurrencyAmount | TokenAmount;\n  anotherCurrency: Currency | Token;\n  slippage: Percent;\n}\n\nexport const LIQUIDITY_FEES_NUMERATOR = new BN(25);\nexport const LIQUIDITY_FEES_DENOMINATOR = new BN(10000);\n\nexport interface LiquidityComputeAmountOutParams {\n  poolKeys: LiquidityPoolKeys;\n  poolInfo: LiquidityPoolInfo;\n  amountIn: CurrencyAmount | TokenAmount;\n  currencyOut: Currency | Token;\n  slippage: Percent;\n}\n\nexport interface LiquidityComputeAmountInParams\n  extends Omit<LiquidityComputeAmountOutParams, \"amountIn\" | \"currencyOut\"> {\n  amountOut: CurrencyAmount | TokenAmount;\n  currencyIn: Currency | Token;\n}\n\nexport class Liquidity extends Base {\n  // public connection: Connection;\n  // public poolKeys: LiquidityPoolKeys;\n  // public poolInfo: LiquidityPoolInfo;\n\n  // constructor({ connection, poolKeys, poolInfo }: LiquidityConstructParams) {\n  //   this.connection = connection;\n  //   this.poolKeys = poolKeys;\n  //   this.poolInfo = poolInfo;\n  // }\n\n  // static async load({ connection, poolKeys, poolInfo }: LiquidityLoadParams) {\n  //   const _poolInfo = poolInfo || (await this.fetchInfo({ connection, poolKeys }));\n\n  //   return new Liquidity({ connection, poolKeys, poolInfo: _poolInfo });\n  // }\n\n  /* ================= get version and program id ================= */\n  static getProgramId(version: number) {\n    const programId = LIQUIDITY_VERSION_TO_PROGRAMID[version];\n    logger.assertArgument(!!programId, \"invalid version\", \"version\", version);\n\n    return programId;\n  }\n\n  static getVersion(programId: PublicKey) {\n    const programIdString = programId.toBase58();\n\n    const version = LIQUIDITY_PROGRAMID_TO_VERSION[programIdString];\n    logger.assertArgument(!!version, \"invalid program id\", \"programId\", programIdString);\n\n    return version;\n  }\n\n  static getSerumVersion(version: number) {\n    const serumVersion = LIQUIDITY_VERSION_TO_SERUM_VERSION[version];\n    logger.assertArgument(!!serumVersion, \"invalid version\", \"version\", version);\n\n    return serumVersion;\n  }\n\n  /* ================= get layout ================= */\n  static getStateLayout(version: number) {\n    const STATE_LAYOUT = LIQUIDITY_VERSION_TO_STATE_LAYOUT[version];\n    logger.assertArgument(!!STATE_LAYOUT, \"invalid version\", \"version\", version);\n\n    return STATE_LAYOUT;\n  }\n\n  static getLayouts(version: number) {\n    return { state: this.getStateLayout(version) };\n  }\n\n  /* ================= get key ================= */\n  static getAssociatedId({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"amm_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedAuthority({ programId }: { programId: PublicKey }) {\n    return findProgramAddress(\n      // new Uint8Array(Buffer.from('amm authority'.replace('\\u00A0', ' '), 'utf-8'))\n      [Buffer.from([97, 109, 109, 32, 97, 117, 116, 104, 111, 114, 105, 116, 121])],\n      programId,\n    );\n  }\n\n  static getAssociatedBaseVault({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"coin_vault_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedQuoteVault({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"pc_vault_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedLpMint({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"lp_mint_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedLpVault({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"temp_lp_token_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedTargetOrders({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"target_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedWithdrawQueue({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"withdraw_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedOpenOrders({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"open_order_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static getAssociatedPoolKeys({\n    version,\n    marketVersion,\n    marketId,\n    baseMint,\n    quoteMint,\n    baseDecimals,\n    quoteDecimals,\n    programId,\n    marketProgramId\n  }: {\n    version: number;\n    marketVersion: number;\n    marketId: PublicKey;\n    baseMint: PublicKey;\n    quoteMint: PublicKey;\n    baseDecimals: number;\n    quoteDecimals: number;\n    programId: PublicKey;\n    marketProgramId: PublicKey;\n  }): LiquidityAssociatedPoolKeys {\n    const id = this.getAssociatedId({ programId, marketId });\n    const lpMint = this.getAssociatedLpMint({ programId, marketId });\n    const { publicKey: authority, nonce } = this.getAssociatedAuthority({ programId });\n    const baseVault = this.getAssociatedBaseVault({ programId, marketId });\n    const quoteVault = this.getAssociatedQuoteVault({ programId, marketId });\n    const lpVault = this.getAssociatedLpVault({ programId, marketId });\n    const openOrders = this.getAssociatedOpenOrders({ programId, marketId });\n    const targetOrders = this.getAssociatedTargetOrders({ programId, marketId });\n    const withdrawQueue = this.getAssociatedWithdrawQueue({ programId, marketId });\n\n    const { publicKey: marketAuthority } = Market.getAssociatedAuthority({\n      programId: marketProgramId,\n      marketId,\n    });\n\n    return {\n      // base\n      id,\n      baseMint,\n      quoteMint,\n      lpMint,\n      baseDecimals,\n      quoteDecimals,\n      lpDecimals: baseDecimals,\n      // version\n      version,\n      programId,\n      // keys\n      authority,\n      nonce,\n      baseVault,\n      quoteVault,\n      lpVault,\n      openOrders,\n      targetOrders,\n      withdrawQueue,\n      // market version\n      marketVersion,\n      marketProgramId,\n      // market keys\n      marketId,\n      marketAuthority,\n    };\n  }\n\n  /* ================= make instruction and transaction ================= */\n  static makeAddLiquidityInstruction(params: LiquidityAddInstructionParams) {\n    const { poolKeys, userKeys, baseAmountIn, quoteAmountIn, fixedSide } = params;\n    const { version } = poolKeys;\n\n    if (version === 4 || version === 5) {\n      const LAYOUT = struct([u8(\"instruction\"), u64(\"baseAmountIn\"), u64(\"quoteAmountIn\"), u64(\"fixedSide\")]);\n      const data = Buffer.alloc(LAYOUT.span);\n      LAYOUT.encode(\n        {\n          instruction: 3,\n          baseAmountIn: parseBigNumberish(baseAmountIn),\n          quoteAmountIn: parseBigNumberish(quoteAmountIn),\n          fixedSide: parseBigNumberish(fixedSide === \"base\" ? 0 : 1),\n        },\n        data,\n      );\n\n      const keys = [\n        // system\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMeta(poolKeys.id, false),\n        AccountMetaReadonly(poolKeys.authority, false),\n        AccountMetaReadonly(poolKeys.openOrders, false),\n        AccountMeta(poolKeys.targetOrders, false),\n        AccountMeta(poolKeys.lpMint, false),\n        AccountMeta(poolKeys.baseVault, false),\n        AccountMeta(poolKeys.quoteVault, false),\n      ];\n\n      if (version === 5) {\n        keys.push(AccountMeta(ModelDataPubkey, false));\n      }\n\n      keys.push(\n        // serum\n        AccountMetaReadonly(poolKeys.marketId, false),\n        // user\n        AccountMeta(userKeys.baseTokenAccount, false),\n        AccountMeta(userKeys.quoteTokenAccount, false),\n        AccountMeta(userKeys.lpTokenAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n        AccountMetaReadonly(poolKeys.marketEventQueue, false),\n      );\n\n      return new TransactionInstruction({\n        programId: poolKeys.programId,\n        keys,\n        data,\n      });\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static async makeAddLiquidityTransaction(params: LiquidityAddTransactionParams) {\n    const { connection, poolKeys, userKeys, amountInA, amountInB, fixedSide, config } = params;\n    const { lpMint } = poolKeys;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    logger.debug(\"amountInA:\", amountInA);\n    logger.debug(\"amountInB:\", amountInB);\n    logger.assertArgument(\n      !amountInA.isZero() && !amountInB.isZero(),\n      \"amounts must greater than zero\",\n      \"amountInA & amountInB\",\n      {\n        amountInA: amountInA.toFixed(),\n        amountInB: amountInB.toFixed(),\n      },\n    );\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    // handle currency a & b (convert SOL to WSOL)\n    const tokenA = amountInA instanceof TokenAmount ? amountInA.token : Token.WSOL;\n    const tokenB = amountInB instanceof TokenAmount ? amountInB.token : Token.WSOL;\n\n    const tokenAccountA = this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenA.mint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    const tokenAccountB = this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenB.mint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    logger.assertArgument(\n      !!tokenAccountA || !!tokenAccountB,\n      \"cannot found target token accounts\",\n      \"tokenAccounts\",\n      tokenAccounts,\n    );\n    const lpTokenAccount = this._selectTokenAccount({\n      tokenAccounts,\n      mint: lpMint,\n      owner,\n    });\n\n    const tokens = [tokenA, tokenB];\n    const _tokenAccounts = [tokenAccountA, tokenAccountB];\n    const rawAmounts = [amountInA.raw, amountInB.raw];\n\n    // handle amount a & b and direction\n    const [sideA] = this._getAmountsSide(amountInA, amountInB, poolKeys);\n    let _fixedSide: AmountSide = \"base\";\n    if (sideA === \"quote\") {\n      // reverse\n      tokens.reverse();\n      _tokenAccounts.reverse();\n      rawAmounts.reverse();\n\n      if (fixedSide === \"a\") _fixedSide = \"quote\";\n      else if (fixedSide === \"b\") _fixedSide = \"base\";\n      else return logger.throwArgumentError(\"invalid fixedSide\", \"fixedSide\", fixedSide);\n    } else if (sideA === \"base\") {\n      if (fixedSide === \"a\") _fixedSide = \"base\";\n      else if (fixedSide === \"b\") _fixedSide = \"quote\";\n      else return logger.throwArgumentError(\"invalid fixedSide\", \"fixedSide\", fixedSide);\n    } else return logger.throwArgumentError(\"invalid fixedSide\", \"fixedSide\", fixedSide);\n\n    const [baseToken, quoteToken] = tokens;\n    const [baseTokenAccount, quoteTokenAccount] = _tokenAccounts;\n    const [baseAmountRaw, quoteAmountRaw] = rawAmounts;\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _baseTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: baseAmountRaw,\n      mint: baseToken.mint,\n      tokenAccount: baseTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _quoteTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: quoteAmountRaw,\n      mint: quoteToken.mint,\n      tokenAccount: quoteTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _lpTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: lpMint,\n      tokenAccount: lpTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      this.makeAddLiquidityInstruction({\n        poolKeys,\n        userKeys: {\n          baseTokenAccount: _baseTokenAccount,\n          quoteTokenAccount: _quoteTokenAccount,\n          lpTokenAccount: _lpTokenAccount,\n          owner,\n        },\n        baseAmountIn: baseAmountRaw,\n        quoteAmountIn: quoteAmountRaw,\n        fixedSide: _fixedSide,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeRemoveLiquidityInstruction(params: LiquidityRemoveInstructionParams) {\n    const { poolKeys, userKeys, amountIn } = params;\n    const { version } = poolKeys;\n\n    if (version === 4 || version === 5) {\n      const LAYOUT = struct([u8(\"instruction\"), u64(\"amountIn\")]);\n      const data = Buffer.alloc(LAYOUT.span);\n      LAYOUT.encode(\n        {\n          instruction: 4,\n          amountIn: parseBigNumberish(amountIn),\n        },\n        data,\n      );\n\n      const keys = [\n        // system\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMeta(poolKeys.id, false),\n        AccountMetaReadonly(poolKeys.authority, false),\n        AccountMeta(poolKeys.openOrders, false),\n        AccountMeta(poolKeys.targetOrders, false),\n        AccountMeta(poolKeys.lpMint, false),\n        AccountMeta(poolKeys.baseVault, false),\n        AccountMeta(poolKeys.quoteVault, false),\n      ];\n\n      if (version === 5) {\n        keys.push(AccountMeta(ModelDataPubkey, false));\n      } else {\n        keys.push(AccountMeta(poolKeys.withdrawQueue, false));\n        keys.push(AccountMeta(poolKeys.lpVault, false));\n      }\n\n      keys.push(\n        // serum\n        AccountMetaReadonly(poolKeys.marketProgramId, false),\n        AccountMeta(poolKeys.marketId, false),\n        AccountMeta(poolKeys.marketBaseVault, false),\n        AccountMeta(poolKeys.marketQuoteVault, false),\n        AccountMetaReadonly(poolKeys.marketAuthority, false),\n        // user\n        AccountMeta(userKeys.lpTokenAccount, false),\n        AccountMeta(userKeys.baseTokenAccount, false),\n        AccountMeta(userKeys.quoteTokenAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n        // serum orderbook\n        AccountMeta(poolKeys.marketEventQueue, false),\n        AccountMeta(poolKeys.marketBids, false),\n        AccountMeta(poolKeys.marketAsks, false),\n      );\n\n      return new TransactionInstruction({\n        programId: poolKeys.programId,\n        keys,\n        data,\n      });\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static async makeRemoveLiquidityTransaction(params: LiquidityRemoveTransactionParams) {\n    const { connection, poolKeys, userKeys, amountIn, config } = params;\n    const { baseMint, quoteMint, lpMint } = poolKeys;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    logger.debug(\"amountIn:\", amountIn);\n    logger.assertArgument(!amountIn.isZero(), \"amount must greater than zero\", \"amountIn\", amountIn.toFixed());\n    logger.assertArgument(\n      amountIn instanceof TokenAmount && amountIn.token.mint.equals(lpMint),\n      \"amountIn's token not match lpMint\",\n      \"amountIn\",\n      amountIn,\n    );\n    const lpTokenAccount = this._selectTokenAccount({\n      tokenAccounts,\n      mint: lpMint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    if (!lpTokenAccount)\n      return logger.throwArgumentError(\"cannot found lpTokenAccount\", \"tokenAccounts\", tokenAccounts);\n\n    const baseTokenAccount = this._selectTokenAccount({\n      tokenAccounts,\n      mint: baseMint,\n      owner,\n    });\n    const quoteTokenAccount = this._selectTokenAccount({\n      tokenAccounts,\n      mint: quoteMint,\n      owner,\n    });\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _lpTokenAccount = lpTokenAccount;\n    const _baseTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: baseMint,\n      tokenAccount: baseTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _quoteTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: quoteMint,\n      tokenAccount: quoteTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      ComputeBudgetProgram.requestUnits({\n        units: 400000,\n        additionalFee: 0,\n      }),\n    );\n\n    frontInstructions.push(\n      this.makeRemoveLiquidityInstruction({\n        poolKeys,\n        userKeys: {\n          lpTokenAccount: _lpTokenAccount,\n          baseTokenAccount: _baseTokenAccount,\n          quoteTokenAccount: _quoteTokenAccount,\n          owner,\n        },\n        amountIn: amountIn.raw,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeSwapInstruction(params: LiquiditySwapInstructionParams) {\n    const { poolKeys, userKeys, amountIn, amountOut, fixedSide } = params;\n    const { version } = poolKeys;\n\n    if (version === 4 || version === 5) {\n      if (fixedSide === \"in\") {\n        return this.makeSwapFixedInInstruction(\n          {\n            poolKeys,\n            userKeys,\n            amountIn,\n            minAmountOut: amountOut,\n          },\n          version,\n        );\n      } else if (fixedSide === \"out\") {\n        return this.makeSwapFixedOutInstruction(\n          {\n            poolKeys,\n            userKeys,\n            maxAmountIn: amountIn,\n            amountOut,\n          },\n          version,\n        );\n      }\n\n      return logger.throwArgumentError(\"invalid params\", \"params\", params);\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static makeSwapFixedInInstruction(\n    { poolKeys, userKeys, amountIn, minAmountOut }: LiquiditySwapFixedInInstructionParamsV4,\n    version: number,\n  ) {\n    const LAYOUT = struct([u8(\"instruction\"), u64(\"amountIn\"), u64(\"minAmountOut\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 9,\n        amountIn: parseBigNumberish(amountIn),\n        minAmountOut: parseBigNumberish(minAmountOut),\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      // amm\n      AccountMeta(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.openOrders, false),\n    ];\n\n    if (version === 4) {\n      keys.push(AccountMeta(poolKeys.targetOrders, false));\n    }\n\n    keys.push(AccountMeta(poolKeys.baseVault, false), AccountMeta(poolKeys.quoteVault, false));\n\n    if (version === 5) {\n      keys.push(AccountMeta(ModelDataPubkey, false));\n    }\n\n    keys.push(\n      // serum\n      AccountMetaReadonly(poolKeys.marketProgramId, false),\n      AccountMeta(poolKeys.marketId, false),\n      AccountMeta(poolKeys.marketBids, false),\n      AccountMeta(poolKeys.marketAsks, false),\n      AccountMeta(poolKeys.marketEventQueue, false),\n      AccountMeta(poolKeys.marketBaseVault, false),\n      AccountMeta(poolKeys.marketQuoteVault, false),\n      AccountMetaReadonly(poolKeys.marketAuthority, false),\n      // user\n      AccountMeta(userKeys.tokenAccountIn, false),\n      AccountMeta(userKeys.tokenAccountOut, false),\n      AccountMetaReadonly(userKeys.owner, true),\n    );\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static makeSwapFixedOutInstruction(\n    { poolKeys, userKeys, maxAmountIn, amountOut }: LiquiditySwapFixedOutInstructionParamsV4,\n    version: number,\n  ) {\n    const LAYOUT = struct([u8(\"instruction\"), u64(\"maxAmountIn\"), u64(\"amountOut\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 11,\n        maxAmountIn: parseBigNumberish(maxAmountIn),\n        amountOut: parseBigNumberish(amountOut),\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      // amm\n      AccountMeta(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.openOrders, false),\n      AccountMeta(poolKeys.targetOrders, false),\n      AccountMeta(poolKeys.baseVault, false),\n      AccountMeta(poolKeys.quoteVault, false),\n    ];\n\n    if (version === 5) {\n      keys.push(AccountMeta(ModelDataPubkey, false));\n    }\n\n    keys.push(\n      // serum\n      AccountMetaReadonly(poolKeys.marketProgramId, false),\n      AccountMeta(poolKeys.marketId, false),\n      AccountMeta(poolKeys.marketBids, false),\n      AccountMeta(poolKeys.marketAsks, false),\n      AccountMeta(poolKeys.marketEventQueue, false),\n      AccountMeta(poolKeys.marketBaseVault, false),\n      AccountMeta(poolKeys.marketQuoteVault, false),\n      AccountMetaReadonly(poolKeys.marketAuthority, false),\n      // user\n      AccountMeta(userKeys.tokenAccountIn, false),\n      AccountMeta(userKeys.tokenAccountOut, false),\n      AccountMetaReadonly(userKeys.owner, true),\n    );\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static async makeSwapTransaction(params: LiquiditySwapTransactionParams) {\n    const { connection, poolKeys, userKeys, amountIn, amountOut, fixedSide, config } = params;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    logger.debug(\"amountIn:\", amountIn);\n    logger.debug(\"amountOut:\", amountOut);\n    logger.assertArgument(\n      !amountIn.isZero() && !amountOut.isZero(),\n      \"amounts must greater than zero\",\n      \"currencyAmounts\",\n      {\n        amountIn: amountIn.toFixed(),\n        amountOut: amountOut.toFixed(),\n      },\n    );\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    // handle currency in & out (convert SOL to WSOL)\n    const tokenIn = amountIn instanceof TokenAmount ? amountIn.token : Token.WSOL;\n    const tokenOut = amountOut instanceof TokenAmount ? amountOut.token : Token.WSOL;\n\n    const tokenAccountIn = this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenIn.mint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    const tokenAccountOut = this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenOut.mint,\n      owner,\n    });\n\n    const [amountInRaw, amountOutRaw] = [amountIn.raw, amountOut.raw];\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _tokenAccountIn = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: amountInRaw,\n      mint: tokenIn.mint,\n      tokenAccount: tokenAccountIn,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _tokenAccountOut = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: tokenOut.mint,\n      tokenAccount: tokenAccountOut,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      this.makeSwapInstruction({\n        poolKeys,\n        userKeys: {\n          tokenAccountIn: _tokenAccountIn,\n          tokenAccountOut: _tokenAccountOut,\n          owner,\n        },\n        amountIn: amountInRaw,\n        amountOut: amountOutRaw,\n        fixedSide,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeCreatePoolInstruction(params: LiquidityCreatePoolInstructionParams) {\n    const { poolKeys } = params;\n    const { version } = poolKeys;\n\n    if (version === 4) {\n      return this.makeCreatePoolInstructionV4(params);\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static makeCreatePoolInstructionV4({ poolKeys, userKeys }: LiquidityCreatePoolInstructionParamsV4) {\n    const LAYOUT = struct([u8(\"instruction\"), u8(\"nonce\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 10,\n        nonce: poolKeys.nonce,\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSTEM_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSVAR_RENT_PUBKEY, false),\n      // amm\n      AccountMeta(poolKeys.targetOrders, false),\n      AccountMeta(poolKeys.withdrawQueue, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.lpMint, false),\n      AccountMetaReadonly(poolKeys.baseMint, false),\n      AccountMetaReadonly(poolKeys.quoteMint, false),\n      AccountMeta(poolKeys.baseVault, false),\n      AccountMeta(poolKeys.quoteVault, false),\n      AccountMeta(poolKeys.lpVault, false),\n      // serum\n      AccountMetaReadonly(poolKeys.marketId, false),\n      // user\n      AccountMeta(userKeys.payer, true),\n    ];\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static makeCreatePoolTransaction(params: LiquidityCreatePoolTransactionParams) {\n    const transaction = new Transaction();\n    const signers: Signer[] = [];\n\n    transaction.add(this.makeCreatePoolInstruction(params));\n\n    return { transaction, signers };\n  }\n\n  static makeInitPoolInstruction(params: LiquidityInitPoolInstructionParams) {\n    const { poolKeys } = params;\n    const { version } = poolKeys;\n\n    if (version === 4) {\n      return this.makeInitPoolInstructionV4(params);\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static makeInitPoolInstructionV4({ poolKeys, userKeys, startTime }: LiquidityInitPoolInstructionParamsV4) {\n    const LAYOUT = struct([u8(\"instruction\"), u8(\"nonce\"), u64(\"startTime\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 0,\n        nonce: poolKeys.nonce,\n        startTime: parseBigNumberish(startTime),\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSTEM_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSVAR_RENT_PUBKEY, false),\n      // amm\n      AccountMeta(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.openOrders, false),\n      AccountMeta(poolKeys.lpMint, false),\n      AccountMetaReadonly(poolKeys.baseMint, false),\n      AccountMetaReadonly(poolKeys.quoteMint, false),\n      AccountMetaReadonly(poolKeys.baseVault, false),\n      AccountMetaReadonly(poolKeys.quoteVault, false),\n      AccountMeta(poolKeys.withdrawQueue, false),\n      AccountMeta(poolKeys.targetOrders, false),\n      AccountMeta(userKeys.lpTokenAccount, false),\n      AccountMetaReadonly(poolKeys.lpVault, false),\n      // serum\n      AccountMetaReadonly(poolKeys.marketProgramId, false),\n      AccountMetaReadonly(poolKeys.marketId, false),\n      // user\n      AccountMeta(userKeys.payer, true),\n    ];\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static async makeInitPoolTransaction(params: LiquidityInitPoolTransactionParams) {\n    const { connection, poolKeys, userKeys, baseAmount, quoteAmount, startTime = 0, config } = params;\n    const { baseMint, quoteMint, lpMint, baseVault, quoteVault } = poolKeys;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    const baseTokenAccount = this._selectTokenAccount({\n      tokenAccounts,\n      mint: baseMint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    const quoteTokenAccount = this._selectTokenAccount({\n      tokenAccounts,\n      mint: quoteMint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    logger.assertArgument(\n      !!baseTokenAccount || !!quoteTokenAccount,\n      \"cannot found target token accounts\",\n      \"tokenAccounts\",\n      tokenAccounts,\n    );\n    const lpTokenAccount = this._selectTokenAccount({\n      tokenAccounts,\n      mint: lpMint,\n      owner,\n    });\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _baseTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: baseAmount.raw,\n      mint: baseMint,\n      tokenAccount: baseTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _quoteTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: quoteAmount.raw,\n      mint: quoteMint,\n      tokenAccount: quoteTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _lpTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: lpMint,\n      tokenAccount: lpTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      Spl.makeTransferInstruction({\n        source: _baseTokenAccount,\n        destination: baseVault,\n        owner,\n        amount: baseAmount.raw,\n      }),\n    );\n    frontInstructions.push(\n      Spl.makeTransferInstruction({\n        source: _quoteTokenAccount,\n        destination: quoteVault,\n        owner,\n        amount: quoteAmount.raw,\n      }),\n    );\n    frontInstructions.push(\n      this.makeInitPoolInstruction({\n        poolKeys,\n        userKeys: {\n          lpTokenAccount: _lpTokenAccount,\n          payer,\n        },\n        startTime,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeSimulatePoolInfoInstruction({ poolKeys }: { poolKeys: LiquidityPoolKeys }) {\n    const LAYOUT = struct([u8(\"instruction\"), u8(\"simulateType\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 12,\n        simulateType: 0,\n      },\n      data,\n    );\n\n    const keys = [\n      // amm\n      AccountMetaReadonly(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMetaReadonly(poolKeys.openOrders, false),\n      AccountMetaReadonly(poolKeys.baseVault, false),\n      AccountMetaReadonly(poolKeys.quoteVault, false),\n      AccountMetaReadonly(poolKeys.lpMint, false),\n      // serum\n      AccountMetaReadonly(poolKeys.marketId, false),\n      AccountMetaReadonly(poolKeys.marketEventQueue, false),\n    ];\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static isV4(lsl: any): lsl is LiquidityStateV4 {\n    return lsl.withdrawQueue !== undefined;\n  }\n\n  /* ================= fetch data ================= */\n  /**\n   * Fetch all pools keys from on-chain data\n   */\n  static async fetchAllPoolKeys(\n    connection: Connection,\n    config?: GetMultipleAccountsInfoConfig,\n  ): Promise<LiquidityPoolKeys[]> {\n    // supported versions\n    const supported = Object.keys(LIQUIDITY_VERSION_TO_STATE_LAYOUT).map((v) => {\n      const version = Number(v);\n      const serumVersion = this.getSerumVersion(version);\n      const serumProgramId = Market.getProgramId(serumVersion);\n      return {\n        version,\n        programId: this.getProgramId(version),\n        serumVersion,\n        serumProgramId,\n        stateLayout: this.getStateLayout(version),\n      };\n    });\n\n    let poolsAccountInfo: {\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer>;\n\n      version: number;\n      programId: PublicKey;\n      serumVersion: number;\n      serumProgramId: PublicKey;\n      stateLayout: LiquidityStateLayout;\n    }[][] = [];\n    try {\n      poolsAccountInfo = await Promise.all(\n        supported.map(({ programId, version, serumVersion, serumProgramId, stateLayout }) =>\n          connection\n            .getProgramAccounts(programId, {\n              filters: [{ dataSize: stateLayout.span }],\n            })\n            .then((accounts) => {\n              return accounts.map((info) => {\n                return {\n                  ...info,\n                  ...{ version, programId, serumVersion, serumProgramId, stateLayout },\n                };\n              });\n            }),\n        ),\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to fetch all liquidity pools\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n\n    const flatPoolsAccountInfo = poolsAccountInfo.flat();\n    // temp pool keys without market keys\n    const tempPoolsKeys: Omit<LiquidityAssociatedPoolKeys, \"nonce\">[] = [];\n\n    for (const {\n      pubkey,\n      account: accountInfo,\n      version,\n      programId,\n      serumVersion,\n      serumProgramId,\n      stateLayout: LIQUIDITY_STATE_LAYOUT,\n    } of flatPoolsAccountInfo) {\n      logger.assertArgument(!!accountInfo, \"empty state account info\", \"pool.id\", pubkey);\n\n      const { data } = accountInfo;\n      logger.assertArgument(\n        data.length === LIQUIDITY_STATE_LAYOUT.span,\n        \"invalid state data length\",\n        \"pool.id\",\n        pubkey,\n      );\n\n      const fields = LIQUIDITY_STATE_LAYOUT.decode(data);\n\n      const { status, baseMint, quoteMint, baseDecimal, quoteDecimal, lpMint, openOrders, targetOrders, baseVault, quoteVault, marketId } =\n        fields;\n\n      let withdrawQueue, lpVault;\n      if (this.isV4(fields)) {\n        withdrawQueue = fields.withdrawQueue;\n        lpVault = fields.lpVault;\n      } else {\n        withdrawQueue = PublicKey.default;\n        lpVault = PublicKey.default;\n      }\n      // uninitialized\n      if (status.isZero()) {\n        continue;\n      }\n\n      const associatedPoolKeys = Liquidity.getAssociatedPoolKeys({\n        version,\n        marketVersion: serumVersion,\n        marketId,\n        baseMint,\n        baseDecimals: baseDecimal.toNumber(),\n        quoteMint,\n        quoteDecimals: quoteDecimal.toNumber(),\n        programId,\n        marketProgramId: serumProgramId\n      });\n      // double check keys with on-chain data\n      // logger.assert(Number(nonce) === associatedPoolKeys.nonce, \"invalid nonce\");\n\n      tempPoolsKeys.push({\n        id: pubkey,\n        baseMint,\n        quoteMint,\n        baseDecimals: associatedPoolKeys.baseDecimals,\n        quoteDecimals: associatedPoolKeys.quoteDecimals,\n        lpDecimals: associatedPoolKeys.lpDecimals,\n        lpMint,\n        version,\n        programId,\n\n        authority: associatedPoolKeys.authority,\n        openOrders,\n        targetOrders,\n        baseVault,\n        quoteVault,\n        withdrawQueue,\n        lpVault,\n        marketVersion: serumVersion,\n        marketProgramId: serumProgramId,\n        marketId,\n        marketAuthority: associatedPoolKeys.marketAuthority,\n      });\n    }\n\n    // fetch market keys\n    let marketsInfo: (AccountInfo<Buffer> | null)[] = [];\n    try {\n      marketsInfo = await getMultipleAccountsInfo(\n        connection,\n        tempPoolsKeys.map(({ marketId }) => marketId),\n        config,\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to fetch markets\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n\n    logger.assertArgument(\n      marketsInfo.length === tempPoolsKeys.length,\n      \"markets count not equal to pools\",\n      \"markets.length\",\n      marketsInfo.length,\n    );\n\n    const poolsKeys: LiquidityPoolKeys[] = [];\n\n    for (const index in marketsInfo) {\n      const poolKeys = tempPoolsKeys[index];\n      const marketInfo = marketsInfo[index];\n\n      const { id, marketVersion } = poolKeys;\n\n      if (!marketInfo) {\n        return logger.throwArgumentError(\"empty market account info\", \"pool.id\", id);\n      }\n\n      const { data } = marketInfo;\n      const { state: MARKET_STATE_LAYOUT } = Market.getLayouts(marketVersion);\n      logger.assertArgument(data.length === MARKET_STATE_LAYOUT.span, \"invalid market data length\", \"pool.id\", id);\n\n      const {\n        baseVault: marketBaseVault,\n        quoteVault: marketQuoteVault,\n        bids: marketBids,\n        asks: marketAsks,\n        eventQueue: marketEventQueue,\n      } = MARKET_STATE_LAYOUT.decode(data);\n\n      poolsKeys.push({\n        ...poolKeys,\n        ...{\n          marketBaseVault,\n          marketQuoteVault,\n          marketBids,\n          marketAsks,\n          marketEventQueue,\n        },\n      });\n    }\n\n    return poolsKeys;\n  }\n\n  /**\n   * Fetch liquidity pool's info\n   */\n  static async fetchInfo({ connection, poolKeys }: LiquidityFetchInfoParams) {\n    const info = await this.fetchMultipleInfo({ connection, pools: [poolKeys] });\n\n    logger.assertArgument(\n      info.length === 1,\n      `fetchInfo failed, ${info.length} pools found`,\n      \"poolKeys.id\",\n      poolKeys.id,\n    );\n\n    return info[0];\n  }\n\n  /**\n   * Fetch multiple info of liquidity pools\n   */\n  static async fetchMultipleInfo({\n    connection,\n    pools,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    config,\n  }: LiquidityFetchMultipleInfoParams): Promise<LiquidityPoolInfo[]> {\n    await initStableModelLayout(connection);\n\n    const instructions = pools.map((pool) => this.makeSimulatePoolInfoInstruction({ poolKeys: pool }));\n\n    const logs = await simulateMultipleInstruction(connection, instructions, \"GetPoolData\");\n\n    const poolsInfo = logs.map((log) => {\n      const json = parseSimulateLogToJson(log, \"GetPoolData\");\n\n      const status = new BN(parseSimulateValue(json, \"status\"));\n      const baseDecimals = Number(parseSimulateValue(json, \"coin_decimals\"));\n      const quoteDecimals = Number(parseSimulateValue(json, \"pc_decimals\"));\n      const lpDecimals = Number(parseSimulateValue(json, \"lp_decimals\"));\n      const baseReserve = new BN(parseSimulateValue(json, \"pool_coin_amount\"));\n      const quoteReserve = new BN(parseSimulateValue(json, \"pool_pc_amount\"));\n      const lpSupply = new BN(parseSimulateValue(json, \"pool_lp_supply\"));\n      // TODO fix it when split stable\n      let startTime = \"0\";\n      try {\n        startTime = parseSimulateValue(json, \"pool_open_time\");\n      } catch (error) {\n        //\n      }\n\n      return {\n        status,\n        baseDecimals,\n        quoteDecimals,\n        lpDecimals,\n        baseReserve,\n        quoteReserve,\n        lpSupply,\n        startTime: new BN(startTime),\n      };\n    });\n\n    return poolsInfo;\n  }\n\n  /* ================= compute data ================= */\n  static getEnabledFeatures(poolInfo: LiquidityPoolInfo) {\n    const { status } = poolInfo;\n    const _status = status.toNumber();\n\n    if (_status === LiquidityPoolStatus.Uninitialized)\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: false,\n      };\n    else if (_status === LiquidityPoolStatus.Initialized)\n      return {\n        swap: true,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.Disabled)\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: false,\n      };\n    else if (_status === LiquidityPoolStatus.RemoveLiquidityOnly)\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.LiquidityOnly)\n      return {\n        swap: false,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.OrderBook)\n      return {\n        swap: false,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.Swap)\n      return {\n        swap: true,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.WaitingForStart) {\n      // handle start time\n      const { startTime } = poolInfo;\n      if (Date.now() / 1000 < startTime.toNumber())\n        return {\n          swap: false,\n          addLiquidity: true,\n          removeLiquidity: true,\n        };\n\n      return {\n        swap: true,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    } else\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: false,\n      };\n  }\n\n  static includesToken(token: Token, poolKeys: LiquidityPoolKeys) {\n    const { baseMint, quoteMint } = poolKeys;\n\n    return token.mint.equals(baseMint) || token.mint.equals(quoteMint);\n  }\n\n  /**\n   * Get token side of liquidity pool\n   * @param token - the token provided\n   * @param poolKeys - the pool keys\n   * @returns token side is `base` or `quote`\n   */\n  static _getTokenSide(token: Token, poolKeys: LiquidityPoolKeys): AmountSide {\n    const { baseMint, quoteMint } = poolKeys;\n\n    if (token.mint.equals(baseMint)) return \"base\";\n    else if (token.mint.equals(quoteMint)) return \"quote\";\n    else\n      return logger.throwArgumentError(\"token not match with pool\", \"params\", {\n        token: token.mint,\n        baseMint,\n        quoteMint,\n      });\n  }\n\n  /**\n   * Get tokens side of liquidity pool\n   * @param tokenA - the token provided\n   * @param tokenB - the token provided\n   * @param poolKeys - the pool keys\n   * @returns tokens side array\n   */\n  static _getTokensSide(tokenA: Token, tokenB: Token, poolKeys: LiquidityPoolKeys): AmountSide[] {\n    const { baseMint, quoteMint } = poolKeys;\n\n    const sideA = this._getTokenSide(tokenA, poolKeys);\n    const sideB = this._getTokenSide(tokenB, poolKeys);\n\n    logger.assertArgument(sideA !== sideB, \"tokens not match with pool\", \"params\", {\n      tokenA: tokenA.mint,\n      tokenB: tokenB.mint,\n      baseMint,\n      quoteMint,\n    });\n    return [sideA, sideB];\n  }\n\n  /**\n   * Get currency amount side of liquidity pool\n   * @param amount - the currency amount provided\n   * @param poolKeys - the pool keys\n   * @returns currency amount side is `base` or `quote`\n   */\n  static _getAmountSide(amount: CurrencyAmount | TokenAmount, poolKeys: LiquidityPoolKeys): AmountSide {\n    const token = amount instanceof TokenAmount ? amount.token : Token.WSOL;\n\n    return this._getTokenSide(token, poolKeys);\n  }\n\n  /**\n   * Get currencies amount side of liquidity pool\n   * @param amountA - the currency amount provided\n   * @param amountB - the currency amount provided\n   * @param poolKeys - the pool keys\n   * @returns currencies amount side array\n   */\n  static _getAmountsSide(\n    amountA: CurrencyAmount | TokenAmount,\n    amountB: CurrencyAmount | TokenAmount,\n    poolKeys: LiquidityPoolKeys,\n  ): AmountSide[] {\n    const tokenA = amountA instanceof TokenAmount ? amountA.token : Token.WSOL;\n    const tokenB = amountB instanceof TokenAmount ? amountB.token : Token.WSOL;\n\n    return this._getTokensSide(tokenA, tokenB, poolKeys);\n  }\n\n  /**\n   * Compute the another currency amount of add liquidity\n   *\n   * @param params - {@link LiquidityComputeAnotherAmountParams}\n   *\n   * @returns\n   * anotherCurrencyAmount - currency amount without slippage\n   * @returns\n   * maxAnotherCurrencyAmount - currency amount with slippage\n   *\n   * @returns {@link CurrencyAmount}\n   *\n   * @example\n   * ```\n   * Liquidity.computeAnotherAmount({\n   *   // 1%\n   *   slippage: new Percent(1, 100)\n   * })\n   * ```\n   */\n  static computeAnotherAmount({\n    poolKeys,\n    poolInfo,\n    amount,\n    anotherCurrency,\n    slippage,\n  }: LiquidityComputeAnotherAmountParams):\n    | { anotherAmount: CurrencyAmount; maxAnotherAmount: CurrencyAmount }\n    | { anotherAmount: TokenAmount; maxAnotherAmount: TokenAmount } {\n    const { baseReserve, quoteReserve } = poolInfo;\n    logger.debug(\"baseReserve:\", baseReserve.toString());\n    logger.debug(\"quoteReserve:\", quoteReserve.toString());\n\n    const currencyIn = amount instanceof TokenAmount ? amount.token : amount.currency;\n    logger.debug(\"currencyIn:\", currencyIn);\n    logger.debug(\"amount:\", amount.toFixed());\n    logger.debug(\"anotherCurrency:\", anotherCurrency);\n    logger.debug(\"slippage:\", `${slippage.toSignificant()}%`);\n\n    // input is fixed\n    const input = this._getAmountSide(amount, poolKeys);\n    logger.debug(\"input side:\", input);\n\n    // round up\n    let amountRaw = ZERO;\n    if (!amount.isZero()) {\n      amountRaw =\n        input === \"base\"\n          ? divCeil(amount.raw.mul(quoteReserve), baseReserve)\n          : divCeil(amount.raw.mul(baseReserve), quoteReserve);\n    }\n\n    const _slippage = new Percent(ONE).add(slippage);\n    const slippageAdjustedAmount = _slippage.mul(amountRaw).quotient;\n\n    const _anotherAmount =\n      anotherCurrency instanceof Token\n        ? new TokenAmount(anotherCurrency, amountRaw)\n        : new CurrencyAmount(anotherCurrency, amountRaw);\n    const _maxAnotherAmount =\n      anotherCurrency instanceof Token\n        ? new TokenAmount(anotherCurrency, slippageAdjustedAmount)\n        : new CurrencyAmount(anotherCurrency, slippageAdjustedAmount);\n    logger.debug(\"anotheAmount:\", _anotherAmount.toFixed());\n    logger.debug(\"maxAnotheAmount:\", _maxAnotherAmount.toFixed());\n\n    return {\n      anotherAmount: _anotherAmount,\n      maxAnotherAmount: _maxAnotherAmount,\n    };\n  }\n\n  static _computePriceImpact(currentPrice: Price, amountIn: BN, amountOut: BN) {\n    const exactQuote = currentPrice.raw.mul(amountIn);\n    // calculate slippage := (exactQuote - outputAmount) / exactQuote\n    const slippage = exactQuote.sub(amountOut).div(exactQuote);\n    return new Percent(slippage.numerator, slippage.denominator);\n  }\n\n  static getRate(poolInfo: LiquidityPoolInfo) {\n    const { baseReserve, quoteReserve, baseDecimals, quoteDecimals } = poolInfo;\n    const price = new Price(new Currency(baseDecimals), baseReserve, new Currency(quoteDecimals), quoteReserve);\n\n    return price;\n  }\n\n  /**\n   * Compute output currency amount of swap\n   *\n   * @param params - {@link LiquidityComputeAmountOutParams}\n   *\n   * @returns\n   * amountOut - currency amount without slippage\n   * @returns\n   * minAmountOut - currency amount with slippage\n   */\n  static computeAmountOut = ({\n    poolKeys,\n    poolInfo,\n    amountIn,\n    currencyOut,\n    slippage,\n  }: LiquidityComputeAmountOutParams):\n    | {\n      amountOut: CurrencyAmount;\n      minAmountOut: CurrencyAmount;\n      currentPrice: Price;\n      executionPrice: Price | null;\n      priceImpact: Percent;\n      fee: CurrencyAmount;\n    }\n    | {\n      amountOut: TokenAmount;\n      minAmountOut: TokenAmount;\n      currentPrice: Price;\n      executionPrice: Price | null;\n      priceImpact: Percent;\n      fee: CurrencyAmount;\n    } => {\n    const tokenIn = amountIn instanceof TokenAmount ? amountIn.token : Token.WSOL;\n    const tokenOut = currencyOut instanceof Token ? currencyOut : Token.WSOL;\n    logger.assertArgument(\n      this.includesToken(tokenIn, poolKeys) && this.includesToken(tokenOut, poolKeys),\n      \"token not match with pool\",\n      \"poolKeys\",\n      { poolKeys, tokenIn, tokenOut },\n    );\n\n    const { baseReserve, quoteReserve } = poolInfo;\n    logger.debug(\"baseReserve:\", baseReserve.toString());\n    logger.debug(\"quoteReserve:\", quoteReserve.toString());\n\n    const currencyIn = amountIn instanceof TokenAmount ? amountIn.token : amountIn.currency;\n    logger.debug(\"currencyIn:\", currencyIn);\n    logger.debug(\"amountIn:\", amountIn.toFixed());\n    logger.debug(\"currencyOut:\", currencyOut);\n    logger.debug(\"slippage:\", `${slippage.toSignificant()}%`);\n\n    const reserves = [baseReserve, quoteReserve];\n\n    // input is fixed\n    const input = this._getAmountSide(amountIn, poolKeys);\n    if (input === \"quote\") {\n      reserves.reverse();\n    }\n    logger.debug(\"input side:\", input);\n\n    const [reserveIn, reserveOut] = reserves;\n\n    let currentPrice;\n    if (poolKeys.version === 4) {\n      currentPrice = new Price(currencyIn, reserveIn, currencyOut, reserveOut);\n    } else {\n      const p = getStablePrice(modelData, baseReserve.toNumber(), quoteReserve.toNumber(), false);\n      if (input === \"quote\") currentPrice = new Price(currencyIn, new BN(p * 1e6), currencyOut, new BN(1e6));\n      else currentPrice = new Price(currencyIn, new BN(1e6), currencyOut, new BN(p * 1e6));\n    }\n\n    logger.debug(\"currentPrice:\", `1 ${currencyIn.symbol} ≈ ${currentPrice.toFixed()} ${currencyOut.symbol}`);\n    logger.debug(\n      \"currentPrice invert:\",\n      `1 ${currencyOut.symbol} ≈ ${currentPrice.invert().toFixed()} ${currencyIn.symbol}`,\n    );\n\n    const amountInRaw = amountIn.raw;\n    let amountOutRaw = ZERO;\n    let feeRaw = ZERO;\n\n    if (!amountInRaw.isZero()) {\n      if (poolKeys.version === 4) {\n        feeRaw = amountInRaw.mul(LIQUIDITY_FEES_NUMERATOR).div(LIQUIDITY_FEES_DENOMINATOR);\n        const amountInWithFee = amountInRaw.sub(feeRaw);\n\n        const denominator = reserveIn.add(amountInWithFee);\n        amountOutRaw = reserveOut.mul(amountInWithFee).div(denominator);\n      } else {\n        feeRaw = amountInRaw.mul(new BN(2)).div(new BN(10000));\n        const amountInWithFee = amountInRaw.sub(feeRaw);\n        if (input === \"quote\")\n          amountOutRaw = new BN(\n            getDyByDxBaseIn(modelData, quoteReserve.toNumber(), baseReserve.toNumber(), amountInWithFee.toNumber()),\n          );\n        else {\n          amountOutRaw = new BN(\n            getDxByDyBaseIn(modelData, quoteReserve.toNumber(), baseReserve.toNumber(), amountInWithFee.toNumber()),\n          );\n        }\n      }\n    }\n\n    const _slippage = new Percent(ONE).add(slippage);\n    const minAmountOutRaw = _slippage.invert().mul(amountOutRaw).quotient;\n\n    const amountOut =\n      currencyOut instanceof Token\n        ? new TokenAmount(currencyOut, amountOutRaw)\n        : new CurrencyAmount(currencyOut, amountOutRaw);\n    const minAmountOut =\n      currencyOut instanceof Token\n        ? new TokenAmount(currencyOut, minAmountOutRaw)\n        : new CurrencyAmount(currencyOut, minAmountOutRaw);\n    logger.debug(\"amountOut:\", amountOut.toFixed());\n    logger.debug(\"minAmountOut:\", minAmountOut.toFixed());\n\n    let executionPrice = new Price(currencyIn, amountInRaw.sub(feeRaw), currencyOut, amountOutRaw);\n    if (!amountInRaw.isZero() && !amountOutRaw.isZero()) {\n      executionPrice = new Price(currencyIn, amountInRaw.sub(feeRaw), currencyOut, amountOutRaw);\n      logger.debug(\"executionPrice:\", `1 ${currencyIn.symbol} ≈ ${executionPrice.toFixed()} ${currencyOut.symbol}`);\n      logger.debug(\n        \"executionPrice invert:\",\n        `1 ${currencyOut.symbol} ≈ ${executionPrice.invert().toFixed()} ${currencyIn.symbol}`,\n      );\n    }\n\n    const priceImpactDenominator = executionPrice.denominator.mul(currentPrice.numerator)\n    const priceImpactNumerator = executionPrice.numerator.mul(currentPrice.denominator).sub(priceImpactDenominator).abs()\n    const priceImpact = new Percent(priceImpactNumerator, priceImpactDenominator)\n\n    logger.debug(\"priceImpact:\", `${priceImpact.toSignificant()}%`);\n\n    const fee =\n      currencyIn instanceof Token ? new TokenAmount(currencyIn, feeRaw) : new CurrencyAmount(currencyIn, feeRaw);\n\n    return {\n      amountOut,\n      minAmountOut,\n      currentPrice,\n      executionPrice,\n      priceImpact,\n      fee,\n    };\n  };\n\n  /**\n   * Compute input currency amount of swap\n   *\n   * @param params - {@link ComputeCurrencyAmountInParams}\n   *\n   * @returns\n   * amountIn - currency amount without slippage\n   * @returns\n   * maxAmountIn - currency amount with slippage\n   */\n  static computeAmountIn({ poolKeys, poolInfo, amountOut, currencyIn, slippage }: LiquidityComputeAmountInParams):\n    | {\n      amountIn: CurrencyAmount;\n      maxAmountIn: CurrencyAmount;\n      currentPrice: Price;\n      executionPrice: Price | null;\n      priceImpact: Percent;\n    }\n    | {\n      amountIn: TokenAmount;\n      maxAmountIn: TokenAmount;\n      currentPrice: Price;\n      executionPrice: Price | null;\n      priceImpact: Percent;\n    } {\n    const { baseReserve, quoteReserve } = poolInfo;\n    logger.debug(\"baseReserve:\", baseReserve.toString());\n    logger.debug(\"quoteReserve:\", quoteReserve.toString());\n\n    const currencyOut = amountOut instanceof TokenAmount ? amountOut.token : amountOut.currency;\n    logger.debug(\"currencyOut:\", currencyOut);\n    logger.debug(\"amountOut:\", amountOut.toFixed());\n    logger.debug(\"currencyIn:\", currencyIn);\n    logger.debug(\"slippage:\", `${slippage.toSignificant()}%`);\n\n    const reserves = [baseReserve, quoteReserve];\n\n    // output is fixed\n    const output = this._getAmountSide(amountOut, poolKeys);\n    if (output === \"base\") {\n      reserves.reverse();\n    }\n    logger.debug(\"output side:\", output);\n\n    const [reserveIn, reserveOut] = reserves;\n\n    const currentPrice = new Price(currencyIn, reserveIn, currencyOut, reserveOut);\n    logger.debug(\"currentPrice:\", `1 ${currencyIn.symbol} ≈ ${currentPrice.toFixed()} ${currencyOut.symbol}`);\n    logger.debug(\n      \"currentPrice invert:\",\n      `1 ${currencyOut.symbol} ≈ ${currentPrice.invert().toFixed()} ${currencyIn.symbol}`,\n    );\n\n    let amountInRaw = ZERO;\n    let amountOutRaw = amountOut.raw;\n    if (!amountOutRaw.isZero()) {\n      // if out > reserve, out = reserve - 1\n      if (amountOutRaw.gt(reserveOut)) {\n        amountOutRaw = reserveOut.sub(ONE);\n      }\n\n      const denominator = reserveOut.sub(amountOutRaw);\n      const amountInWithoutFee = reserveIn.mul(amountOutRaw).div(denominator);\n\n      amountInRaw = amountInWithoutFee\n        .mul(LIQUIDITY_FEES_DENOMINATOR)\n        .div(LIQUIDITY_FEES_DENOMINATOR.sub(LIQUIDITY_FEES_NUMERATOR));\n    }\n\n    const _slippage = new Percent(ONE).add(slippage);\n    const maxAmountInRaw = _slippage.mul(amountInRaw).quotient;\n\n    const amountIn =\n      currencyIn instanceof Token\n        ? new TokenAmount(currencyIn, amountInRaw)\n        : new CurrencyAmount(currencyIn, amountInRaw);\n    const maxAmountIn =\n      currencyIn instanceof Token\n        ? new TokenAmount(currencyIn, maxAmountInRaw)\n        : new CurrencyAmount(currencyIn, maxAmountInRaw);\n    logger.debug(\"amountIn:\", amountIn.toFixed());\n    logger.debug(\"maxAmountIn:\", maxAmountIn.toFixed());\n\n    let executionPrice: Price | null = null;\n    if (!amountInRaw.isZero() && !amountOutRaw.isZero()) {\n      executionPrice = new Price(currencyIn, amountInRaw, currencyOut, amountOutRaw);\n      logger.debug(\"executionPrice:\", `1 ${currencyIn.symbol} ≈ ${executionPrice.toFixed()} ${currencyOut.symbol}`);\n      logger.debug(\n        \"executionPrice invert:\",\n        `1 ${currencyOut.symbol} ≈ ${executionPrice.invert().toFixed()} ${currencyIn.symbol}`,\n      );\n    }\n\n    const priceImpact = this._computePriceImpact(currentPrice, amountInRaw, amountOutRaw);\n    logger.debug(\"priceImpact:\", `${priceImpact.toSignificant()}%`);\n\n    return {\n      amountIn,\n      maxAmountIn,\n      currentPrice,\n      executionPrice,\n      priceImpact,\n    };\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { SerumVersion } from \"./type\";\n\n/* ================= program public keys ================= */\nexport const _SERUM_PROGRAM_ID_V3 = \"9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin\";\nexport const SERUM_PROGRAM_ID_V3 = new PublicKey(_SERUM_PROGRAM_ID_V3);\n\n// serum program id string => serum version\nexport const SERUM_PROGRAMID_TO_VERSION: {\n  [key: string]: SerumVersion;\n} = {\n  [_SERUM_PROGRAM_ID_V3]: 3,\n};\n\n// serum version => serum program id\nexport const SERUM_VERSION_TO_PROGRAMID: { [key in SerumVersion]?: PublicKey } & {\n  [K: number]: PublicKey;\n} = {\n  3: SERUM_PROGRAM_ID_V3,\n};\n","import { blob, GetStructureSchema, publicKey, struct, u64 } from \"../marshmallow\";\n\n/* ================= state layouts ================= */\nexport const MARKET_STATE_LAYOUT_V3 = struct([\n  blob(5),\n\n  blob(8), // accountFlagsLayout('accountFlags'),\n\n  publicKey(\"ownAddress\"),\n\n  u64(\"vaultSignerNonce\"),\n\n  publicKey(\"baseMint\"),\n  publicKey(\"quoteMint\"),\n\n  publicKey(\"baseVault\"),\n  u64(\"baseDepositsTotal\"),\n  u64(\"baseFeesAccrued\"),\n\n  publicKey(\"quoteVault\"),\n  u64(\"quoteDepositsTotal\"),\n  u64(\"quoteFeesAccrued\"),\n\n  u64(\"quoteDustThreshold\"),\n\n  publicKey(\"requestQueue\"),\n  publicKey(\"eventQueue\"),\n\n  publicKey(\"bids\"),\n  publicKey(\"asks\"),\n\n  u64(\"baseLotSize\"),\n  u64(\"quoteLotSize\"),\n\n  u64(\"feeRateBps\"),\n\n  u64(\"referrerRebatesAccrued\"),\n\n  blob(7),\n]);\n\nexport type MarketStateLayoutV3 = typeof MARKET_STATE_LAYOUT_V3;\nexport type MarketStateLayout = MarketStateLayoutV3;\n\nexport type MarketStateV3 = GetStructureSchema<MarketStateLayoutV3>;\nexport type MarketState = MarketStateV3;\n\n/* ================= index ================= */\n// version => market state layout\nexport const MARKET_VERSION_TO_STATE_LAYOUT: {\n  [version: number]: MarketStateLayout;\n} = {\n  3: MARKET_STATE_LAYOUT_V3,\n};\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { Logger } from \"../common\";\n\nimport { SERUM_PROGRAMID_TO_VERSION, SERUM_VERSION_TO_PROGRAMID } from \"./id\";\nimport { MARKET_VERSION_TO_STATE_LAYOUT } from \"./layout\";\n\nconst logger = Logger.from(\"Serum\");\n\nexport class Market {\n  /* ================= get version and program id ================= */\n  static getProgramId(version: number) {\n    const programId = SERUM_VERSION_TO_PROGRAMID[version];\n    logger.assertArgument(!!programId, \"invalid version\", \"version\", version);\n\n    return programId;\n  }\n\n  static getVersion(programId: PublicKey) {\n    const programIdString = programId.toBase58();\n\n    const version = SERUM_PROGRAMID_TO_VERSION[programIdString];\n    logger.assertArgument(!!version, \"invalid program id\", \"programId\", programIdString);\n\n    return version;\n  }\n\n  /* ================= get layout ================= */\n  static getStateLayout(version: number) {\n    const STATE_LAYOUT = MARKET_VERSION_TO_STATE_LAYOUT[version];\n    logger.assertArgument(!!STATE_LAYOUT, \"invalid version\", \"version\", version);\n\n    return STATE_LAYOUT;\n  }\n\n  static getLayouts(version: number) {\n    return { state: this.getStateLayout(version) };\n  }\n\n  /* ================= get key ================= */\n  static getAssociatedAuthority({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const seeds = [marketId.toBuffer()];\n\n    let nonce = 0;\n    let publicKey: PublicKey;\n\n    while (nonce < 100) {\n      try {\n        // Buffer.alloc(7) nonce u64\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]), Buffer.alloc(7));\n        publicKey = PublicKey.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce++;\n        continue;\n      }\n      return { publicKey, nonce };\n    }\n\n    return logger.throwArgumentError(\"unable to find a viable program address nonce\", \"params\", {\n      programId,\n      marketId,\n    });\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { seq, struct, u64 } from \"../marshmallow\";\n\nexport const ModelDataPubkey = new PublicKey(\"CDSr3ssLcRB6XYPJwAfFt18MZvEZp4LjHcvzBVZ45duo\");\nconst ELEMENT_SIZE = 50000;\n\nexport const DataElement = struct([u64(\"x\"), u64(\"y\"), u64(\"price\")]);\n\nexport const ModelDataInfo = struct([\n  u64(\"accountType\"),\n  u64(\"status\"),\n  u64(\"multiplier\"),\n  u64(\"validDataCount\"),\n  seq(DataElement, ELEMENT_SIZE, \"DataElement\"),\n]);\n\nexport interface stableModelLayout {\n  accountType: number;\n  status: number;\n  multiplier: number;\n  validDataCount: number;\n  DataElement: { x: number; y: number; price: number }[];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction estimateRangeByXyReal(_xReal: number, _yReal: number) {\n  return [0, ELEMENT_SIZE - 2];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction estimateRangeByX(_x: number) {\n  return [0, ELEMENT_SIZE - 2];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction estimateRangeByY(_y: number) {\n  return [0, ELEMENT_SIZE - 2];\n}\n\nfunction getMininumRangeByXyReal(\n  layoutData: stableModelLayout,\n  xReal: number,\n  yReal: number,\n): [number, number, boolean] {\n  const [min, max] = estimateRangeByXyReal(xReal, yReal);\n  let minRangeIdx = min;\n  let maxRangeIdx = max;\n  let mid = 0;\n  const target = (xReal * layoutData.multiplier) / yReal;\n  while (minRangeIdx <= maxRangeIdx) {\n    mid = Math.floor((maxRangeIdx + minRangeIdx) / 2);\n    if (mid === 0 || mid >= ELEMENT_SIZE - 2) {\n      return [mid, mid, false];\n    }\n    const cur = (layoutData.DataElement[mid].x * layoutData.multiplier) / layoutData.DataElement[mid].y;\n    const left = (layoutData.DataElement[mid - 1].x * layoutData.multiplier) / layoutData.DataElement[mid - 1].y;\n    const right = (layoutData.DataElement[mid + 1].x * layoutData.multiplier) / layoutData.DataElement[mid + 1].y;\n\n    if (target === cur) {\n      return [mid, mid, true];\n    } else if (target === left) {\n      return [mid - 1, mid - 1, true];\n    } else if (target === right) {\n      return [mid + 1, mid + 1, true];\n    } else if (target < left) {\n      maxRangeIdx = mid - 1;\n    } else if (target > left && target < cur) {\n      return [mid - 1, mid, true];\n    } else if (target > cur && target < right) {\n      return [mid, mid + 1, true];\n    } else {\n      minRangeIdx = mid + 1;\n    }\n  }\n  return [mid, mid, false];\n}\nfunction getRatio(layoutData: stableModelLayout, xReal: number, yReal: number) {\n  const [minRangeIdx, maxRangeIdx, find] = getMininumRangeByXyReal(layoutData, xReal, yReal);\n\n  if (!find) {\n    return 0;\n  }\n\n  if (minRangeIdx === maxRangeIdx) {\n    const x = layoutData.DataElement[minRangeIdx].x;\n    const ratio = (xReal * layoutData.multiplier) / x;\n    return ratio;\n  } else {\n    const x1 = layoutData.DataElement[minRangeIdx].x;\n    const y1 = layoutData.DataElement[minRangeIdx].y;\n    const x2 = layoutData.DataElement[maxRangeIdx].x;\n    const y2 = layoutData.DataElement[maxRangeIdx].y;\n\n    const xDenominator = yReal * (x2 * y1 - x1 * y2);\n    const xNumerator1 = x1 * xDenominator;\n    const xNumerator2 = (x2 - x1) * (xReal * y1 - x1 * yReal) * y2;\n\n    const xNumerator = xNumerator1 + xNumerator2;\n    const ratio = (xReal * layoutData.multiplier * xDenominator) / xNumerator;\n    return ratio;\n  }\n}\n\nfunction realToTable(layoutData: stableModelLayout, realValue: number, ratio: number): number {\n  return (realValue * layoutData.multiplier) / ratio;\n}\n\nfunction tableToReal(layoutData: stableModelLayout, tableValue: number, ratio: number): number {\n  return (tableValue * ratio) / layoutData.multiplier;\n}\n\nfunction getMinimumRangeByX(layoutData: stableModelLayout, x: number): [number, number, boolean] {\n  const [min, max] = estimateRangeByX(x);\n  let minRangeIdx = min;\n  let maxRangeIdx = max;\n  let mid = 0;\n  const target = x;\n  while (minRangeIdx < maxRangeIdx) {\n    mid = Math.floor((maxRangeIdx + minRangeIdx) / 2);\n\n    if (mid <= 0 || mid > ELEMENT_SIZE - 2) {\n      return [mid, mid, false];\n    }\n    const cur = layoutData.DataElement[mid].x;\n    const left = layoutData.DataElement[mid - 1].x;\n    const right = layoutData.DataElement[mid + 1].x;\n\n    if (target === cur) return [mid, mid, true];\n    else if (target === left) return [mid - 1, mid - 1, true];\n    else if (target === right) return [mid + 1, mid + 1, true];\n    else if (target < left) maxRangeIdx = mid - 1;\n    else if (target > left && target < cur) return [mid - 1, mid, true];\n    else if (target > cur && target < right) return [mid, mid + 1, true];\n    else minRangeIdx = mid + 1;\n  }\n  return [mid, mid, false];\n}\n\nfunction getMinimumRangeByY(layoutData: stableModelLayout, y: number): [number, number, boolean] {\n  const [min, max] = estimateRangeByY(y);\n  let minRangeIdx = min;\n  let maxRangeIdx = max;\n  let mid = 0;\n  const target = y;\n  while (minRangeIdx <= maxRangeIdx) {\n    mid = Math.floor((maxRangeIdx + minRangeIdx) / 2);\n    if (mid <= 0 || mid >= ELEMENT_SIZE - 2) {\n      return [mid, mid, false];\n    }\n\n    const cur = layoutData.DataElement[mid].y;\n    const left = layoutData.DataElement[mid - 1].y;\n    const right = layoutData.DataElement[mid + 1].y;\n    if (target === cur) return [mid, mid, true];\n    else if (target === left) return [mid - 1, mid - 1, true];\n    else if (target === right) return [mid + 1, mid + 1, true];\n    else if (target < right) {\n      minRangeIdx = mid + 1;\n    } else if (target < left && target > cur) return [mid - 1, mid, true];\n    else if (target < cur && target > right) return [mid, mid + 1, true];\n    else maxRangeIdx = mid - 1;\n  }\n  return [mid, mid, false];\n}\n\nfunction getDataByX(\n  layoutData: stableModelLayout,\n  x: number,\n  dx: number,\n  priceUp: boolean,\n): [number, number, boolean, boolean] {\n  const xWithDx = priceUp ? x + dx : x - dx;\n  const [minIdx, maxIdx, find] = getMinimumRangeByX(layoutData, xWithDx);\n  if (!find) return [0, 0, false, find];\n\n  if (minIdx === maxIdx) return [layoutData.DataElement[maxIdx].price, layoutData.DataElement[maxIdx].y, false, find];\n  else {\n    const x1 = layoutData.DataElement[minIdx].x;\n    const x2 = layoutData.DataElement[maxIdx].x;\n    const p1 = layoutData.DataElement[minIdx].price;\n    const p2 = layoutData.DataElement[maxIdx].price;\n    const y1 = layoutData.DataElement[minIdx].y;\n    const y2 = layoutData.DataElement[maxIdx].y;\n\n    if (x >= x1 && x <= x2) {\n      if (priceUp) return [p2, y2, true, find];\n      else return [p1, y1, true, find];\n    } else {\n      let p, y;\n      if (priceUp) {\n        p = p1 + ((p2 - p1) * (x - x1)) / (x2 - x1);\n        y = y1 - ((xWithDx - x1) * layoutData.multiplier) / p2;\n      } else {\n        p = p1 + ((p2 - p1) * (x - x1)) / (x2 - x1);\n        y = y2 + ((x2 - xWithDx) * layoutData.multiplier) / p1;\n      }\n      return [p, y, false, find];\n    }\n  }\n}\n\nfunction getDataByY(\n  layoutData: stableModelLayout,\n  y: number,\n  dy: number,\n  priceUp: boolean,\n): [number, number, boolean, boolean] {\n  const yWithDy = priceUp ? y - dy : y + dy;\n  const [minIdx, maxIdx, find] = getMinimumRangeByY(layoutData, yWithDy);\n  if (!find) return [0, 0, false, find];\n  if (minIdx === maxIdx) return [layoutData.DataElement[maxIdx].price, layoutData.DataElement[maxIdx].x, false, find];\n  else {\n    const x1 = layoutData.DataElement[minIdx].x;\n    const x2 = layoutData.DataElement[maxIdx].x;\n    const p1 = layoutData.DataElement[minIdx].price;\n    const p2 = layoutData.DataElement[maxIdx].price;\n    const y1 = layoutData.DataElement[minIdx].y;\n    const y2 = layoutData.DataElement[maxIdx].y;\n\n    if (y >= y2 && y <= y1) {\n      return priceUp ? [p2, x2, true, find] : [p1, x1, true, find];\n    } else {\n      let p, x;\n      if (priceUp) {\n        p = p1 + ((p2 - p1) * (y1 - y)) / (y1 - y2);\n        x = x1 + (p2 * (y1 - yWithDy)) / layoutData.multiplier;\n      } else {\n        p = p1 + ((p2 - p1) * (y1 - y)) / (y1 - y2);\n        x = x2 - (p1 * (yWithDy - y2)) / layoutData.multiplier;\n      }\n      return [p, x, false, find];\n    }\n  }\n}\n\nfunction getMidPrice(layoutData: stableModelLayout, x: number): number {\n  const ret = getDataByX(layoutData, x, 0, false);\n  if (ret[3]) return ret[0];\n  else return 0;\n}\n\nexport function getDyByDxBaseIn(layoutData: stableModelLayout, xReal: number, yReal: number, dxReal: number) {\n  const ratio = getRatio(layoutData, xReal, yReal);\n  const x = realToTable(layoutData, xReal, ratio);\n  const y = realToTable(layoutData, yReal, ratio);\n  const dx = realToTable(layoutData, dxReal, ratio);\n  const priceUp = true;\n  const [p, y2, lessTrade, find] = getDataByX(layoutData, x, dx, priceUp);\n  if (!find) return 0;\n  if (lessTrade) {\n    const dyReal = (dxReal * layoutData.multiplier) / p;\n    return dyReal;\n  } else {\n    const dy = y - y2;\n    const dyReal = tableToReal(layoutData, dy, ratio);\n    return dyReal;\n  }\n}\n\nexport function getDxByDyBaseIn(layoutData: stableModelLayout, xReal: number, yReal: number, dyReal: number) {\n  const ratio = getRatio(layoutData, xReal, yReal);\n  const x = realToTable(layoutData, xReal, ratio);\n  const y = realToTable(layoutData, yReal, ratio);\n  const dy = realToTable(layoutData, dyReal, ratio);\n  const priceUp = false;\n  const [p, x2, lessTrade, find] = getDataByY(layoutData, y, dy, priceUp);\n  if (!find) return 0;\n  if (lessTrade) {\n    const dxReal = (dyReal * p) / layoutData.multiplier;\n    return dxReal;\n  } else {\n    const dx = x - x2;\n    const dxReal = tableToReal(layoutData, dx, ratio);\n    return dxReal;\n  }\n}\n\nexport function formatLayout(buffer: Buffer): stableModelLayout {\n  const layoutInfo = ModelDataInfo.decode(buffer);\n  return {\n    accountType: layoutInfo.accountType.toNumber(),\n    status: layoutInfo.status.toNumber(),\n    multiplier: layoutInfo.multiplier.toNumber(),\n    validDataCount: layoutInfo.validDataCount.toNumber(),\n    DataElement: layoutInfo.DataElement.map((item: any) => ({\n      x: item.x.toNumber(),\n      y: item.y.toNumber(),\n      price: item.price.toNumber(),\n    })),\n  };\n}\n\nexport function getStablePrice(layoutData: stableModelLayout, coinReal: number, pcReal: number, baseCoin: boolean) {\n  const price =\n    getMidPrice(layoutData, realToTable(layoutData, coinReal, getRatio(layoutData, coinReal, pcReal))) /\n    layoutData.multiplier;\n  return baseCoin ? price : 1 / price;\n}\n"],"mappings":"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M,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,KACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,gBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,kBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,QAAS,CACP,OAAQ,UACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,sBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,eACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CAAC,CACf,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,kBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CAAC,CACf,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAA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N,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,GAAI,CACF,OAAQ,KACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,KACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CAAC,CACf,EACA,MAAO,CACL,OAAQ,QACR,KAAM,aACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,gBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,kBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,KACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,aACN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","names":["route_exports","__export","ROUTE_PROGRAMID_TO_VERSION","ROUTE_PROGRAM_ID_V1","ROUTE_VERSION_TO_LIQUIDITY_VERSION","ROUTE_VERSION_TO_PROGRAMID","Route","_ROUTE_PROGRAM_ID_V1","__toCommonJS","import_web3","_ROUTE_PROGRAM_ID_V1","ROUTE_PROGRAM_ID_V1","ROUTE_PROGRAMID_TO_VERSION","ROUTE_VERSION_TO_PROGRAMID","ROUTE_VERSION_TO_LIQUIDITY_VERSION","import_web3","import_lodash","import_spl_token","import_web3","import_big","import_bn","import_web3","import_bn","import_web3","import_web3","version","import_colors","_permanentCensorErrors","_censorErrors","LogLevels","_moduleLogLevel","_globalLogger","_checkNormalize","missing","form","error","_normalizeError","LogLevel","ErrorCode","HEX","perfectDisplay","value","deeping","_value","hex","obj","k","v","_Logger","moduleName","version","logLevel","args","level","message","code","params","messageDetails","key","reason","name","condition","count","expectedCount","target","kind","censorship","permanent","Logger","import_spl_token","import_web3","logger","Logger","SYSTEM_PROGRAM_ID","MEMO_PROGRAM_ID","RENT_PROGRAM_ID","METADATA_PROGRAM_ID","validateAndParsePublicKey","publicKey","findProgramAddress","seeds","programId","nonce","AccountMeta","isSigner","AccountMetaReadonly","import_web3","import_bn","chunkArray","arr","chunkSize","cache","tmp","import_web3","logger","Logger","getMultipleAccountsInfo","connection","publicKeys","config","__async","batchRequest","commitment","__spreadValues","chunkedKeys","chunkArray","results","batch","keys","key","unsafeRes","accountInfo","data","executable","lamports","owner","rentEpoch","error","forecastTransactionSize","instructions","signers","logger","transaction","error","simulateMultipleInstruction","connection","keyword","batchRequest","__async","feePayer","transactions","instruction","results","simulateTransaction","i","Logger","logs","result","filteredLog","log","parseSimulateLogToJson","parseSimulateValue","key","getLatestBlockhash","encodedTransactions","signData","encodedTransaction","batch","keys","reqData","itemReqIndex","ii","import_bn","import_bn","ZERO","BN","ONE","TWO","THREE","FIVE","TEN","_100","_1000","_10000","logger","Logger","MAX_SAFE","parseBigNumberish","value","BN","tenExponentiate","shift","TEN","divCeil","a","b","dm","SOL","WSOL","MAINNET_SPL_TOKENS","__spreadValues","WSOL","MAINNET_LP_TOKENS","DEVNET_SPL_TOKENS","__spreadValues","WSOL","TESTNET_SPL_TOKENS","__spreadValues","WSOL","logger","Logger","_Currency","decimals","symbol","name","Currency","SOL","_Token","Currency","mint","decimals","symbol","name","validateAndParsePublicKey","other","Token","WSOL","SOL","currencyEquals","currencyA","currencyB","Token","import_big","import_decimal","import_toformat","toFormat","_toFarmat","to_format_default","logger","Logger","Big","to_format_default","_Big","Decimal","_Decimal","toSignificantRounding","toFixedRounding","Fraction","numerator","denominator","ONE","parseBigNumberish","other","otherParsed","significantDigits","format","rounding","quotient","decimalPlaces","logger","Logger","Big","to_format_default","_Big","splitNumber","num","decimals","integral","fractional","splited","CurrencyAmount","Fraction","currency","amount","isRaw","parsedAmount","BN","multiplier","TEN","parseBigNumberish","integralAmount","fractionalAmount","other","currencyEquals","significantDigits","format","rounding","decimalPlaces","TokenAmount","token","_100_PERCENT","Fraction","_100","Percent","significantDigits","format","rounding","decimalPlaces","logger","Logger","Price","Fraction","baseCurrency","denominator","quoteCurrency","numerator","tenExponentiate","other","currencyEquals","fraction","significantDigits","format","rounding","decimalPlaces","import_web3","import_bn","import_buffer_layout","Layout","_Layout","Structure","_Structure","UInt","_UInt","seq","_seq","blob","_blob","BNLayout","Layout","span","signed","property","blob","b","offset","num","BN","src","u8","property","UInt","u32","u64","BNLayout","u128","WrappedLayout","Layout","layout","decoder","encoder","property","b","offset","src","publicKey","blob","key","Structure","b","offset","struct","fields","property","decodePrefixes","seq","elementLayout","count","property","parsedCount","superCount","target","countProperty","value","SPL_MINT_LAYOUT","struct","u32","publicKey","u64","u8","SPL_ACCOUNT_LAYOUT","import_spl_token","import_web3","import_bn","import_web3","AMM_CONFIG_SEED","POOL_SEED","POOL_VAULT_SEED","POOL_REWARD_VAULT_SEED","POSITION_SEED","TICK_ARRAY_SEED","OPERATION_SEED","getATAAddress","owner","mint","findProgramAddress","Spl","mint","owner","getATAAddress","associatedAccount","payer","_0","__async","connection","amount","commitment","instructions","balanceNeeded","SPL_ACCOUNT_LAYOUT","lamports","parseBigNumberish","BN","newAccount","validateAndParsePublicKey","WSOL","signers","newInstructions","decimals","mintAuthority","freezeAuthority","dest","authority","multiSigners","tokenAccount","source","destination","programId","account","keys","dataLayout","u8","data","Base","params","tokenAccounts","mint","owner","config","associatedOnly","__spreadValues","_tokenAccounts","accountInfo","a","b","ata","Spl","tokenAccount","pubkey","__async","connection","side","amount","payer","frontInstructions","endInstructions","signers","bypassAssociatedCheck","Token","newTokenAccount","_a","_b","createInfo","accounts","i","balanceNeeded","createAccountIns","initAccountIns","import_web3","import_bn","import_web3","_LIQUIDITY_PROGRAM_ID_V4","LIQUIDITY_PROGRAM_ID_V4","_LIQUIDITY_PROGRAM_ID_V5","LIQUIDITY_PROGRAM_ID_V5","LIQUIDITY_PROGRAMID_TO_VERSION","LIQUIDITY_VERSION_TO_PROGRAMID","LIQUIDITY_VERSION_TO_SERUM_VERSION","LIQUIDITY_STATE_LAYOUT_V4","struct","u64","u128","publicKey","seq","LIQUIDITY_STATE_LAYOUT_V5","LIQUIDITY_VERSION_TO_STATE_LAYOUT","import_web3","import_bn","import_web3","_SERUM_PROGRAM_ID_V3","SERUM_PROGRAM_ID_V3","SERUM_PROGRAMID_TO_VERSION","SERUM_VERSION_TO_PROGRAMID","MARKET_STATE_LAYOUT_V3","struct","blob","publicKey","u64","MARKET_VERSION_TO_STATE_LAYOUT","import_web3","logger","Logger","Market","version","programId","SERUM_VERSION_TO_PROGRAMID","programIdString","SERUM_PROGRAMID_TO_VERSION","STATE_LAYOUT","MARKET_VERSION_TO_STATE_LAYOUT","marketId","seeds","nonce","publicKey","seedsWithNonce","err","import_web3","ModelDataPubkey","ELEMENT_SIZE","DataElement","struct","u64","ModelDataInfo","seq","estimateRangeByXyReal","_xReal","_yReal","estimateRangeByX","_x","estimateRangeByY","_y","getMininumRangeByXyReal","layoutData","xReal","yReal","min","max","minRangeIdx","maxRangeIdx","mid","target","cur","left","right","getRatio","find","x","x1","y1","x2","y2","xDenominator","xNumerator1","xNumerator2","xNumerator","realToTable","realValue","ratio","tableToReal","tableValue","getMinimumRangeByX","getMinimumRangeByY","y","getDataByX","dx","priceUp","xWithDx","minIdx","maxIdx","p1","p2","p","getDataByY","dy","yWithDy","getMidPrice","ret","getDyByDxBaseIn","dxReal","lessTrade","getDxByDyBaseIn","dyReal","formatLayout","buffer","layoutInfo","item","getStablePrice","coinReal","pcReal","baseCoin","price","logger","Logger","modelData","initStableModelLayout","connection","__async","acc","ModelDataPubkey","formatLayout","LIQUIDITY_FEES_NUMERATOR","BN","LIQUIDITY_FEES_DENOMINATOR","_Liquidity","Base","version","programId","LIQUIDITY_VERSION_TO_PROGRAMID","logger","programIdString","LIQUIDITY_PROGRAMID_TO_VERSION","serumVersion","LIQUIDITY_VERSION_TO_SERUM_VERSION","STATE_LAYOUT","LIQUIDITY_VERSION_TO_STATE_LAYOUT","marketId","publicKey","findProgramAddress","marketVersion","baseMint","quoteMint","baseDecimals","quoteDecimals","marketProgramId","id","lpMint","authority","nonce","baseVault","quoteVault","lpVault","openOrders","targetOrders","withdrawQueue","marketAuthority","Market","params","poolKeys","userKeys","baseAmountIn","quoteAmountIn","fixedSide","LAYOUT","struct","u8","u64","data","parseBigNumberish","keys","AccountMetaReadonly","AccountMeta","ModelDataPubkey","__async","connection","amountInA","amountInB","config","tokenAccounts","owner","payer","bypassAssociatedCheck","__spreadValues","tokenA","TokenAmount","Token","tokenB","tokenAccountA","tokenAccountB","lpTokenAccount","tokens","_tokenAccounts","rawAmounts","sideA","_fixedSide","baseToken","quoteToken","baseTokenAccount","quoteTokenAccount","baseAmountRaw","quoteAmountRaw","frontInstructions","endInstructions","signers","_baseTokenAccount","_quoteTokenAccount","_lpTokenAccount","transaction","amountIn","amountOut","minAmountOut","maxAmountIn","tokenIn","tokenOut","tokenAccountIn","tokenAccountOut","amountInRaw","amountOutRaw","_tokenAccountIn","_tokenAccountOut","SYSTEM_PROGRAM_ID","startTime","baseAmount","quoteAmount","Spl","lsl","supported","v","serumProgramId","poolsAccountInfo","stateLayout","accounts","info","__spreadProps","error","Logger","flatPoolsAccountInfo","tempPoolsKeys","pubkey","accountInfo","LIQUIDITY_STATE_LAYOUT","fields","status","baseDecimal","quoteDecimal","associatedPoolKeys","marketsInfo","getMultipleAccountsInfo","poolsKeys","index","marketInfo","MARKET_STATE_LAYOUT","marketBaseVault","marketQuoteVault","marketBids","marketAsks","marketEventQueue","_0","pools","initStableModelLayout","instructions","pool","simulateMultipleInstruction","log","json","parseSimulateLogToJson","parseSimulateValue","lpDecimals","baseReserve","quoteReserve","lpSupply","poolInfo","_status","token","sideB","amount","amountA","amountB","anotherCurrency","slippage","currencyIn","input","amountRaw","ZERO","divCeil","slippageAdjustedAmount","Percent","ONE","_anotherAmount","CurrencyAmount","_maxAnotherAmount","currentPrice","exactQuote","Price","Currency","currencyOut","reserves","output","reserveIn","reserveOut","denominator","maxAmountInRaw","executionPrice","priceImpact","Liquidity","p","getStablePrice","modelData","feeRaw","amountInWithFee","getDyByDxBaseIn","getDxByDyBaseIn","minAmountOutRaw","priceImpactDenominator","priceImpactNumerator","fee","logger","Logger","Route","Base","version","programId","ROUTE_VERSION_TO_PROGRAMID","programIdString","ROUTE_PROGRAMID_TO_VERSION","liquidityVersion","ROUTE_VERSION_TO_LIQUIDITY_VERSION","fromPoolId","middleMint","owner","publicKey","findProgramAddress","params","fixedSide","fromPoolKeys","toPoolKeys","userKeys","amountIn","amountOut","LAYOUT","struct","u8","u64","data","keys","parseBigNumberish","AccountMetaReadonly","SYSTEM_PROGRAM_ID","AccountMeta","ModelDataPubkey","ROUTE_PROGRAM_ID_V1","__async","connection","config","tokenAccounts","bypassAssociatedCheck","__spreadValues","tokenIn","TokenAmount","Token","tokenOut","tokenAccountIn","tokenAccountOut","fromPoolMints","toPoolMints","_middleMint","tokenAccountMiddle","amountInRaw","amountOutRaw","setupInstructions","setupSigners","swapInstructions","_tokenAccountIn","_tokenAccountOut","_tokenAccountMiddle","setupTransaction","swapTransaction","fromPoolInfo","toPoolInfo","currencyOut","slippage","fromPoolSwapEnabled","Liquidity","toPoolSwapEnabled","mints","decimals","mintIn","mintOut","xorMints","intersectionMints","index","middleMintDecimals","middleToken","minMiddleAmountOut","firstPriceImpact","firstFee","minAmountOut","secondPriceImpact","secondFee","executionPrice","currencyIn","Price"]}